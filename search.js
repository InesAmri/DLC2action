window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"dlc2action": {"fullname": "dlc2action", "modulename": "dlc2action", "kind": "module", "doc": "<p><code>dlc2action</code> is an action segmentation package that makes running and tracking experiments easy.</p>\n\n<h1 id=\"usage\">Usage</h1>\n\n<p><code>dlc2action</code> is designed to be modular.\nYou can use the high-level project interface for convenient experiment management or just import a metric\nor an SSL module if you want more freedom. Here are some tutorials for using the package.</p>\n\n<h2 id=\"project\">Project</h2>\n\n<p>Project is the class that can create and maintain configuration files and keep track of your experiments.</p>\n\n<h3 id=\"creating\">Creating</h3>\n\n<p>To start a new project, you can create a new <code>dlc2action.project.project.Project</code> instance in python. \nCheck <code>dlc2action.project.project.Project.print_data_types</code> and <code>dlc2action.project.project.Project.print_annotation_types</code> to see the implemented data \nand annotation types.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">dlc2action.project</span> <span class=\"kn\">import</span> <span class=\"n\">Project</span>\n\n<span class=\"n\">project</span> <span class=\"o\">=</span> <span class=\"n\">Project</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;project_name&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">data_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;data_type&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">annotation_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;annotation_type&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">data_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;path/to/data/folder&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">annotation_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;path/to/annotation/folder&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>A new folder will be created at <code>projects_path/project_name</code> with all the necessary files. The default projects path is\na <code>DLC2Action</code> folder that will be created in your home directory.\nThe project structure looks like this.</p>\n\n<pre><code>.\nproject_name\n\u251c\u2500\u2500 config                                             # Settings files\n\u251c\u2500\u2500 meta                                               # Project meta files (experiment records)\n\u251c\u2500\u2500 saved_datasets                                     # Pre-computed dataset files\n\u2514\u2500\u2500 results\n    \u251c\u2500\u2500 logs                                           # Training logs (human readable)\n    \u2502   \u2514\u2500\u2500 episode.txt\n    \u251c\u2500\u2500 models                                         # Model checkpoints\n    \u2502   \u2514\u2500\u2500 episode\n    \u2502       \u251c\u2500\u2500 epoch25.pt\n    \u2502       \u2514\u2500\u2500 epoch50.pt\n    \u251c\u2500\u2500 searches                                       # Hyperparameter search results (graphs)\n    \u2502   \u2514\u2500\u2500 search\n    \u2502       \u251c\u2500\u2500 search_param_importances.html_docs\n    \u2502       \u2514\u2500\u2500 search_contour.html_docs\n    \u251c\u2500\u2500 splits                                         # Split files\n    \u2502       \u251c\u2500\u2500 time_25.0%validation_10.0%test.txt\n    \u2502       \u2514\u2500\u2500 random_20.0%validation_10.0%test.txt\n    \u251c\u2500\u2500 suggestions                                    # Suggestion and active learning files\n    \u2502       \u2514\u2500\u2500 active_learning\n    \u2502           \u251c\u2500\u2500 video1_suggestion.pickle\n    \u2502           \u251c\u2500\u2500 video2_suggestion.pickle\n    \u2502           \u2514\u2500\u2500 al_points.pickle\n    \u2514\u2500\u2500 predictions                                    # Prediction files (pickled dictionaries)\n            \u251c\u2500\u2500 episode_epoch25.pickle\n            \u2514\u2500\u2500 episode_epoch50_newdata.pickle\n</code></pre>\n\n<p>You can find a more detailed explanation of the structure at <code>dlc2action.project</code>.</p>\n\n<p>After the project is created you can modify the parameters with the <code>dlc2action.project.project.Project.update_parameters</code> function.\nMake sure to start by filling out the required parameters. You can get a list of those and a code hint with \n<code>dlc2action.project.project.Project.list_blanks</code>.</p>\n\n<p>Run <code>project.help()</code> to find out more about other parameters you might want to modify.</p>\n\n<h3 id=\"training\">Training</h3>\n\n<p>When you want to start your experiments, just create a <code>dlc2action.project.project.Project</code> instance again\n(or use the one you created\nto initialize the project). This time you don't have to set any parameters except the project name (and, if\nyou used it when creating the project, <code>projects_path</code>).</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">dlc2action.project</span> <span class=\"kn\">import</span> <span class=\"n\">Project</span>\n<span class=\"n\">project</span> <span class=\"o\">=</span> <span class=\"n\">Project</span><span class=\"p\">(</span><span class=\"s1\">&#39;project_name&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>The first thing you will want to do is train some models. There are three ways to run a <em>training episode</em>\nin <code>dlc2action</code>.</p>\n\n<ol>\n<li><p><strong>Run a single episode</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">run_episode</span><span class=\"p\">(</span><span class=\"s1\">&#39;episode_1&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>We have now run a training episode with the default project parameters (read from the configuration files)\nand saved it in the meta files under the name <code>episode_1</code>.</p></li>\n<li><p><strong>Run multiple episodes in a row</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">run_episodes</span><span class=\"p\">([</span><span class=\"s1\">&#39;episode_2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;episode_3&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;episode_4&#39;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<p>That way the <code>dlc2action.task.universal_task.Task</code> instance will not be\nre-created every time, which might save you some time.</p></li>\n<li><p><strong>Continue a previously run episode</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">continue_episode</span><span class=\"p\">(</span><span class=\"s1\">&#39;episode_2&#39;</span><span class=\"p\">,</span> <span class=\"n\">num_epochs</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>In case you decide you want to continue an older episode, you can load all parameters and state dictionaries\nand set a new number of epochs. That way training will go on from where it has stopped and in the end the\nepisode will be re-saved under the same name. Note that <code>num_epochs</code> denotes the <strong>new total number of epochs</strong>,\nso if <code>episode_2</code> has already been trained for 300 epochs, for example, it will now run for 200 epochs more,\nnot 500.</p></li>\n</ol>\n\n<p>Of course, changing the default parameters every time you want to run a new configuration is not very convenient.\nAnd, luckily, you don't have to do that. Instead you can add a <code>parameters_update</code> parameter to\n<code>dlc2action.project.project.Project.run_episode</code> (or <code>parameters_updates</code> to\n<code>dlc2action.project.project.Project.run_episodes</code>; all other parameters generalize to multiple episodes\nin a similar way). The third\nfunction does not take many additional parameters since it aims to continue an experiment from exactly where\nit ended.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">run_episode</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;episode_5&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">parameters_update</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;general&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;ssl&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;contrastive&#39;</span><span class=\"p\">]},</span>\n        <span class=\"s1\">&#39;ssl&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;contrastive&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;ssl_weight&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.01</span><span class=\"p\">}},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>In order to find the parameters you can modify, just open the <em>config</em> folder of your project and browse through\nthe files or call <code>dlc2action_fill</code> in your terminal (see [creating] section). The first-level keys\nare the filenames without the extension (<code>'augmentations'</code>, <code>'data'</code>, <code>'general'</code>, <code>'losses'</code>,\n<code>'metrics'</code>, <code>'ssl'</code>, <code>'training'</code>). Note that there are no\n<em>model.yaml</em> or <em>features.yaml</em> files there for the <code>'model'</code> and <code>'features'</code> keys in the parameter\ndictionaries. Those parameters are <strong>read from the files in the <em>model</em> and <em>features</em> folders</strong> that correspond\nto the options you set in the <code>'general'</code> dictionary. For example, if at <em>general.yaml</em> <code>model_name</code> is set to\n<code>'ms_tcn3'</code>, the <code>'model'</code> dictionary will be read from <em>model/ms_tcn3.yaml</em>.</p>\n\n<p>If you want to create a new episode with modified parameters that loads a previously trained model, you can do that\nby adding a <code>load_episode</code> parameter. By default we will load the last saved epoch, but you can also specify\nwhich epoch you want with <code>load_epoch</code>. In that case the closest checkpoint will be chosen.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">run_episode</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;episode_6&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">parameters_update</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;training&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;batch_size&#39;</span><span class=\"p\">:</span> <span class=\"mi\">64</span><span class=\"p\">}},</span>\n    <span class=\"n\">load_episode</span><span class=\"o\">=</span><span class=\"s1\">&#39;episode_2&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">load_epoch</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h3 id=\"optimizing\">Optimizing</h3>\n\n<p><code>dlc2action</code> also has tools for easy hyperparameter optimization. We use the <code>optuna</code> auto-ML package to perform\nthe searches and then save the best parameters and the search graphs (contour and parameter importance).\nThe best parameters\ncan then be loaded when you are run an episode or saved as the defaults in the configuration files.</p>\n\n<p>To start a search, you need to run either the <code>project.project.Project.run_hyperparameter_search</code> or the \n<code>project.project.Project.run_default_hyperparameter_search</code> command. The first one allows you to optimize any hyperparameter you want\nwhile the second provides you with a good default search space for a given model name. </p>\n\n<p>To run a default search, you just need to know the name of the model you want to experiment with.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">run_default_hyperparameter_search</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;c2f_tcn_search&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;c2f_tcn&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s2\">&quot;f1&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">prune</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Defining your own search space is a bit more complicated. Let's\nsay we want to optimize for four parameters: overlap length, SSL task type, learning rate and\nnumber of feature maps in the model. Here is the process\nto figure out what we want to run.</p>\n\n<ol>\n<li><p><strong>Find the parameter names</strong></p>\n\n<p>We check our parameter dictionary with <code>project.list_basic_parameters()</code> and find them in <code>\"data\"</code>, <code>\"general\"</code>, \n<code>\"training\"</code> and <code>\"model\"</code> categories, respectively.\nThat means that our parameter names are <code>'data/overlap'</code>, <code>'general/ssl'</code>, <code>'training/lr'</code> and\n<code>'model/num_f_maps'</code>.</p></li>\n<li><p><strong>Define the search space</strong></p>\n\n<p>There are five types of search spaces in <code>dlc2action</code>:</p>\n\n<ul>\n<li><code>int</code>: integer values (uniform sampling),</li>\n<li><code>int_log</code>: integer values (logarithmic scale sampling),</li>\n<li><code>float</code>: float values (uniform sampling),</li>\n<li><code>float_log</code>: float values (logarithmic sampling),</li>\n<li><code>categorical</code>: choice between several values.</li>\n</ul>\n\n<p>The first four are defined with their minimum and maximum value while <code>categorical</code> requires a list of\npossible values. So the search spaces are described with tuples that look either like\n<code>(search_space_type, min, max)</code> or like <code>(\"categorical\", list_of_values)</code>.</p>\n\n<p>We suspect that the optimal overlap is somewhere between 10 and 80 frames, SSL tasks should be either\nonly contrastive or contrastive and masked_features together, sensible learning rate is between\n10<sup>-2</sup> and 10<sup>-4</sup> and the number of feature maps should be between 8 and 64.\nThat makes our search spaces <code>(\"int\", 10, 80)</code> for the overlap,\n<code>(\"categorical\", [[\"contrastive\"], [\"contrastive\", \"masked_features\"]])</code> for the SSL tasks,\n<code>(\"float_log\", 1e-4, 1e-2)</code> for the learning rate and (\"int_log\", 8, 64) for the feature maps.</p></li>\n<li><p><strong>Choose the search parameters</strong></p>\n\n<p>You need to decide which metric you are optimizing for and for how many trials. Note that it has to be one\nof the metrics you are computing: check <code>metric_functions</code> at <em>general.yaml</em> and add your\nmetric if it's not there. The <code>direction</code> parameter determines whether this metric is minimized or maximized.\nThe metric can also be averaged over a few of the most successful epochs (<code>average</code> parameter). If you want to\nuse <code>optuna</code>'s pruning feature, set <code>prune</code> to <code>True</code>.</p>\n\n<p>You can also use parameter updates and load older experiments, as in the [training] section of this tutorial.</p>\n\n<p>Here we will maximize the recall averaged over 5 top epochs and run 50 trials with pruning.</p></li>\n</ol>\n\n<p>Now we are ready to run!</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">run_hyperparameter_search</span><span class=\"p\">(</span>\n    <span class=\"n\">search_space</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">&quot;data/overlap&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">&quot;int&quot;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;general/ssl&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n            <span class=\"s2\">&quot;categorical&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[[</span><span class=\"s2\">&quot;contrastive&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;contrastive&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;masked_features&quot;</span><span class=\"p\">]]</span>\n        <span class=\"p\">),</span>\n        <span class=\"s2\">&quot;training/lr&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">&quot;float_log&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1e-4</span><span class=\"p\">,</span> <span class=\"mf\">1e-2</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;model/num_f_maps&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">&quot;int_log&quot;</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">),</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s2\">&quot;recall&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">n_trials</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\n    <span class=\"n\">average</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">search_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;search_1&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">direction</span><span class=\"o\">=</span><span class=\"s2\">&quot;maximize&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">prune</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>After a search is finished, the best parameters are saved in the meta files and search graphs are saved at\n<em>project_name/results/searches/search_1</em>. You can see the best parameters by running\n<code>project.project.Project.list_best_parameters</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">list_best_parameters</span><span class=\"p\">(</span><span class=\"s1\">&#39;search_1&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Those results can also be loaded in a training episode or saved in the configuration files directly.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">update_parameters</span><span class=\"p\">(</span>\n    <span class=\"n\">load_search</span><span class=\"o\">=</span><span class=\"s1\">&#39;search_1&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">load_parameters</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;training/lr&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;model/num_f_maps&#39;</span><span class=\"p\">],</span>\n    <span class=\"n\">round_to_binary</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;model/num_f_maps&#39;</span><span class=\"p\">],</span>\n<span class=\"p\">)</span>\n<span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">run_episode</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;episode_best_params&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">load_search</span><span class=\"o\">=</span><span class=\"s1\">&#39;search_1&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">load_parameters</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;data/overlap&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;general/ssl&#39;</span><span class=\"p\">],</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>In this example we saved the learning rate and the number of feature maps in the configuration files and\nloaded the other parameters to run\nthe <code>episode_best_params</code> training episode. Note how we used the <code>round_to_binary</code> parameter.\nIt will round the number of feature maps to the closest power of two (7 to 8, 35 to 32 and so on). This is useful\nfor parameters like the number of features or the batch size.</p>\n\n<h3 id=\"exploring-results\">Exploring results</h3>\n\n<p>After you run a bunch of experiments you will likely want to get an overview.</p>\n\n<h4 id=\"visualization\">Visualization</h4>\n\n<p>You can get a feeling for the predictions made by a model by running <code>project.project.Project.plot_predictions</code>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">plot_predictions</span><span class=\"p\">(</span><span class=\"s1\">&#39;episode_1&#39;</span><span class=\"p\">,</span> <span class=\"n\">load_epoch</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>This command will generate a prediction for a random sample and visualize it compared to the ground truth.\nThere is a lot of parameters you can customize, check them out in the documentation).</p>\n\n<p>You can also analyze the results with <code>project.project.Project.plot_confusion_matrix</code>.</p>\n\n<p>Another available visualization type is training curve comparison with <code>project.project.Project.plot_episodes</code>.\nYou can compare different metrics and modes across several episode or whithin one. For example, this command\nwill plot the validation accuracy curves for the two episodes.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">plot_episodes</span><span class=\"p\">([</span><span class=\"s1\">&#39;episode_1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;episode_2&#39;</span><span class=\"p\">],</span> <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;accuracy&#39;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<p>And this will plot training and validation recall curves for <code>episode_3</code>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">plot_episodes</span><span class=\"p\">([</span><span class=\"s1\">&#39;episode_3&#39;</span><span class=\"p\">],</span> <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;recall&#39;</span><span class=\"p\">],</span> <span class=\"n\">modes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;train&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;val&#39;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<p>You can also plot several episodes as one curve. That can be useful, for example, with episodes 2 and 6\nin our tutorial, since <code>episode_6</code> loaded the model from <code>episode_2</code>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">plot_episodes</span><span class=\"p\">([[</span><span class=\"s1\">&#39;episode_2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;episode_6&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;episode_4&#39;</span><span class=\"p\">],</span> <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;precision&#39;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<h4 id=\"tables\">Tables</h4>\n\n<p>Alternatively, you can start analyzing your experiments by putting them in a table. You can get a summary of\nyour training episodes with <code>project.project.Project.list_episodes</code>. It provides you with three ways to filter\nthe data.</p>\n\n<ol>\n<li><p><strong>Episode names</strong></p>\n\n<p>You can directly say which episodes you want to look at and disregard all others. Let's say we want to see\nepisodes 1, 2, 3 and 4.</p></li>\n<li><p><strong>Parameters</strong></p>\n\n<p>In a similar fashion, you can choose to only display certain parameters. See all available parameters by\nrunning <code>project.list_episodes().columns</code>. Here we are only interested in the time of adding the record,\nthe recall results and the learning rate.</p></li>\n<li><p><strong>Value filter</strong></p>\n\n<p>The last option is to filter by parameter values. Filters are defined by strings that look like this:\n<code>'{parameter_name}::{sign}{value}'</code>. You can use as many filters as ypu want and separate them with a comma.\nThe parameter names are the same as in point 2, the sign can be either\n<code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code> or <code>=</code> and you choose the value. Let's say we want to only get the episodes that took\nat least 30 minutes to train and got to a recall that is higher than 0.4. That translates to\n<code>'results/recall::&gt;0.4,meta/training_time::&gt;=00:30:00'</code>.</p></li>\n</ol>\n\n<p>Putting it all together, we get this command.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">list_episodes</span><span class=\"p\">(</span>\n    <span class=\"n\">episodes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;episode_1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;episode_2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;episode_3&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;episode_4&#39;</span><span class=\"p\">],</span>\n    <span class=\"n\">display_parameters</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;meta/time&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;results/recall&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;training/lr&#39;</span><span class=\"p\">],</span>\n    <span class=\"n\">episode_filter</span><span class=\"o\">=</span><span class=\"s1\">&#39;results/recall::&gt;0.4,meta/training_time::&gt;=00:30:00&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>There are similar functions for summarizing other history files: <code>project.project.Project.list_searches</code>,\n<code>project.project.Project.list_predictions</code>, <code>project.project.Project.list_suggestions</code> and they all follow the\nsame pattern.</p>\n\n<p>You can also get a summary of your experiment results with <code>project.project.Project.get_results_table</code> and\n<code>project.project.Project.get_summary</code>. Those methods will aggregate the metrics over all runs of you experiment and allow \nfor easy comparison between models or other parameters.</p>\n\n<h3 id=\"making-predictions\">Making predictions</h3>\n\n<p>When you feel good about one of the models, you can move on to making predictions. There are two ways to do that:\ngenerate pickled prediction dictionaries with <code>project.project.Project.run_prediction</code> or active learning\nand suggestion files for the [GUI] with <code>project.project.Project.run_suggestion</code>.</p>\n\n<p>By default the predictions will be made for the entire dataset at the data path of the project. However, you\ncan also choose to only make them for the training, validation or test subset (set with <code>mode</code> parameter) or\neven for entirely new data (set with <code>data_path</code> parameter). Note that if you set the <code>data_path</code>\nvalue, <strong>the split\nparameters will be disregarded</strong> and <code>mode</code> will be forced to <code>'all'</code>!</p>\n\n<p>Here is an example of running these functions.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">run_prediction</span><span class=\"p\">(</span><span class=\"s1\">&#39;prediction_1&#39;</span><span class=\"p\">,</span> <span class=\"n\">episode_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;episode_3&#39;</span><span class=\"p\">,</span> <span class=\"n\">load_epoch</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;test&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>This command will generate a prediction dictionary with the model from epoch 150 of <code>episode_3</code> for the test\nsubset of the project data (split according to the configuration files) and save it at\n<em>project_name/results/predictions/prediction_1.pickle</em>. </p>\n\n<p>The history of prediction runs is recorded and at the [exploring] section\nwe have described how to access it.</p>\n"}, "dlc2action.data": {"fullname": "dlc2action.data", "modulename": "dlc2action.data", "kind": "module", "doc": "<h2 id=\"dataset-and-related-objects\">Dataset and related objects</h2>\n\n<h3 id=\"dataset\">Dataset</h3>\n\n<p>The dataset class in <code>dlc2action</code> is <code>dataset.BehaviorDataset</code>. It defines all high-level interaction between\n<code>Task</code>,\ninput data and annotations (like loading, filtering or adding pseudo-labels). It is a single class that works\nfor all data types and is not meant to be inherited from. All customisation happens in <em>store</em> classes instead.\nEvery dataset has an <em>input store</em> and an <em>annotation store</em> that perform the actual data operations.</p>\n\n<h3 id=\"store\">Store</h3>\n\n<p><em>Stores</em> are defined by an abstract data handling parent class.\nIt is inherited from by <code>base_store.InputStore</code> and <code>base_store.AnnotationStore</code> and implementations of\nthese classes (for input and\nannotation data, respectively, see <code>input_store</code> and <code>annotation_store</code>) are used by datasets. In other words,\nadding a new dataset to <code>dlc2action</code> means\nimplementing a list of abstract functions for the input and annotation data.</p>\n\n<p>That list of functions was created\nwith several <strong>assumptions</strong> about the structure of the data in mind. Specifically, we are assuming that you are\nworking with video-related information that is defined at the frame level. Videos can be separated into <em>clips</em>.\n<em>Clips</em> here are elementary parts that are associated with behaviour labels. In the simplest scenario, clips are\ntracks of pose estimation key points associated with single individuals, for example. Every frame of every clip\nis associated with a feature vector (like key point coordinates or image pixel values) and at least some of the\nframes have behaviour labels. Every video has a unique video id and every clip inside a video has a unique clip\nid (clip ids in different videos don't have to be different). After this data is loaded and preprocessed,\na store can take an integer index and return an input data sample and a tuple of <em>original coordinates</em> that\ncan be used to map that sample to a specific place in the original data (meaning video id, clip id and frame\nindices). The indexing is consistent across time and stores (the features at index 42 an an input frame\nshould correspond to labels at index 42 at an annotation store for the same dataset). That is checked at runtime\nby comparing the original coordinates arrays of the two stores.</p>\n\n<p><img src=\"https://i.ibb.co/Y8zc43H/data.png\" alt=\"image\" /></p>\n\n<p>In addition, every store is defined by a tuple of <em>key objects</em> (e.g. the input data array, the original\ncoordinates array and a dictionary with lengths of the original videos). When these key objects are saved and a\nnew store is created from them, it behaves identically to the original. Finally, when initialising a dataset,\ninput stores are always created first and annotations stores second, if at all. If there is any information that\nneeds to be passed from an input store to an annotation store, it is packed in a dictionary, termed <em>annotation\nobjects</em>. <code>base_store.AnnotationStore</code> child classes have a <code>required_annotation_objects</code> attribute that contains\nthe keys that\nneed to be passed in any case, but you can add optional fields too.</p>\n\n<p>Data is usually stored either as a <code>torch.Tensor</code> (in <code>base_store.AnnotationStore</code> instances), a\n<code>dlc2action.utils.TensorDict</code> (in <code>base_store.InputStore</code> instances where all data fits in RAM) or a <code>numpy.ndarray</code>\nof filenames (in <code>base_store.InputStore</code> instances with large amounts of data).</p>\n"}, "dlc2action.data.annotation_store": {"fullname": "dlc2action.data.annotation_store", "modulename": "dlc2action.data.annotation_store", "kind": "module", "doc": "<p>Specific implementations of <code>dlc2action.data.base_store.AnnotationStore</code> are defined here</p>\n"}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore", "kind": "class", "doc": "<p>A class that generates annotation from video information and stores it</p>\n\n<p>Processes input video information and generates ordered arrays of annotation samples and corresponding unique\noriginal coordinates, as well as some meta objects.\nIt is assumed that the input videos are separated into clips (e.g. corresponding to different individuals).\nEach video and each clip inside the video has a unique id (video_id and clip_id, correspondingly).\nThe original coordinates object contains information about the video_id, clip_id and start time of the\nsamples in the original input data.\nAn AnnotationStore has to be fully defined with a tuple of key objects.\nThe annotation array can be accessed with integer indices.\nThe samples can be stored as a torch.Tensor in RAM or as an array of file paths to be loaded on runtime.\nWhen no arguments are passed a blank class instance should be created that can later be filled with\ninformation from key objects</p>\n", "bases": "dlc2action.data.base_store.AnnotationStore"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects)\nkey_objects : tuple, optional\n    a tuple of key objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.remove", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.remove", "kind": "function", "doc": "<p>Remove the samples corresponding to indices</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>indices : int\n    a list of integer indices to remove</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.key_objects", "kind": "function", "doc": "<p>Return a tuple of the key objects necessary to re-create the Store</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>key_objects : tuple\n    a tuple of key objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.load_from_key_objects", "kind": "function", "doc": "<p>Load the information from a tuple of key objects</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>key_objects : tuple\n    a tuple of key objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.to_ram", "kind": "function", "doc": "<p>Transfer the data samples to RAM if they were previously stored as file paths</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.get_original_coordinates", "kind": "function", "doc": "<p>Return the original coordinates array</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    an array that contains the coordinates of the data samples in original input data (video id, clip id,\n    start frame)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.create_subsample", "kind": "function", "doc": "<p>Create a new store that contains a subsample of the data</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>indices : list\n    the indices to be included in the subsample\nssl_indices : list, optional\n    the indices to be included in the subsample without the annotation data</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">List</span>, </span><span class=\"param\"><span class=\"n\">ssl_indices</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.get_file_ids", "kind": "function", "doc": "<p>Process data parameters and return a list of ids  of the videos that should\nbe processed by the __init__ function</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_ids : list\n    a list of video file ids</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.get_len", "kind": "function", "doc": "<p>Get the length of the subsample of labeled/unlabeled data</p>\n\n<p>If return_unlabeled is True, the index is in the subsample of unlabeled data, if False in labeled\nand if return_unlabeled is None the index is already correct</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>return_unlabeled : bool\n    the identifier for the subsample</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>length : int\n    the length of the subsample</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">return_unlabeled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.get_idx", "kind": "function", "doc": "<p>Convert from an index in the subsample of labeled/unlabeled data to an index in the full array</p>\n\n<p>If return_unlabeled is True, the index is in the subsample of unlabeled data, if False in labeled\nand if return_unlabeled is None the index is already correct</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>index : int\n    the index in the subsample\nreturn_unlabeled : bool\n    the identifier for the subsample</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>corrected_index : int\n    the index in the full dataset</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">return_unlabeled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.count_classes", "kind": "function", "doc": "<p>Get a dictionary with class-wise frame counts</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>frac : bool, default False\n    if True, a fraction of the total frame count is returned</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>count_dictionary : dict\n    a dictionary with class indices as keys and frame counts as values</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">frac</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">zeros</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">bouts</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.behaviors_dict", "kind": "function", "doc": "<p>Get a dictionary of class names</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>behavior_dictionary: dict\n    a dictionary with class indices as keys and class names as values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.annotation_class", "kind": "function", "doc": "<p>Get the type of annotation ('exclusive_classification', 'nonexclusive_classification', more coming soon)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>annotation_class : str\n    the type of annotation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.size", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.size", "kind": "function", "doc": "<p>Get the total number of frames in the data</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>size : int\n    the total number of frames</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.filtered_indices", "kind": "function", "doc": "<p>Return the indices of the samples that should be removed</p>\n\n<p>Choosing the indices can be based on any kind of filering defined in the __init__ function by the data\nparameters</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>indices_to_remove : list\n    a list of integer indices that should be removed</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"fullname": "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels", "modulename": "dlc2action.data.annotation_store", "qualname": "EmptyAnnotationStore.set_pseudo_labels", "kind": "function", "doc": "<p>Set pseudo labels to the unlabeled data</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>labels : torch.Tensor\n    a tensor of pseudo-labels for the unlabeled data</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">labels</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore", "kind": "class", "doc": "<p>A general realization of an annotation store for action segmentation tasks</p>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>annotation_path\n\u251c\u2500\u2500 video1_annotation.pickle\n\u2514\u2500\u2500 video2_labels.pickle\n</code></pre>\n\n<p>Here <code>annotation_suffix</code> is <code>{'_annotation.pickle', '_labels.pickle'}</code>.</p>\n", "bases": "dlc2action.data.base_store.AnnotationStore"}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.__init__", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects)\nmin_frames : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    clip start frames (not passed if creating from key objects)\nmax_frames : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    clip end frames (not passed if creating from key objects)\nvisibility : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    visibility score arrays (not passed if creating from key objects or if irrelevant for the dataset)\nexclusive : bool, default True\n    if True, the annotation is single-label; if False, multi-label\nlen_segment : int, default 128\n    the length of the segments in which the data should be cut (in frames)\noverlap : int, default 0\n    the length of the overlap between neighboring segments (in frames)\nbehaviors : set, optional\n    the list of behaviors to put in the annotation (not passed if creating a blank instance or if behaviors are\n    loaded from a file)\nignored_classes : set, optional\n    the list of behaviors from the behaviors list or file to not annotate\nignored_clips : set, optional\n    clip ids to ignore\nannotation_suffix : str | set, optional\n    the suffix or the set of suffices such that the annotation files are named {video_id}{annotation_suffix}\n    (not passed if creating from key objects or if irrelevant for the dataset)\nannotation_path : str | set, optional\n    the path or the set of paths to the folder where the annotation files are stored (not passed if creating\n    from key objects)\nbehavior_file : str, optional\n    the path to an .xlsx behavior file (not passed if creating from key objects or if irrelevant for the dataset)\ncorrection : dict, optional\n    a dictionary of corrections for the labels (e.g. {'sleping': 'sleeping', 'calm locomotion': 'locomotion'},\n    can be used to correct for variations in naming or to merge several labels in one\nframe_limit : int, default 0\n    the smallest possible length of a clip (shorter clips are discarded)\nfilter_annotated : bool, default False\n    if True, the samples that do not have any labels will be filtered\nfilter_background : bool, default False\n    if True, only the unlabeled frames that are close to annotated frames will be labeled as background\nerror_class : str, optional\n    the name of the error class (the annotations that intersect with this label will be discarded)\nmin_frames_action : int, default 0\n    the minimum length of an action (shorter actions are not annotated)\nkey_objects : tuple, optional\n    the key objects to load the AnnotationStore from\nvisibility_min_score : float, default 5\n    the minimum visibility score for visibility filtering\nvisibility_min_frac : float, default 0.7\n    the minimum fraction of visible frames for visibility filtering\nmask : dict, optional\n    a masked value dictionary (for active learning simulation experiments)\nuse_hard_negatives : bool, default False\n    mark hard negatives as 2 instead of 0 or 1, for loss functions that have options for hard negative processing\ninteractive : bool, default False\n    if <code>True</code>, annotation is assigned to pairs of individuals</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_frames</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visibility</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">behaviors</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_clips</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_suffix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">behavior_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">correction</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">frame_limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">filter_annotated</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">filter_background</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">error_class</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames_action</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visibility_min_score</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">visibility_min_frac</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.7</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_hard_negatives</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">interactive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.len_segment", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.len_segment", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.exclusive": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.exclusive", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.exclusive", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.overlap": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.overlap", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.overlap", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.video_order", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.video_order", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.min_frames", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.max_frames", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.max_frames", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.visibility": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.visibility", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.visibility", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.vis_min_score", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.vis_min_frac", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.mask": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.mask", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.mask", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.use_negatives", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.interactive": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.interactive", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.interactive", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.ignored_clips", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.file_paths", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.file_paths", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.ignored_classes", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.update_behaviors", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.ram": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.ram", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.ram", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.original_coordinates", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.filtered", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.filtered", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.step": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.step", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.step", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.ann_suffix", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.annotation_folder", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.filter_annotated", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.filter_background", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.filter_background", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.frame_limit", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.min_frames_action", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.error_class", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.error_class", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.correction": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.correction", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.correction", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.remove", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.remove", "kind": "function", "doc": "<p>Remove the samples corresponding to indices</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>indices : list\n    a list of integer indices to remove</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.key_objects", "kind": "function", "doc": "<p>Return a tuple of the key objects necessary to re-create the Store</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>key_objects : tuple\n    a tuple of key objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.load_from_key_objects", "kind": "function", "doc": "<p>Load the information from a tuple of key objects</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>key_objects : tuple\n    a tuple of key objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.to_ram", "kind": "function", "doc": "<p>Transfer the data samples to RAM if they were previously stored as file paths</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.get_original_coordinates", "kind": "function", "doc": "<p>Return the video_indices array</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>original_coordinates : numpy.ndarray\n    an array that contains the coordinates of the data samples in original input data</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.create_subsample", "kind": "function", "doc": "<p>Create a new store that contains a subsample of the data</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>indices : list\n    the indices to be included in the subsample\nssl_indices : list, optional\n    the indices to be included in the subsample without the annotation data</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">List</span>, </span><span class=\"param\"><span class=\"n\">ssl_indices</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.get_len", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.get_len", "kind": "function", "doc": "<p>Get the length of the subsample of labeled/unlabeled data</p>\n\n<p>If return_unlabeled is True, the index is in the subsample of unlabeled data, if False in labeled\nand if return_unlabeled is None the index is already correct</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>return_unlabeled : bool\n    the identifier for the subsample</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>length : int\n    the length of the subsample</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">return_unlabeled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.get_indices", "kind": "function", "doc": "<p>Get a list of indices of samples in the labeled/unlabeled subset</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>return_unlabeled : bool\n    the identifier for the subsample (<code>True</code> for unlabeled, <code>False</code> for labeled, <code>None</code> for the\n    whole dataset)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>indices : list\n    a list of indices that meet the criteria</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">return_unlabeled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.count_classes", "kind": "function", "doc": "<p>Get a dictionary with class-wise frame counts</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>perc : bool, default False\n    if <code>True</code>, a fraction of the total frame count is returned\nzeros : bool, default False\n    if <code>True</code> and annotation is not exclusive, zero counts are returned\nbouts : bool, default False\n    if <code>True</code>, instead of frame counts segment counts are returned</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>count_dictionary : dict\n    a dictionary with class indices as keys and frame counts as values</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">perc</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">zeros</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">bouts</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.behaviors_dict", "kind": "function", "doc": "<p>Get a dictionary of class names</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>behavior_dictionary: dict\n    a dictionary with class indices as keys and class names as values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.annotation_class", "kind": "function", "doc": "<p>Get the type of annotation ('exclusive_classification', 'nonexclusive_classification')</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>annotation_class : str\n    the type of annotation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.size", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.size", "kind": "function", "doc": "<p>Get the total number of frames in the data</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>size : int\n    the total number of frames</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.filtered_indices", "kind": "function", "doc": "<p>Return the indices of the samples that should be removed</p>\n\n<p>Choosing the indices can be based on any kind of filering defined in the __init__ function by the data\nparameters</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>indices_to_remove : list\n    a list of integer indices that should be removed</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.set_pseudo_labels", "kind": "function", "doc": "<p>Set pseudo labels to the unlabeled data</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>labels : torch.Tensor\n    a tensor of pseudo-labels for the unlabeled data</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">labels</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"fullname": "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids", "modulename": "dlc2action.data.annotation_store", "qualname": "ActionSegmentationStore.get_file_ids", "kind": "function", "doc": "<p>Process data parameters and return a list of ids  of the videos that should\nbe processed by the __init__ function</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>annotation_path : str | set\n    the path or the set of paths to the folder where the annotation files are stored\nannotation_suffix : str | set, optional\n    the suffix or the set of suffices such that the annotation files are named {video_id}{annotation_suffix}</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_ids : list\n    a list of video file ids</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_suffix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.FileAnnotationStore": {"fullname": "dlc2action.data.annotation_store.FileAnnotationStore", "modulename": "dlc2action.data.annotation_store", "qualname": "FileAnnotationStore", "kind": "class", "doc": "<p>A generalized implementation of <code>ActionSegmentationStore</code> for datasets where one file corresponds to one video</p>\n", "bases": "ActionSegmentationStore"}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"fullname": "dlc2action.data.annotation_store.SequenceAnnotationStore", "modulename": "dlc2action.data.annotation_store", "qualname": "SequenceAnnotationStore", "kind": "class", "doc": "<p>A generalized implementation of <code>ActionSegmentationStore</code> for datasets where one file corresponds to multiple videos</p>\n", "bases": "ActionSegmentationStore"}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"fullname": "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids", "modulename": "dlc2action.data.annotation_store", "qualname": "SequenceAnnotationStore.get_file_ids", "kind": "function", "doc": "<p>Process data parameters and return a list of ids  of the videos that should\nbe processed by the __init__ function</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>filenames : list, optional\n    a list of annotation file paths\nannotation_path : str, optional\n    path to the annotation folder</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_ids : list\n    a list of video file ids</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">filenames</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"fullname": "dlc2action.data.annotation_store.DLCAnnotationStore", "modulename": "dlc2action.data.annotation_store", "qualname": "DLCAnnotationStore", "kind": "class", "doc": "<p>DLC type annotation data</p>\n\n<p>The files are either the DLC2Action GUI output or a pickled dictionary of the following structure:\n    - nested dictionary,\n    - first-level keys are individual IDs,\n    - second-level keys are labels,\n    - values are lists of intervals,\n    - the lists of intervals is formatted as <code>[start_frame, end_frame, ambiguity]</code>,\n    - ambiguity is 1 if the action is ambiguous (!!at the moment DLC2Action will IGNORE those intervals!!) or 0 if it isn't.</p>\n\n<p>A minimum working example of such a dictionary is:</p>\n\n<pre><code>{\n    \"ind0\": {},\n    \"ind1\": {\n        \"running\": [60, 70, 0]],\n        \"eating\": []\n    }\n}\n</code></pre>\n\n<p>Here there are two animals: <code>\"ind0\"</code> and <code>\"ind1\"</code>, and two actions: running and eating.\nThe only annotated action is eating for <code>\"ind1\"</code> between frames 60 and 70.</p>\n\n<p>If you generate those files manually, run this code for a sanity check:</p>\n\n<pre><code>import pickle\n\nwith open(\"/path/to/annotation.pickle\", \"rb\") as f:\ndata = pickle.load(f)\n\nfor ind, ind_dict in data.items():\n    print(f'individual {ind}:')\n    for label, intervals in ind_dict.items():\n        for start, end, ambiguity in intervals:\n            if ambiguity == 0:\n                print(f'  from {start} to {end} frame: {label}')\n</code></pre>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>annotation_path\n\u251c\u2500\u2500 video1_annotation.pickle\n\u2514\u2500\u2500 video2_labels.pickle\n</code></pre>\n\n<p>Here <code>annotation_suffix</code> is <code>{'_annotation.pickle', '_labels.pickle'}</code>.</p>\n", "bases": "FileAnnotationStore"}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"fullname": "dlc2action.data.annotation_store.BorisAnnotationStore", "modulename": "dlc2action.data.annotation_store", "qualname": "BorisAnnotationStore", "kind": "class", "doc": "<p>BORIS type annotation data</p>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>annotation_path\n\u251c\u2500\u2500 video1_annotation.pickle\n\u2514\u2500\u2500 video2_labels.pickle\n</code></pre>\n\n<p>Here <code>annotation_suffix</code> is <code>{'_annotation.pickle', '_labels.pickle'}</code>.</p>\n", "bases": "FileAnnotationStore"}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"fullname": "dlc2action.data.annotation_store.BorisAnnotationStore.__init__", "modulename": "dlc2action.data.annotation_store", "qualname": "BorisAnnotationStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects)\nmin_frames : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    clip start frames (not passed if creating from key objects)\nmax_frames : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    clip end frames (not passed if creating from key objects)\nvisibility : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    visibility score arrays (not passed if creating from key objects or if irrelevant for the dataset)\nexclusive : bool, default True\n    if True, the annotation is single-label; if False, multi-label\nlen_segment : int, default 128\n    the length of the segments in which the data should be cut (in frames)\noverlap : int, default 0\n    the length of the overlap between neighboring segments (in frames)\nbehaviors : set, optional\n    the list of behaviors to put in the annotation (not passed if creating a blank instance or if behaviors are\n    loaded from a file)\nignored_classes : set, optional\n    the list of behaviors from the behaviors list or file to not annotate\nannotation_suffix : str | set, optional\n    the suffix or the set of suffices such that the annotation files are named {video_id}{annotation_suffix}\n    (not passed if creating from key objects or if irrelevant for the dataset)\nannotation_path : str | set, optional\n    the path or the set of paths to the folder where the annotation files are stored (not passed if creating\n    from key objects)\nbehavior_file : str, optional\n    the path to an .xlsx behavior file (not passed if creating from key objects or if irrelevant for the dataset)\ncorrection : dict, optional\n    a dictionary of corrections for the labels (e.g. {'sleping': 'sleeping', 'calm locomotion': 'locomotion'},\n    can be used to correct for variations in naming or to merge several labels in one\nframe_limit : int, default 0\n    the smallest possible length of a clip (shorter clips are discarded)\nfilter_annotated : bool, default False\n    if True, the samples that do not have any labels will be filtered\nfilter_background : bool, default False\n    if True, only the unlabeled frames that are close to annotated frames will be labeled as background\nerror_class : str, optional\n    the name of the error class (the annotations that intersect with this label will be discarded)\nmin_frames_action : int, default 0\n    the minimum length of an action (shorter actions are not annotated)\nkey_objects : tuple, optional\n    the key objects to load the AnnotationStore from\nvisibility_min_score : float, default 5\n    the minimum visibility score for visibility filtering\nvisibility_min_frac : float, default 0.7\n    the minimum fraction of visible frames for visibility filtering\nmask : dict, optional\n    a masked value dictionary (for active learning simulation experiments)\nuse_hard_negatives : bool, default False\n    mark hard negatives as 2 instead of 0 or 1, for loss functions that have options for hard negative processing\ninteractive : bool, default False\n    if <code>True</code>, annotation is assigned to pairs of individuals\nignored_clips : set, optional\n    a set of clip ids to ignore</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_frames</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visibility</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">behaviors</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_suffix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">behavior_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">correction</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">frame_limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">filter_annotated</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">filter_background</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">error_class</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames_action</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visibility_min_score</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">visibility_min_frac</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.7</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_hard_negatives</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">default_agent_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ind0&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">interactive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_clips</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"fullname": "dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name", "modulename": "dlc2action.data.annotation_store", "qualname": "BorisAnnotationStore.default_agent_name", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"fullname": "dlc2action.data.annotation_store.PKUMMDAnnotationStore", "modulename": "dlc2action.data.annotation_store", "qualname": "PKUMMDAnnotationStore", "kind": "class", "doc": "<p>PKU-MMD annotation data</p>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>annotation_path\n\u251c\u2500\u2500 0364-L.txt\n...\n\u2514\u2500\u2500 0144-M.txt\n</code></pre>\n", "bases": "FileAnnotationStore"}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"fullname": "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__", "modulename": "dlc2action.data.annotation_store", "qualname": "PKUMMDAnnotationStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects)\nmin_frames : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    clip start frames (not passed if creating from key objects)\nmax_frames : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    clip end frames (not passed if creating from key objects)\nvisibility : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    visibility score arrays (not passed if creating from key objects or if irrelevant for the dataset)\nexclusive : bool, default True\n    if True, the annotation is single-label; if False, multi-label\nlen_segment : int, default 128\n    the length of the segments in which the data should be cut (in frames)\noverlap : int, default 0\n    the length of the overlap between neighboring segments (in frames)\nignored_classes : set, optional\n    the list of behaviors from the behaviors list or file to not annotate\nannotation_path : str | set, optional\n    the path or the set of paths to the folder where the annotation files are stored (not passed if creating\n    from key objects)\nbehavior_file : str, optional\n    the path to an .xlsx behavior file (not passed if creating from key objects or if irrelevant for the dataset)\ncorrection : dict, optional\n    a dictionary of corrections for the labels (e.g. {'sleping': 'sleeping', 'calm locomotion': 'locomotion'},\n    can be used to correct for variations in naming or to merge several labels in one\nframe_limit : int, default 0\n    the smallest possible length of a clip (shorter clips are discarded)\nfilter_annotated : bool, default False\n    if True, the samples that do not have any labels will be filtered\nfilter_background : bool, default False\n    if True, only the unlabeled frames that are close to annotated frames will be labeled as background\nerror_class : str, optional\n    the name of the error class (the annotations that intersect with this label will be discarded)\nmin_frames_action : int, default 0\n    the minimum length of an action (shorter actions are not annotated)\nkey_objects : tuple, optional\n    the key objects to load the AnnotationStore from\nvisibility_min_score : float, default 5\n    the minimum visibility score for visibility filtering\nvisibility_min_frac : float, default 0.7\n    the minimum fraction of visible frames for visibility filtering\nmask : dict, optional\n    a masked value dictionary (for active learning simulation experiments)\nuse_hard_negatives : bool, default False\n    mark hard negatives as 2 instead of 0 or 1, for loss functions that have options for hard negative processing\ninteractive : bool, default False\n    if <code>True</code>, annotation is assigned to pairs of individuals\nignored_clips : set, optional\n    a set of clip ids to ignore</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_frames</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visibility</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">behavior_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">correction</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">frame_limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">filter_annotated</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">filter_background</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">error_class</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames_action</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visibility_min_score</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">visibility_min_frac</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_hard_negatives</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">interactive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_clips</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"fullname": "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids", "modulename": "dlc2action.data.annotation_store", "qualname": "PKUMMDAnnotationStore.get_file_ids", "kind": "function", "doc": "<p>Process data parameters and return a list of ids  of the videos that should\nbe processed by the __init__ function</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>annotation_path : str | set\n    the path or the set of paths to the folder where the annotation files are stored</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_ids : list\n    a list of video file ids</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"fullname": "dlc2action.data.annotation_store.CalMS21AnnotationStore", "modulename": "dlc2action.data.annotation_store", "qualname": "CalMS21AnnotationStore", "kind": "class", "doc": "<p>CalMS21 annotation data</p>\n\n<p>Use the <code>'random:test_from_name:{name}'</code> and <code>'val-from-name:{val_name}:test-from-name:{test_name}'</code>\npartitioning methods with <code>'train'</code>, <code>'test'</code> and <code>'unlabeled'</code> names to separate into train, test and validation\nsubsets according to the original files. For example, with <code>'val-from-name:test:test-from-name:unlabeled'</code>\nthe data from the test file will go into validation and the unlabeled files will be the test.</p>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>annotation_path\n\u251c\u2500\u2500 calms21_task_train.npy\n\u251c\u2500\u2500 calms21_task_test.npy\n\u251c\u2500\u2500 calms21_unlabeled_videos_part1.npy\n\u251c\u2500\u2500 calms21_unlabeled_videos_part2.npy\n\u2514\u2500\u2500 calms21_unlabeled_videos_part3.npy\n</code></pre>\n", "bases": "SequenceAnnotationStore"}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"fullname": "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__", "modulename": "dlc2action.data.annotation_store", "qualname": "CalMS21AnnotationStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>task_n : [1, 2]\n    the number of the task\ninclude_task1 : bool, default True\n    include task 1 data to training set\nvideo_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects)\nmin_frames : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    clip start frames (not passed if creating from key objects)\nmax_frames : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    clip end frames (not passed if creating from key objects)\nlen_segment : int, default 128\n    the length of the segments in which the data should be cut (in frames)\noverlap : int, default 0\n    the length of the overlap between neighboring segments (in frames)\nignored_classes : set, optional\n    the list of behaviors from the behaviors list or file to not annotate\nannotation_path : str | set, optional\n    the path or the set of paths to the folder where the annotation files are stored (not passed if creating\n    from key objects)\nkey_objects : tuple, optional\n    the key objects to load the AnnotationStore from\ntreba_files : bool, default False\n    if <code>True</code>, TREBA feature files will be loaded</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">task_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">include_task1</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_frames</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">treba_files</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"fullname": "dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n", "modulename": "dlc2action.data.annotation_store", "qualname": "CalMS21AnnotationStore.task_n", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"fullname": "dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1", "modulename": "dlc2action.data.annotation_store", "qualname": "CalMS21AnnotationStore.include_task1", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"fullname": "dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files", "modulename": "dlc2action.data.annotation_store", "qualname": "CalMS21AnnotationStore.treba_files", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"fullname": "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids", "modulename": "dlc2action.data.annotation_store", "qualname": "CalMS21AnnotationStore.get_file_ids", "kind": "function", "doc": "<p>Process data parameters and return a list of ids  of the videos that should\nbe processed by the __init__ function</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>task_n : {1, 2, 3}\n    the index of the CalMS21 challenge task\ninclude_task1 : bool, default False\n    if <code>True</code>, the training file of the task 1 will be loaded\ntreba_files : bool, default False\n    if <code>True</code>, the TREBA feature files will be loaded\nfilenames : set, optional\n    a set of string filenames to search for (only basenames, not the whole paths)\nannotation_path : str | set, optional\n    the path to the folder where the pose and feature files are stored or a set of such paths\n    (not passed if creating from key objects or from <code>file_paths</code>)\nfile_paths : set, optional\n    a set of string paths to the pose and feature files\n    (not passed if creating from key objects or from <code>data_path</code>)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_ids : list\n    a list of video file ids</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">task_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">include_task1</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">treba_files</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Iterable</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"fullname": "dlc2action.data.annotation_store.CSVAnnotationStore", "modulename": "dlc2action.data.annotation_store", "qualname": "CSVAnnotationStore", "kind": "class", "doc": "<p>CSV type annotation data</p>\n\n<p>Assumes that files are saved as .csv tables with at least the following columns:</p>\n\n<ul>\n<li>from / start : start of action,</li>\n<li>to / end : end of action,</li>\n<li>class / behavior / behaviour / label / type : action label.</li>\n</ul>\n\n<p>If the times are set in seconds instead of frames, don't forget to set the <code>fps</code> parameter to your frame rate.</p>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>annotation_path\n\u251c\u2500\u2500 video1_annotation.csv\n\u2514\u2500\u2500 video2_labels.csv\n</code></pre>\n\n<p>Here <code>annotation_suffix</code> is <code>{'_annotation.csv', '_labels.csv'}</code>.</p>\n", "bases": "FileAnnotationStore"}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"fullname": "dlc2action.data.annotation_store.CSVAnnotationStore.__init__", "modulename": "dlc2action.data.annotation_store", "qualname": "CSVAnnotationStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects)\nmin_frames : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    clip start frames (not passed if creating from key objects)\nmax_frames : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    clip end frames (not passed if creating from key objects)\nvisibility : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    visibility score arrays (not passed if creating from key objects or if irrelevant for the dataset)\nexclusive : bool, default True\n    if True, the annotation is single-label; if False, multi-label\nlen_segment : int, default 128\n    the length of the segments in which the data should be cut (in frames)\noverlap : int, default 0\n    the length of the overlap between neighboring segments (in frames)\nbehaviors : set, optional\n    the list of behaviors to put in the annotation (not passed if creating a blank instance or if behaviors are\n    loaded from a file)\nignored_classes : set, optional\n    the list of behaviors from the behaviors list or file to not annotate\nannotation_suffix : str | set, optional\n    the suffix or the set of suffices such that the annotation files are named {video_id}{annotation_suffix}\n    (not passed if creating from key objects or if irrelevant for the dataset)\nannotation_path : str | set, optional\n    the path or the set of paths to the folder where the annotation files are stored (not passed if creating\n    from key objects)\nbehavior_file : str, optional\n    the path to an .xlsx behavior file (not passed if creating from key objects or if irrelevant for the dataset)\ncorrection : dict, optional\n    a dictionary of corrections for the labels (e.g. {'sleping': 'sleeping', 'calm locomotion': 'locomotion'},\n    can be used to correct for variations in naming or to merge several labels in one\nframe_limit : int, default 0\n    the smallest possible length of a clip (shorter clips are discarded)\nfilter_annotated : bool, default False\n    if True, the samples that do not have any labels will be filtered\nfilter_background : bool, default False\n    if True, only the unlabeled frames that are close to annotated frames will be labeled as background\nerror_class : str, optional\n    the name of the error class (the annotations that intersect with this label will be discarded)\nmin_frames_action : int, default 0\n    the minimum length of an action (shorter actions are not annotated)\nkey_objects : tuple, optional\n    the key objects to load the AnnotationStore from\nvisibility_min_score : float, default 5\n    the minimum visibility score for visibility filtering\nvisibility_min_frac : float, default 0.7\n    the minimum fraction of visible frames for visibility filtering\nmask : dict, optional\n    a masked value dictionary (for active learning simulation experiments)\ndefault_agent_name : str, default \"ind0\"\n    the clip id to use when there is no given\nseparator : str, default \",\"\n    the separator in the csv files\nfps : int, default 30\n    frames per second in the videos</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_frames</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visibility</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">behaviors</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_suffix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">behavior_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">correction</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">frame_limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">filter_annotated</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">filter_background</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">error_class</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames_action</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visibility_min_score</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">visibility_min_frac</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.7</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">default_agent_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ind0&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">separator</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;,&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">fps</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"fullname": "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name", "modulename": "dlc2action.data.annotation_store", "qualname": "CSVAnnotationStore.default_agent_name", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.CSVAnnotationStore.separator": {"fullname": "dlc2action.data.annotation_store.CSVAnnotationStore.separator", "modulename": "dlc2action.data.annotation_store", "qualname": "CSVAnnotationStore.separator", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.CSVAnnotationStore.fps": {"fullname": "dlc2action.data.annotation_store.CSVAnnotationStore.fps", "modulename": "dlc2action.data.annotation_store", "qualname": "CSVAnnotationStore.fps", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"fullname": "dlc2action.data.annotation_store.SIMBAAnnotationStore", "modulename": "dlc2action.data.annotation_store", "qualname": "SIMBAAnnotationStore", "kind": "class", "doc": "<p>SIMBA paper format data</p>\n\n<p>Assumes the following file structure:\n```\nannotation_path\n\u251c\u2500\u2500 Video1.csv\n...\n\u2514\u2500\u2500 Video9.csv</p>\n", "bases": "FileAnnotationStore"}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"fullname": "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__", "modulename": "dlc2action.data.annotation_store", "qualname": "SIMBAAnnotationStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects)\nmin_frames : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    clip start frames (not passed if creating from key objects)\nmax_frames : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    clip end frames (not passed if creating from key objects)\nvisibility : dict, optional\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    visibility score arrays (not passed if creating from key objects or if irrelevant for the dataset)\nexclusive : bool, default True\n    if True, the annotation is single-label; if False, multi-label\nlen_segment : int, default 128\n    the length of the segments in which the data should be cut (in frames)\noverlap : int, default 0\n    the length of the overlap between neighboring segments (in frames)\nbehaviors : set, optional\n    the list of behaviors to put in the annotation (not passed if creating a blank instance or if behaviors are\n    loaded from a file)\nignored_classes : set, optional\n    the list of behaviors from the behaviors list or file to not annotate\nignored_clips : set, optional\n    clip ids to ignore\nannotation_path : str | set, optional\n    the path or the set of paths to the folder where the annotation files are stored (not passed if creating\n    from key objects)\nbehavior_file : str, optional\n    the path to an .xlsx behavior file (not passed if creating from key objects or if irrelevant for the dataset)\ncorrection : dict, optional\n    a dictionary of corrections for the labels (e.g. {'sleping': 'sleeping', 'calm locomotion': 'locomotion'},\n    can be used to correct for variations in naming or to merge several labels in one\nfilter_annotated : bool, default False\n    if True, the samples that do not have any labels will be filtered\nfilter_background : bool, default False\n    if True, only the unlabeled frames that are close to annotated frames will be labeled as background\nerror_class : str, optional\n    the name of the error class (the annotations that intersect with this label will be discarded)\nmin_frames_action : int, default 0\n    the minimum length of an action (shorter actions are not annotated)\nkey_objects : tuple, optional\n    the key objects to load the AnnotationStore from\nvisibility_min_score : float, default 5\n    the minimum visibility score for visibility filtering\nvisibility_min_frac : float, default 0.7\n    the minimum fraction of visible frames for visibility filtering\nmask : dict, optional\n    a masked value dictionary (for active learning simulation experiments)\nuse_hard_negatives : bool, default False\n    mark hard negatives as 2 instead of 0 or 1, for loss functions that have options for hard negative processing\nannotation_suffix : str | set, optional\n    the suffix or the set of suffices such that the annotation files are named {video_id}{annotation_suffix}\n    (not passed if creating from key objects or if irrelevant for the dataset)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_frames</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visibility</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">behaviors</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_clips</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">correction</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_annotated</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">filter_background</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">error_class</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames_action</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visibility_min_score</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">visibility_min_frac</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.7</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_hard_negatives</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.base_store": {"fullname": "dlc2action.data.base_store", "modulename": "dlc2action.data.base_store", "kind": "module", "doc": "<p>Abstract parent classes for the store objects</p>\n"}, "dlc2action.data.base_store.Store": {"fullname": "dlc2action.data.base_store.Store", "modulename": "dlc2action.data.base_store", "qualname": "Store", "kind": "class", "doc": "<p>A general parent class for <code>AnnotationStore</code> and <code>InputStore</code></p>\n\n<p>Processes input video information and generates ordered arrays of data samples and corresponding unique\noriginal coordinates, as well as some meta objects.\nIt is assumed that the input videos are separated into clips (e.g. corresponding to different individuals).\nEach video and each clip inside the video has a unique id (video_id and clip_id, correspondingly).\nThe original coordinates object contains information about the video_id, clip_id and start time of the\nsamples in the original input data.\nA Store has to be fully defined with a tuple of key objects.\nThe data array can be accessed with integer indices.\nThe samples can be stored as a tensor or TensorDict in RAM or as an array of file paths to be loaded on runtime.</p>\n", "bases": "abc.ABC"}, "dlc2action.data.base_store.Store.remove": {"fullname": "dlc2action.data.base_store.Store.remove", "modulename": "dlc2action.data.base_store", "qualname": "Store.remove", "kind": "function", "doc": "<p>Remove the samples corresponding to indices</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>indices : int\n    a list of integer indices to remove</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.Store.key_objects": {"fullname": "dlc2action.data.base_store.Store.key_objects", "modulename": "dlc2action.data.base_store", "qualname": "Store.key_objects", "kind": "function", "doc": "<p>Return a tuple of the key objects necessary to re-create the Store</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>key_objects : tuple\n    a tuple of key objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.Store.load_from_key_objects": {"fullname": "dlc2action.data.base_store.Store.load_from_key_objects", "modulename": "dlc2action.data.base_store", "qualname": "Store.load_from_key_objects", "kind": "function", "doc": "<p>Load the information from a tuple of key objects</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>key_objects : tuple\n    a tuple of key objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.Store.to_ram": {"fullname": "dlc2action.data.base_store.Store.to_ram", "modulename": "dlc2action.data.base_store", "qualname": "Store.to_ram", "kind": "function", "doc": "<p>Transfer the data samples to RAM if they were previously stored as file paths</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.Store.get_original_coordinates": {"fullname": "dlc2action.data.base_store.Store.get_original_coordinates", "modulename": "dlc2action.data.base_store", "qualname": "Store.get_original_coordinates", "kind": "function", "doc": "<p>Return the original coordinates array</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    an array that contains the coordinates of the data samples in original input data (video id, clip id,\n    start frame)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.Store.create_subsample": {"fullname": "dlc2action.data.base_store.Store.create_subsample", "modulename": "dlc2action.data.base_store", "qualname": "Store.create_subsample", "kind": "function", "doc": "<p>Create a new store that contains a subsample of the data</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>indices : list\n    the indices to be included in the subsample\nssl_indices : list, optional\n    the indices to be included in the subsample without the annotation data</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">List</span>, </span><span class=\"param\"><span class=\"n\">ssl_indices</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.Store.get_file_ids": {"fullname": "dlc2action.data.base_store.Store.get_file_ids", "modulename": "dlc2action.data.base_store", "qualname": "Store.get_file_ids", "kind": "function", "doc": "<p>Process data parameters and return a list of ids  of the videos that should\nbe processed by the __init__ function</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_ids : list\n    a list of video file ids</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.Store.get_parameters": {"fullname": "dlc2action.data.base_store.Store.get_parameters", "modulename": "dlc2action.data.base_store", "qualname": "Store.get_parameters", "kind": "function", "doc": "<p>Generate a list of parameter names for the __init__ function</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>parameter_names: list\n    a list of necessary parameter names</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.Store.new": {"fullname": "dlc2action.data.base_store.Store.new", "modulename": "dlc2action.data.base_store", "qualname": "Store.new", "kind": "function", "doc": "<p>Create a new instance of the same class</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>new_instance : Store\n    a new instance of the same class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore": {"fullname": "dlc2action.data.base_store.InputStore", "modulename": "dlc2action.data.base_store", "qualname": "InputStore", "kind": "class", "doc": "<p>A class that generates model input data from video information and stores it</p>\n\n<p>Processes input video information and generates ordered arrays of data samples and corresponding unique\noriginal coordinates, as well as some meta objects.\nIt is assumed that the input videos are separated into clips (e.g. corresponding to different individuals).\nEach video and each clip inside the video has a unique id (video_id and clip_id, correspondingly).\nThe original coordinates object contains information about the video_id, clip_id and start time of the\nsamples in the original input data.\nAn InputStore has to be fully defined with a tuple of key objects.\nThe data array can be accessed with integer indices.\nThe samples can be stored as a TensorDict in RAM or as an array of file paths to be loaded on runtime.\nWhen no arguments are passed a blank class instance should be created that can later be filled with\ninformation from key objects</p>\n", "bases": "Store"}, "dlc2action.data.base_store.InputStore.__init__": {"fullname": "dlc2action.data.base_store.InputStore.__init__", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects)\nkey_objects : tuple, optional\n    a tuple of key objects\ndata_path : str | set, optional\n    the path to the folder where the pose and feature files are stored or a set of such paths\n    (not passed if creating from key objects or from <code>file_paths</code>)\nfile_paths : set, optional\n    a set of string paths to the pose and feature files\n    (not passed if creating from key objects or from <code>data_path</code>)\nfeature_save_path : str, optional\n    the path to the folder where pre-processed files are stored (not passed if creating from key objects)\nfeature_extraction_pars : dict, optional\n    a dictionary of feature extraction parameters (not passed if creating from key objects)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">feature_save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">feature_extraction_pars</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.base_store.InputStore.get_video_id": {"fullname": "dlc2action.data.base_store.InputStore.get_video_id", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_video_id", "kind": "function", "doc": "<p>Get the video id from an element of original coordinates</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>coords : tuple\n    an element of the original coordinates array</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_id: str\n    the id of the video that the coordinates point to</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coords</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_clip_id": {"fullname": "dlc2action.data.base_store.InputStore.get_clip_id", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_clip_id", "kind": "function", "doc": "<p>Get the clip id from an element of original coordinates</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>coords : tuple\n    an element of the original coordinates array</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>clip_id : str\n    the id of the clip that the coordinates point to</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coords</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_clip_length": {"fullname": "dlc2action.data.base_store.InputStore.get_clip_length", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_clip_length", "kind": "function", "doc": "<p>Get the clip length from the id</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_id : str\n    the video id\nclip_id : str\n    the clip id</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>clip_length : int\n    the length of the clip</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">video_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"fullname": "dlc2action.data.base_store.InputStore.get_clip_start_end", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_clip_start_end", "kind": "function", "doc": "<p>Get the clip start and end frames from an element of original coordinates</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>coords : tuple\n    an element of original coordinates array</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>start: int\n    the start frame of the clip that the coordinates point to\nend : int\n    the end frame of the clip that the coordinates point to</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coords</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_clip_start": {"fullname": "dlc2action.data.base_store.InputStore.get_clip_start", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_clip_start", "kind": "function", "doc": "<p>Get the clip start frame from the video id and the clip id</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_id : str\n    the video id\nclip_id : str\n    the clip id</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>clip_start : int\n    the start frame of the clip</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">video_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_visibility": {"fullname": "dlc2action.data.base_store.InputStore.get_visibility", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_visibility", "kind": "function", "doc": "<p>Get the fraction of the frames in that have a visibility score better than a hard_threshold</p>\n\n<p>For example, in the case of keypoint data the visibility score can be the number of identified keypoints.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_id : str\n    the video id of the frames\nclip_id : str\n    the clip id of the frames\nstart : int\n    the start frame\nend : int\n    the end frame\nscore : float\n    the visibility score hard_threshold</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>frac_visible: float\n    the fraction of frames with visibility above the hard_threshold</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">video_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">score</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"fullname": "dlc2action.data.base_store.InputStore.get_annotation_objects", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_annotation_objects", "kind": "function", "doc": "<p>Get a dictionary of objects necessary to create an AnnotationStore</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>annotation_objects : dict\n    a dictionary of objects to be passed to the AnnotationStore constructor where the keys are the names of\n    the objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_folder": {"fullname": "dlc2action.data.base_store.InputStore.get_folder", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_folder", "kind": "function", "doc": "<p>Get the input folder that the file with this video id was read from</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_id : str\n    the video id</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>folder : str\n    the path to the directory that contains the input file associated with the video id</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">video_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"fullname": "dlc2action.data.base_store.InputStore.get_clip_length_from_coords", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_clip_length_from_coords", "kind": "function", "doc": "<p>Get the length of a clip from an element of the original coordinates array</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>coords : tuple\n    an element of the original coordinates array</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>clip_length : int\n    the length of the clip</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coords</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_folder_order": {"fullname": "dlc2action.data.base_store.InputStore.get_folder_order", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_folder_order", "kind": "function", "doc": "<p>Get a list of folders corresponding to the data samples</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>folder_order : list\n    a list of string folder basenames corresponding to the data samples (e.g. 'folder2'\n    if the corresponding file was read from '/path/to/folder1/folder2')</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"fullname": "dlc2action.data.base_store.InputStore.get_video_id_order", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_video_id_order", "kind": "function", "doc": "<p>Get a list of video ids corresponding to the data samples</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_id_order : list\n    a list of string names of the video ids corresponding to the data samples</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_tag": {"fullname": "dlc2action.data.base_store.InputStore.get_tag", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_tag", "kind": "function", "doc": "<p>Return a tag object corresponding to an index</p>\n\n<p>Tags can carry meta information (like annotator id) and are accepted by models that require\nthat information and by metrics (some metrics have options for averaging over the tags).\nWhen a tag is <code>None</code>, it is not passed to the model.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>idx : int\n    the index</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>tag : int\n    the tag index</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">idx</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_indices": {"fullname": "dlc2action.data.base_store.InputStore.get_indices", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_indices", "kind": "function", "doc": "<p>Get a list of indices of samples that have a specific meta tag</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>tag : int\n    the meta tag for the subsample (<code>None</code> for the whole dataset)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>indices : list\n    a list of indices that meet the criteria</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tag</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.InputStore.get_tags": {"fullname": "dlc2action.data.base_store.InputStore.get_tags", "modulename": "dlc2action.data.base_store", "qualname": "InputStore.get_tags", "kind": "function", "doc": "<p>Get a list of all meta tags</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>tags: List\n    a list of unique meta tag values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.AnnotationStore": {"fullname": "dlc2action.data.base_store.AnnotationStore", "modulename": "dlc2action.data.base_store", "qualname": "AnnotationStore", "kind": "class", "doc": "<p>A class that generates annotation from video information and stores it</p>\n\n<p>Processes input video information and generates ordered arrays of annotation samples and corresponding unique\noriginal coordinates, as well as some meta objects.\nIt is assumed that the input videos are separated into clips (e.g. corresponding to different individuals).\nEach video and each clip inside the video has a unique id (video_id and clip_id, correspondingly).\nThe original coordinates object contains information about the video_id, clip_id and start time of the\nsamples in the original input data.\nAn AnnotationStore has to be fully defined with a tuple of key objects.\nThe annotation array can be accessed with integer indices.\nThe samples can be stored as a torch.Tensor in RAM or as an array of file paths to be loaded on runtime.\nWhen no arguments are passed a blank class instance should be created that can later be filled with\ninformation from key objects</p>\n", "bases": "Store"}, "dlc2action.data.base_store.AnnotationStore.__init__": {"fullname": "dlc2action.data.base_store.AnnotationStore.__init__", "modulename": "dlc2action.data.base_store", "qualname": "AnnotationStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects)\nkey_objects : tuple, optional\n    a tuple of key objects\nannotation_path : str | set, optional\n    the path or the set of paths to the folder where the annotation files are stored (not passed if creating\n    from key objects)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"fullname": "dlc2action.data.base_store.AnnotationStore.required_objects", "modulename": "dlc2action.data.base_store", "qualname": "AnnotationStore.required_objects", "kind": "variable", "doc": "<p>A list of string names of the objects required from the input store</p>\n", "default_value": "[]"}, "dlc2action.data.base_store.AnnotationStore.get_len": {"fullname": "dlc2action.data.base_store.AnnotationStore.get_len", "modulename": "dlc2action.data.base_store", "qualname": "AnnotationStore.get_len", "kind": "function", "doc": "<p>Get the length of the subsample of labeled/unlabeled data</p>\n\n<p>If return_unlabeled is True, the index is in the subsample of unlabeled data, if False in labeled\nand if return_unlabeled is None the index is already correct</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>return_unlabeled : bool\n    the identifier for the subsample</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>length : int\n    the length of the subsample</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">return_unlabeled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"fullname": "dlc2action.data.base_store.AnnotationStore.count_classes", "modulename": "dlc2action.data.base_store", "qualname": "AnnotationStore.count_classes", "kind": "function", "doc": "<p>Get a dictionary with class-wise frame counts</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>frac : bool, default False\n    if <code>True</code>, a fraction of the total frame count is returned\nzeros : bool. default False\n    if <code>True</code>, the number of known negative samples is counted (only if the annotation is multi-label)\nbouts : bool, default False\n    if <code>True</code>, instead of frame counts segment counts are returned</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>count_dictionary : dict\n    a dictionary with class indices as keys and frame counts as values</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">frac</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">zeros</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">bouts</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"fullname": "dlc2action.data.base_store.AnnotationStore.behaviors_dict", "modulename": "dlc2action.data.base_store", "qualname": "AnnotationStore.behaviors_dict", "kind": "function", "doc": "<p>Get a dictionary of class names</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>behavior_dictionary: dict\n    a dictionary with class indices as keys and class names as values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"fullname": "dlc2action.data.base_store.AnnotationStore.annotation_class", "modulename": "dlc2action.data.base_store", "qualname": "AnnotationStore.annotation_class", "kind": "function", "doc": "<p>Get the type of annotation ('exclusive_classification', 'nonexclusive_classification', more coming soon)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>annotation_class : str\n    the type of annotation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.AnnotationStore.size": {"fullname": "dlc2action.data.base_store.AnnotationStore.size", "modulename": "dlc2action.data.base_store", "qualname": "AnnotationStore.size", "kind": "function", "doc": "<p>Get the total number of frames in the data</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>size : int\n    the total number of frames</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"fullname": "dlc2action.data.base_store.AnnotationStore.filtered_indices", "modulename": "dlc2action.data.base_store", "qualname": "AnnotationStore.filtered_indices", "kind": "function", "doc": "<p>Return the indices of the samples that should be removed</p>\n\n<p>Choosing the indices can be based on any kind of filering defined in the __init__ function by the data\nparameters</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>indices_to_remove : list\n    a list of integer indices that should be removed</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"fullname": "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels", "modulename": "dlc2action.data.base_store", "qualname": "AnnotationStore.set_pseudo_labels", "kind": "function", "doc": "<p>Set pseudo labels to the unlabeled data</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>labels : torch.Tensor\n    a tensor of pseudo-labels for the unlabeled data</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">labels</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.PoseInputStore": {"fullname": "dlc2action.data.base_store.PoseInputStore", "modulename": "dlc2action.data.base_store", "qualname": "PoseInputStore", "kind": "class", "doc": "<p>A subclass of InputStore for pose estimation data</p>\n\n<p>Contains methods used by pose estimation feature extractors.\nAll methods receive a data dictionary as input. This dictionary is the same as what is passed to the\nfeature extractor and the only limitations for the structure are that it has to relate to one video id\nand have clip ids as keys. Read the documentation at <code>dlc2action.data</code> to find out more about videos\nand clips.</p>\n", "bases": "InputStore"}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"fullname": "dlc2action.data.base_store.PoseInputStore.get_likelihood", "modulename": "dlc2action.data.base_store", "qualname": "PoseInputStore.get_likelihood", "kind": "function", "doc": "<p>Get the likelihood values</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_dict : dict\n    the data dictionary\nclip_id : str\n    the clip id\nbodypart : str\n    the name of the body part</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>likelihoods: np.ndarrray | None\n    <code>None</code> if the dataset doesn't have likelihoods or an array of shape (#timestamps)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">bodypart</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"fullname": "dlc2action.data.base_store.PoseInputStore.get_coords", "modulename": "dlc2action.data.base_store", "qualname": "PoseInputStore.get_coords", "kind": "function", "doc": "<p>Get the coordinates array of a specific body part in a specific clip</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_dict : dict\n    the data dictionary\nclip_id : str\n    the clip id\nbodypart : str\n    the name of the body part</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>coords : np.ndarray\n    the coordinates array of shape (#timesteps, #coordinates)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>, </span><span class=\"param\"><span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">bodypart</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"fullname": "dlc2action.data.base_store.PoseInputStore.get_bodyparts", "modulename": "dlc2action.data.base_store", "qualname": "PoseInputStore.get_bodyparts", "kind": "function", "doc": "<p>Get a list of bodypart names</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bodyparts : list\n    a list of string or integer body part names</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"fullname": "dlc2action.data.base_store.PoseInputStore.get_n_frames", "modulename": "dlc2action.data.base_store", "qualname": "PoseInputStore.get_n_frames", "kind": "function", "doc": "<p>Get the length of the clip</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_dict : dict\n    the data dictionary\nclip_id : str\n    the clip id</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>n_frames : int\n    the length of the clip</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>, </span><span class=\"param\"><span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset": {"fullname": "dlc2action.data.dataset", "modulename": "dlc2action.data.dataset", "kind": "module", "doc": "<p>Behavior dataset (class that manages high-level data interactions)</p>\n"}, "dlc2action.data.dataset.BehaviorDataset": {"fullname": "dlc2action.data.dataset.BehaviorDataset", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset", "kind": "class", "doc": "<p>A generalized dataset class</p>\n\n<p>Data and annotation are stored in separate InputStore and AnnotationStore objects; the dataset class\nmanages their interactions.</p>\n", "bases": "typing.Generic[+T_co]"}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"fullname": "dlc2action.data.dataset.BehaviorDataset.__init__", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_type : str\n    the data type (see available types by running BehaviorDataset.data_types())\nannotation_type : str\n    the annotation type (see available types by running BehaviorDataset.annotation_types())\nssl_transformations : list\n    a list of functions that take a sample dictionary as input and return an (ssl input, ssl target) tuple\nsaved_data_path : str\n    the path to a pre-computed pickled dataset\ninput_store : InputStore\n    a pre-computed input store\nannotation_store : AnnotationStore\n    a precomputed annotation store\nonly_load_annotated : bool\n    if True, the input files that don't have a matching annotation file will be disregarded\n*data_parameters : dict\n    parameters to initialize the input and annotation stores</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;none&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_transformations</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">saved_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">input_store</span><span class=\"p\">:</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">base_store</span><span class=\"o\">.</span><span class=\"n\">InputStore</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_store</span><span class=\"p\">:</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">base_store</span><span class=\"o\">.</span><span class=\"n\">AnnotationStore</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">only_load_annotated</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">recompute_annotation</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">data_parameters</span></span>)</span>"}, "dlc2action.data.dataset.BehaviorDataset.ssl_transformations": {"fullname": "dlc2action.data.dataset.BehaviorDataset.ssl_transformations", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.ssl_transformations", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.dataset.BehaviorDataset.input_type": {"fullname": "dlc2action.data.dataset.BehaviorDataset.input_type", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.input_type", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.dataset.BehaviorDataset.annotation_type": {"fullname": "dlc2action.data.dataset.BehaviorDataset.annotation_type", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.annotation_type", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.dataset.BehaviorDataset.stats": {"fullname": "dlc2action.data.dataset.BehaviorDataset.stats", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.stats", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.dataset.BehaviorDataset.ids": {"fullname": "dlc2action.data.dataset.BehaviorDataset.ids", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.ids", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.dataset.BehaviorDataset.tag": {"fullname": "dlc2action.data.dataset.BehaviorDataset.tag", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.tag", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.dataset.BehaviorDataset.return_unlabeled": {"fullname": "dlc2action.data.dataset.BehaviorDataset.return_unlabeled", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.return_unlabeled", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.dataset.BehaviorDataset.input_indices": {"fullname": "dlc2action.data.dataset.BehaviorDataset.input_indices", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.input_indices", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.dataset.BehaviorDataset.annotation_indices": {"fullname": "dlc2action.data.dataset.BehaviorDataset.annotation_indices", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.annotation_indices", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.dataset.BehaviorDataset.indices": {"fullname": "dlc2action.data.dataset.BehaviorDataset.indices", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.indices", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"fullname": "dlc2action.data.dataset.BehaviorDataset.get_tags", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.get_tags", "kind": "function", "doc": "<p>Get a list of all meta tags</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>tags: List\n    a list of unique meta tag values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.save": {"fullname": "dlc2action.data.dataset.BehaviorDataset.save", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.save", "kind": "function", "doc": "<p>Save the dictionary</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>save_path : str\n    the path where the pickled file will be stored</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"fullname": "dlc2action.data.dataset.BehaviorDataset.to_ram", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.to_ram", "kind": "function", "doc": "<p>Transfer the dataset to RAM</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"fullname": "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.generate_full_length_gt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"fullname": "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.generate_full_length_prediction", "kind": "function", "doc": "<p>Map predictions for the equal-length pieces to predictions for the original data</p>\n\n<p>Probabilities are averaged over predictions on overlapping intervals.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>predicted: torch.Tensor\n    a tensor of predicted probabilities of shape <code>(N, #classes, #frames)</code></p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>full_length_prediction : dict\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and values are\n    averaged probability tensors</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"fullname": "dlc2action.data.dataset.BehaviorDataset.find_valleys", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.find_valleys", "kind": "function", "doc": "<p>Find the intervals where the probability of a certain class is below or above a certain hard_threshold</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>predicted : torch.Tensor | dict\n    either a tensor of predictions for the data prompts or the output of\n    <code>BehaviorDataset.generate_full_length_prediction</code>\nthreshold : float, default 0.5\n    the main hard_threshold\nmin_frames : int, default 0\n    the minimum length of the intervals\nvisibility_min_score : float, default 0\n    the minimum visibility score in the intervals\nvisibility_min_frac : float, default 0\n    fraction of the interval that has to have the visibility score larger than visibility_score_thr\nmain_class : int, default 1\n    the index of the class the function is inspecting\nlow : bool, default True\n    if True, the probability in the intervals has to be below the hard_threshold, and if False, it has to be above\npredicted_error : torch.Tensor, optional\n    a tensor of error predictions for the data prompts\nerror_threshold : float, default 0.5\n    maximum possible probability of error at the intervals\nhysteresis: bool, default False\n    if True, the function will apply a hysteresis hard_threshold with the soft hard_threshold defined by threshold_diff\nthreshold_diff: float, optional\n    the difference between the soft and hard hard_threshold if hysteresis is used; if hysteresis is True, low is False and threshold_diff is None, the soft hard_threshold condition is set to the main_class having a larger probability than other classes\nmin_frames_error: int, optional\n    if not None, the intervals will only be considered where the error probability is below error_threshold at at least min_frames_error consecutive frames</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>valleys : dict\n    a dictionary where keys are video ids and values are lists of (start, end, individual name) tuples that denote the chosen intervals</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">visibility_min_score</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">visibility_min_frac</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">main_class</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">low</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">predicted_error</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">error_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">hysteresis</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_diff</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames_error</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">smooth_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">cut_annotated</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"fullname": "dlc2action.data.dataset.BehaviorDataset.valleys_union", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.valleys_union", "kind": "function", "doc": "<p>Find the intersection of two valleys dictionaries</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>valleys_list : list\n    a list of valleys dictionaries</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>intersection : dict\n    a new valleys dictionary with the intersection of the input intervals</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">valleys_list</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"fullname": "dlc2action.data.dataset.BehaviorDataset.valleys_intersection", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.valleys_intersection", "kind": "function", "doc": "<p>Find the intersection of two valleys dictionaries</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>valleys_list : list\n    a list of valleys dictionaries</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>intersection : dict\n    a new valleys dictionary with the intersection of the input intervals</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">valleys_list</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"fullname": "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.partition_train_test_val", "kind": "function", "doc": "<p>Partition the dataset into three new datasets</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>use_test : float, default 0\n    The fraction of the test dataset to be used in training without labels\nsplit_path : str, optional\n    The path to load the split information from (if <code>'file'</code> method is used) and to save it to\n    (if <code>'save_split'</code> is <code>True</code>)\nmethod : {'random', 'random:test-from-name', 'random:test-from-name:{name}',\n    'val-from-name:{val_name}:test-from-name:{test_name}',\n    'random:equalize:segments', 'random:equalize:videos',\n    'folders', 'time', 'time:strict', 'file'}\n    The partitioning method:\n    - <code>'random'</code>: sort videos into subsets randomly,\n    - <code>'random:test-from-name'</code> (or <code>'random:test-from-name:{name}'</code>): sort videos into training and validation\n        subsets randomly and create\n        the test subset from the video ids that start with a speific substring (<code>'test'</code> by default, or <code>name</code>\n        if provided),\n    - <code>'random:equalize:segments'</code> and <code>'random:equalize:videos'</code>: sort videos into subsets randomly but\n        making sure that for the rarest classes at least <code>0.8 * val_frac</code> of the videos/segments that contain\n        occurences of the class get into the validation subset and <code>0.8 * test_frac</code> get into the test subset;\n        this in ensured for all classes in order of increasing number of occurences until the validation and\n        test subsets are full\n    - <code>'val-from-name:{val_name}:test-from-name:{test_name}'</code>: create the validation and test\n        subsets from the video ids that start with specific substrings (<code>val_name</code> for validation\n        and <code>test_name</code> for test) and sort all other videos into the training subset\n    - <code>'folders'</code>: read videos from folders named <em>test</em>, <em>train</em> and <em>val</em> into corresponding subsets,\n    - <code>'time'</code>: split each video into training, validation and test subsequences,\n    - <code>'time:strict'</code>: split each video into validation, test and training subsequences\n        and throw out the last segments in validation and test (to get rid of overlaps),\n    - <code>'file'</code>: split according to a split file.\nval_frac : float, default 0\n    The fraction of the dataset to be used in validation\ntest_frac : float, default 0\n    The fraction of the dataset to be used in test\nsave_split : bool, default False\n    Save a split file if True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>train_dataset : BehaviorDataset\n    train dataset</p>\n\n<p>val_dataset : BehaviorDataset\n    validation dataset</p>\n\n<p>test_dataset : BehaviorDataset\n    test dataset</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">use_test</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">split_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;random&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">val_frac</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">test_frac</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">save_split</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">normalize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">skip_normalization_keys</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stats</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"fullname": "dlc2action.data.dataset.BehaviorDataset.class_weights", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.class_weights", "kind": "function", "doc": "<p>Calculate class weights in inverse proportion to number of samples</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>weights: list\n    a list of class weights</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">proportional</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"fullname": "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.boundary_class_weight", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"fullname": "dlc2action.data.dataset.BehaviorDataset.count_classes", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.count_classes", "kind": "function", "doc": "<p>Get a class counter dictionary</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bouts : bool, default False\n    if <code>True</code>, instead of frame counts segment counts are returned</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>count_dictionary : dict\n    a dictionary with class indices as keys and frame or bout counts as values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">bouts</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"fullname": "dlc2action.data.dataset.BehaviorDataset.behaviors_dict", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.behaviors_dict", "kind": "function", "doc": "<p>Get a behavior dictionary</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dict\n    behavior dictionary</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"fullname": "dlc2action.data.dataset.BehaviorDataset.bodyparts_order", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.bodyparts_order", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"fullname": "dlc2action.data.dataset.BehaviorDataset.features_shape", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.features_shape", "kind": "function", "doc": "<p>Get the shapes of the input features</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>shapes : Dict\n    a dictionary with the shapes of the features</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"fullname": "dlc2action.data.dataset.BehaviorDataset.num_classes", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.num_classes", "kind": "function", "doc": "<p>Get the number of classes in the data</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>num_classes : int\n    the number of classes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"fullname": "dlc2action.data.dataset.BehaviorDataset.len_segment", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.len_segment", "kind": "function", "doc": "<p>Get the segment length in the data</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>len_segment : int\n    the segment length</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"fullname": "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.set_ssl_transformations", "kind": "function", "doc": "<p>Set new SSL transformations</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>ssl_transformations : list\n    a list of functions that take a sample feature dictionary as input and output ssl_inputs and ssl_targets\n    lists</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ssl_transformations</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.new": {"fullname": "dlc2action.data.dataset.BehaviorDataset.new", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.new", "kind": "function", "doc": "<p>Create a new object of the same class</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>new_instance: BehaviorDataset\n    a new instance of the same class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"fullname": "dlc2action.data.dataset.BehaviorDataset.get_parameters", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.get_parameters", "kind": "function", "doc": "<p>Get parameters necessary for initialization</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_type : str\n    the data type\nannotation_type : str\n    the annotation type</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">annotation_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"fullname": "dlc2action.data.dataset.BehaviorDataset.data_types", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.data_types", "kind": "function", "doc": "<p>List available data types</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>data_types : list\n    available data types</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"fullname": "dlc2action.data.dataset.BehaviorDataset.annotation_types", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.annotation_types", "kind": "function", "doc": "<p>List available annotation types</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>annotation_types : list\n    available annotation types</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"fullname": "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.set_indexing_parameters", "kind": "function", "doc": "<p>Set the parameters that change the subset that is returned at <code>__getitem__</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>unlabeled : bool\n    a pseudolabeling parameter; return only unlabeled samples if <code>True</code>, only labeled if <code>False</code> and\n    all if <code>None</code>\ntag : int\n    if not <code>None</code>, only samples with this meta tag will be returned</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">unlabeled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>, </span><span class=\"param\"><span class=\"n\">tag</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"fullname": "dlc2action.data.dataset.BehaviorDataset.get_intervals", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.get_intervals", "kind": "function", "doc": "<p>Get a list of intervals covered by the dataset in the original coordinates</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>intervals : dict\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and\n    values are lists of the intervals in <code>[start, end]</code> format</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"fullname": "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.get_unannotated_intervals", "kind": "function", "doc": "<p>Get a list of intervals in the original coordinates where there is no annotation</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>intervals : dict\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and\n    values are lists of the intervals in <code>[start, end]</code> format</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">first_intervals</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"fullname": "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.get_annotated_intervals", "kind": "function", "doc": "<p>Get a list of intervals in the original coordinates where there is no annotation</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>intervals : dict\n    a nested dictionary where first-level keys are video ids, second-level keys are clip ids and\n    values are lists of the intervals in <code>[start, end]</code> format</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"fullname": "dlc2action.data.dataset.BehaviorDataset.get_ids", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.get_ids", "kind": "function", "doc": "<p>Get a dictionary of all clip ids in the dataset</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>ids : dict\n    a dictionary where keys are video ids and values are lists of clip ids</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"fullname": "dlc2action.data.dataset.BehaviorDataset.get_len", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.get_len", "kind": "function", "doc": "<p>Get the length of a specific clip</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_id : str\n    the video id\nclip_id : str\n    the clip id</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>length : int\n    the length</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">video_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"fullname": "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.get_confusion_matrix", "kind": "function", "doc": "<p>Get a confusion matrix</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>prediction : torch.Tensor\n    a tensor of predicted class probabilities of shape <code>(#samples, #classes, #frames)</code>\nconfusion_type : {\"recall\", \"precision\"}\n    for datasets with non-exclusive annotation, if <code>type</code> is <code>\"recall\"</code>, only false positives are taken\n    into account, and if <code>type</code> is <code>\"precision\"</code>, only false negatives</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>confusion_matrix : np.ndarray\n    a confusion matrix of shape <code>(#classes, #classes)</code> where <code>A[i, j] = F_ij/N_i</code>, <code>F_ij</code> is the number of\n    frames that have the i-th label in the ground truth and a false positive j-th label in the prediction,\n    <code>N_i</code> is the number of frames that have the i-th label in the ground truth\nclasses : list\n    a list of classes</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">prediction</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">confusion_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;recall&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"fullname": "dlc2action.data.dataset.BehaviorDataset.annotation_class", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.annotation_class", "kind": "function", "doc": "<p>Get the type of annotation ('exclusive_classification', 'nonexclusive_classification', more coming soon)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>annotation_class : str\n    the type of annotation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"fullname": "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.set_normalization_stats", "kind": "function", "doc": "<p>Set the stats to normalize data at runtime</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>stats : dict\n    a nested dictionary where first-level keys are feature key names, second-level keys are 'mean' and 'std'\n    and values are the statistics in <code>torch</code> tensors of shape <code>(#features, 1)</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">stats</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"fullname": "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.get_min_max_frames", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">video_id</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"fullname": "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats", "modulename": "dlc2action.data.dataset", "qualname": "BehaviorDataset.get_normalization_stats", "kind": "function", "doc": "<p>Get mean and standard deviation for each key</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>stats : dict\n    a nested dictionary where first-level keys are feature key names, second-level keys are 'mean' and 'std'\n    and values are the statistics in <code>torch</code> tensors of shape <code>(#features, 1)</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">skip_keys</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store": {"fullname": "dlc2action.data.input_store", "modulename": "dlc2action.data.input_store", "kind": "module", "doc": "<p>Specific realisations of <code>dlc2action.data.base_store.InputStore</code> are defined here</p>\n"}, "dlc2action.data.input_store.GeneralInputStore": {"fullname": "dlc2action.data.input_store.GeneralInputStore", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore", "kind": "class", "doc": "<p>A generalized realization of a PoseInputStore</p>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>data_path\n\u251c\u2500\u2500 video1DLC1000.pickle\n\u251c\u2500\u2500 video2DLC400.pickle\n\u251c\u2500\u2500 video1_features.pt\n\u2514\u2500\u2500 video2_features.pt\n</code></pre>\n\n<p>Here <code>data_suffix</code> is <code>{'DLC1000.pickle', 'DLC400.pickle'}</code> and <code>feature_suffix</code> (optional) is <code>'_features.pt'</code>.</p>\n", "bases": "dlc2action.data.base_store.PoseInputStore"}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"fullname": "dlc2action.data.input_store.GeneralInputStore.__init__", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects\ndata_path : str | set, optional\n    the path to the folder where the pose and feature files are stored or a set of such paths\n    (not passed if creating from key objects or from <code>file_paths</code>)\nfile_paths : set, optional\n    a set of string paths to the pose and feature files\n    (not passed if creating from key objects or from <code>data_path</code>)\ndata_suffix : str | set, optional\n    the suffix or the set of suffices such that the pose files are named {video_id}{data_suffix}\n    (not passed if creating from key objects or if irrelevant for the dataset)\ndata_prefix : str | set, optional\n    the prefix or the set of prefixes such that the pose files for different video views of the same\n    clip are named {prefix}{sep}{video_id}{data_suffix} (not passed if creating from key objects\n    or if irrelevant for the dataset)\nfeature_suffix : str | set, optional\n    the suffix or the set of suffices such that the additional feature files are named\n    {video_id}{feature_suffix} (and placed at the data_path folder)\nconvert_int_indices : bool, default True\n    if <code>True</code>, convert any integer key <code>i</code> in feature files to <code>'ind{i}'</code>\nfeature_save_path : str, optional\n    the path to the folder where pre-processed files are stored (not passed if creating from key objects)\ncanvas_shape : List, default [1, 1]\n    the canvas size where the pose is defined\nlen_segment : int, default 128\n    the length of the segments in which the data should be cut (in frames)\noverlap : int, default 0\n    the length of the overlap between neighboring segments (in frames)\nfeature_extraction : str, default 'kinematic'\n    the feature extraction method (see options.feature_extractors for available options)\nignored_clips : list, optional\n    list of strings of clip ids to ignore\nignored_bodyparts : list, optional\n    list of strings of bodypart names to ignore\ndefault_agent_name : str, default 'ind0'\n    the agent name used as default in the pose files for a single agent\nkey_objects : tuple, optional\n    a tuple of key objects\nlikelihood_threshold : float, default 0\n    coordinate values with likelihoods less than this value will be set to 'unknown'\nnum_cpus : int, optional\n    the number of cpus to use in data processing\nframe_limit : int, default 1\n    clips shorter than this number of frames will be ignored\nfeature_extraction_pars : dict, optional\n    parameters of the feature extractor</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_suffix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_prefix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">feature_suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">convert_int_indices</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">feature_save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">canvas_shape</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">feature_extraction</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematic&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_clips</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_bodyparts</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">default_agent_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ind0&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">likelihood_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_cpus</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">frame_limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">normalize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">feature_extraction_pars</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">centered</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">transpose_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.input_store.GeneralInputStore.data_suffix": {"fullname": "dlc2action.data.input_store.GeneralInputStore.data_suffix", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.data_suffix", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "dlc2action.data.input_store.GeneralInputStore.loaded_max": {"fullname": "dlc2action.data.input_store.GeneralInputStore.loaded_max", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.loaded_max", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.bodyparts": {"fullname": "dlc2action.data.input_store.GeneralInputStore.bodyparts", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.bodyparts", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.visibility": {"fullname": "dlc2action.data.input_store.GeneralInputStore.visibility", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.visibility", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.normalize": {"fullname": "dlc2action.data.input_store.GeneralInputStore.normalize", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.normalize", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"fullname": "dlc2action.data.input_store.GeneralInputStore.video_order", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.video_order", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.centered": {"fullname": "dlc2action.data.input_store.GeneralInputStore.centered", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.centered", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"fullname": "dlc2action.data.input_store.GeneralInputStore.feature_extraction", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.feature_extraction", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"fullname": "dlc2action.data.input_store.GeneralInputStore.len_segment", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.len_segment", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.data_suffices": {"fullname": "dlc2action.data.input_store.GeneralInputStore.data_suffices", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.data_suffices", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.data_prefixes": {"fullname": "dlc2action.data.input_store.GeneralInputStore.data_prefixes", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.data_prefixes", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"fullname": "dlc2action.data.input_store.GeneralInputStore.feature_suffix", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.feature_suffix", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"fullname": "dlc2action.data.input_store.GeneralInputStore.convert_int_indices", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.convert_int_indices", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.overlap": {"fullname": "dlc2action.data.input_store.GeneralInputStore.overlap", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.overlap", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"fullname": "dlc2action.data.input_store.GeneralInputStore.canvas_shape", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.canvas_shape", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"fullname": "dlc2action.data.input_store.GeneralInputStore.default_agent_name", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.default_agent_name", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"fullname": "dlc2action.data.input_store.GeneralInputStore.feature_save_path", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.feature_save_path", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"fullname": "dlc2action.data.input_store.GeneralInputStore.likelihood_threshold", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.likelihood_threshold", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.num_cpus": {"fullname": "dlc2action.data.input_store.GeneralInputStore.num_cpus", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.num_cpus", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"fullname": "dlc2action.data.input_store.GeneralInputStore.frame_limit", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.frame_limit", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.transpose": {"fullname": "dlc2action.data.input_store.GeneralInputStore.transpose", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.transpose", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.ram": {"fullname": "dlc2action.data.input_store.GeneralInputStore.ram", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.ram", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"fullname": "dlc2action.data.input_store.GeneralInputStore.min_frames", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.min_frames", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"fullname": "dlc2action.data.input_store.GeneralInputStore.original_coordinates", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.original_coordinates", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"fullname": "dlc2action.data.input_store.GeneralInputStore.file_paths", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.file_paths", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.extractor": {"fullname": "dlc2action.data.input_store.GeneralInputStore.extractor", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.extractor", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.canvas_center": {"fullname": "dlc2action.data.input_store.GeneralInputStore.canvas_center", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.canvas_center", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.step": {"fullname": "dlc2action.data.input_store.GeneralInputStore.step", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.step", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_folder", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_folder", "kind": "function", "doc": "<p>Get the input folder that the file with this video id was read from</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_id : str\n    the video id</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>folder : str\n    the path to the directory that contains the input file associated with the video id</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">video_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.remove": {"fullname": "dlc2action.data.input_store.GeneralInputStore.remove", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.remove", "kind": "function", "doc": "<p>Remove the samples corresponding to indices</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>indices : int\n    a list of integer indices to remove</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"fullname": "dlc2action.data.input_store.GeneralInputStore.key_objects", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.key_objects", "kind": "function", "doc": "<p>Return a tuple of the key objects necessary to re-create the Store</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>key_objects : tuple\n    a tuple of key objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"fullname": "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.load_from_key_objects", "kind": "function", "doc": "<p>Load the information from a tuple of key objects</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>key_objects : tuple\n    a tuple of key objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"fullname": "dlc2action.data.input_store.GeneralInputStore.to_ram", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.to_ram", "kind": "function", "doc": "<p>Transfer the data samples to RAM if they were previously stored as file paths</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_original_coordinates", "kind": "function", "doc": "<p>Return the original coordinates array</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    an array that contains the coordinates of the data samples in original input data (video id, clip id,\n    start frame)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"fullname": "dlc2action.data.input_store.GeneralInputStore.create_subsample", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.create_subsample", "kind": "function", "doc": "<p>Create a new store that contains a subsample of the data</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>indices : list\n    the indices to be included in the subsample\nssl_indices : list, optional\n    the indices to be included in the subsample without the annotation data</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">List</span>, </span><span class=\"param\"><span class=\"n\">ssl_indices</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_video_id", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_video_id", "kind": "function", "doc": "<p>Get the video id from an element of original coordinates</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>coords : tuple\n    an element of the original coordinates array</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_id: str\n    the id of the video that the coordinates point to</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coords</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_clip_id", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_clip_id", "kind": "function", "doc": "<p>Get the clip id from an element of original coordinates</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>coords : tuple\n    an element of the original coordinates array</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>clip_id : str\n    the id of the clip that the coordinates point to</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coords</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_clip_length", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_clip_length", "kind": "function", "doc": "<p>Get the clip length from the id</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_id : str\n    the video id\nclip_id : str\n    the clip id</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>clip_length : int\n    the length of the clip</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">video_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_clip_start_end", "kind": "function", "doc": "<p>Get the clip start and end frames from an element of original coordinates</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>coords : tuple\n    an element of original coordinates array</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>start : int\n    the start frame of the clip that the coordinates point to\nend : int\n    the end frame of the clip that the coordinates point to</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coords</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_clip_start", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_clip_start", "kind": "function", "doc": "<p>Get the clip start frame from the video id and the clip id</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_name : str\n    the video id\nclip_id : str\n    the clip id</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>clip_start : int\n    the start frame of the clip</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">video_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_visibility", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_visibility", "kind": "function", "doc": "<p>Get the fraction of the frames in that have a visibility score better than a hard_threshold</p>\n\n<p>For example, in the case of keypoint data the visibility score can be the number of identified keypoints.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_id : str\n    the video id of the frames\nclip_id : str\n    the clip id of the frames\nstart : int\n    the start frame\nend : int\n    the end frame\nscore : float\n    the visibility score hard_threshold</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>frac_visible: float\n    the fraction of frames with visibility above the hard_threshold</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">video_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">score</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_annotation_objects", "kind": "function", "doc": "<p>Get a dictionary of objects necessary to create an AnnotationStore</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>annotation_objects : dict\n    a dictionary of objects to be passed to the AnnotationStore constructor where the keys are the names of\n    the objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_file_ids", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_file_ids", "kind": "function", "doc": "<p>Process data parameters and return a list of ids  of the videos that should\nbe processed by the __init__ function</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_suffix : set | str, optional\n    the suffix (or a set of suffixes) of the input data files\ndata_path : set | str, optional\n    the path to the folder where the pose and feature files are stored or a set of such paths\n    (not passed if creating from key objects or from <code>file_paths</code>)\ndata_prefix : set | str, optional\n    the prefix or the set of prefixes such that the pose files for different video views of the same\n    clip are named {prefix}{sep}{video_id}{data_suffix} (not passed if creating from key objects\n    or if irrelevant for the dataset)\nfile_paths : set, optional\n    a set of string paths to the pose and feature files\nfeature_suffix : str | set, optional\n    the suffix or the set of suffices such that the additional feature files are named\n    {video_id}{feature_suffix} (and placed at the <code>data_path</code> folder or at <code>file_paths</code>)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_ids : list\n    a list of video file ids</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data_suffix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_prefix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">feature_suffix</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_bodyparts", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_bodyparts", "kind": "function", "doc": "<p>Get a list of bodypart names</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_dict : dict\n    the data dictionary (passed to feature extractor)\nclip_id : str\n    the clip id</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bodyparts : list\n    a list of string or integer body part names</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_coords", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_coords", "kind": "function", "doc": "<p>Get the coordinates array of a specific bodypart in a specific clip</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_dict : dict\n    the data dictionary (passed to feature extractor)\nclip_id : str\n    the clip id\nbodypart : str\n    the name of the body part</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>coords : np.ndarray\n    the coordinates array of shape (#timesteps, #coordinates)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>, </span><span class=\"param\"><span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">bodypart</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_n_frames", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_n_frames", "kind": "function", "doc": "<p>Get the length of the clip</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_dict : dict\n    the data dictionary (passed to feature extractor)\nclip_id : str\n    the clip id</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>n_frames : int\n    the length of the clip</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>, </span><span class=\"param\"><span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_likelihood", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_likelihood", "kind": "function", "doc": "<p>Get the likelihood values</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_dict : dict\n    the data dictionary\nclip_id : str\n    the clip id\nbodypart : str\n    the name of the body part</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>likelihoods: np.ndarrray | None\n    <code>None</code> if the dataset doesn't have likelihoods or an array of shape (#timestamps)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">bodypart</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_indices", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_indices", "kind": "function", "doc": "<p>Get a list of indices of samples that have a specific meta tag</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>tag : int\n    the meta tag for the subsample (<code>None</code> for the whole dataset)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>indices : list\n    a list of indices that meet the criteria</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tag</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_tags", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_tags", "kind": "function", "doc": "<p>Get a list of all meta tags</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>tags: List\n    a list of unique meta tag values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"fullname": "dlc2action.data.input_store.GeneralInputStore.get_tag", "modulename": "dlc2action.data.input_store", "qualname": "GeneralInputStore.get_tag", "kind": "function", "doc": "<p>Return a tag object corresponding to an index</p>\n\n<p>Tags can carry meta information (like annotator id) and are accepted by models that require\nthat information. When a tag is <code>None</code>, it is not passed to the model.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>idx : int\n    the index</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>tag : int\n    the tag object</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">idx</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.FileInputStore": {"fullname": "dlc2action.data.input_store.FileInputStore", "modulename": "dlc2action.data.input_store", "qualname": "FileInputStore", "kind": "class", "doc": "<p>An implementation of <code>dlc2action.data.InputStore</code> for datasets where each input data file corresponds to one video</p>\n", "bases": "GeneralInputStore"}, "dlc2action.data.input_store.SequenceInputStore": {"fullname": "dlc2action.data.input_store.SequenceInputStore", "modulename": "dlc2action.data.input_store", "qualname": "SequenceInputStore", "kind": "class", "doc": "<p>An implementation of <code>dlc2action.data.InputStore</code> for datasets where input data files correspond to multiple videos</p>\n", "bases": "GeneralInputStore"}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"fullname": "dlc2action.data.input_store.SequenceInputStore.get_file_ids", "modulename": "dlc2action.data.input_store", "qualname": "SequenceInputStore.get_file_ids", "kind": "function", "doc": "<p>Process data parameters and return a list of ids  of the videos that should\nbe processed by the __init__ function</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>filenames : set, optional\n    a set of string filenames to search for (only basenames, not the whole paths)\ndata_path : str | set, optional\n    the path to the folder where the pose and feature files are stored or a set of such paths\n    (not passed if creating from key objects or from <code>file_paths</code>)\nfile_paths : set, optional\n    a set of string paths to the pose and feature files\n    (not passed if creating from key objects or from <code>data_path</code>)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_ids : list\n    a list of video file ids</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">filenames</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.DLCTrackStore": {"fullname": "dlc2action.data.input_store.DLCTrackStore", "modulename": "dlc2action.data.input_store", "qualname": "DLCTrackStore", "kind": "class", "doc": "<p>DLC track data</p>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>data_path\n\u251c\u2500\u2500 video1DLC1000.pickle\n\u251c\u2500\u2500 video2DLC400.pickle\n\u251c\u2500\u2500 video1_features.pt\n\u2514\u2500\u2500 video2_features.pt\n</code></pre>\n\n<p>Here <code>data_suffix</code> is <code>{'DLC1000.pickle', 'DLC400.pickle'}</code> and <code>feature_suffix</code> (optional) is <code>'_features.pt'</code>.</p>\n\n<p>The feature files should to be dictionaries where keys are clip IDs (e.g. animal names) and values are\nfeature values (arrays of shape <code>(#frames, #features)</code>). If the arrays are shaped as <code>(#features, #frames)</code>,\nset <code>transpose_features</code> to <code>True</code>.</p>\n\n<p>The files can be saved with <code>numpy.save()</code> (with <code>.npy</code> extension), <code>torch.save()</code> (with <code>.pt</code> extension) or\nwith <code>pickle.dump()</code> (with <code>.pickle</code> or <code>.pkl</code> extension).</p>\n", "bases": "FileInputStore"}, "dlc2action.data.input_store.DLCTrackletStore": {"fullname": "dlc2action.data.input_store.DLCTrackletStore", "modulename": "dlc2action.data.input_store", "qualname": "DLCTrackletStore", "kind": "class", "doc": "<p>DLC tracklet data</p>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>data_path\n\u251c\u2500\u2500 video1DLC1000.pickle\n\u251c\u2500\u2500 video2DLC400.pickle\n\u251c\u2500\u2500 video1_features.pt\n\u2514\u2500\u2500 video2_features.pt\n</code></pre>\n\n<p>Here <code>data_suffix</code> is <code>{'DLC1000.pickle', 'DLC400.pickle'}</code> and <code>feature_suffix</code> (optional) is <code>'_features.pt'</code>.</p>\n\n<p>The feature files should to be dictionaries where keys are clip IDs (e.g. animal names) and values are\nfeature values (arrays of shape <code>(#frames, #features)</code>). If the arrays are shaped as <code>(#features, #frames)</code>,\nset <code>transpose_features</code> to <code>True</code>.</p>\n\n<p>The files can be saved with <code>numpy.save()</code> (with <code>.npy</code> extension), <code>torch.save()</code> (with <code>.pt</code> extension) or\nwith <code>pickle.dump()</code> (with <code>.pickle</code> or <code>.pkl</code> extension).</p>\n", "bases": "FileInputStore"}, "dlc2action.data.input_store.PKUMMDInputStore": {"fullname": "dlc2action.data.input_store.PKUMMDInputStore", "modulename": "dlc2action.data.input_store", "qualname": "PKUMMDInputStore", "kind": "class", "doc": "<p>PKU-MMD data</p>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>data_path\n\u251c\u2500\u2500 0073-R.txt\n...\n\u2514\u2500\u2500 0274-L.txt\n</code></pre>\n", "bases": "FileInputStore"}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"fullname": "dlc2action.data.input_store.PKUMMDInputStore.__init__", "modulename": "dlc2action.data.input_store", "qualname": "PKUMMDInputStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects)\ndata_path : str | set, optional\n    the path to the folder where the pose and feature files are stored or a set of such paths\n    (not passed if creating from key objects or from <code>file_paths</code>)\nfile_paths : set, optional\n    a set of string paths to the pose and feature files\n    (not passed if creating from key objects or from <code>data_path</code>)\nfeature_save_path : str, optional\n    the path to the folder where pre-processed files are stored (not passed if creating from key objects)\nfeature_extraction : str, default 'kinematic'\n    the feature extraction method (run options.feature_extractors to see available options)\nlen_segment : int, default 128\n    the length of the segments in which the data should be cut (in frames)\noverlap : int, default 0\n    the length of the overlap between neighboring segments (in frames)\ninteractive : bool, default False\n    if True, distances between two agents are included; if False, only the first agent features are computed\nkey_objects : tuple, optional\n    a tuple of key objects\nnum_cpus : int, optional\n    the number of cpus to use in data processing\nfeature_extraction_pars : dict, optional\n    parameters of the feature extractor</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">feature_save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">feature_extraction</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematic&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_cpus</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">interactive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">feature_extraction_pars</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"fullname": "dlc2action.data.input_store.PKUMMDInputStore.data_suffix", "modulename": "dlc2action.data.input_store", "qualname": "PKUMMDInputStore.data_suffix", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;.txt&#x27;"}, "dlc2action.data.input_store.PKUMMDInputStore.interactive": {"fullname": "dlc2action.data.input_store.PKUMMDInputStore.interactive", "modulename": "dlc2action.data.input_store", "qualname": "PKUMMDInputStore.interactive", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.CalMS21InputStore": {"fullname": "dlc2action.data.input_store.CalMS21InputStore", "modulename": "dlc2action.data.input_store", "qualname": "CalMS21InputStore", "kind": "class", "doc": "<p>CalMS21 data</p>\n\n<p>Use the <code>'random:test_from_name:{name}'</code> and <code>'val-from-name:{val_name}:test-from-name:{test_name}'</code>\npartitioning methods with <code>'train'</code>, <code>'test'</code> and <code>'unlabeled'</code> names to separate into train, test and validation\nsubsets according to the original files. For example, with <code>'val-from-name:test:test-from-name:unlabeled'</code>\nthe data from the test file will go into validation and the unlabeled files will be the test.</p>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>data_path\n\u251c\u2500\u2500 calms21_task1_train.npy\n\u251c\u2500\u2500 calms21_task1_test.npy\n\u251c\u2500\u2500 calms21_task1_test_features.npy\n\u251c\u2500\u2500 calms21_task1_test_features.npy\n\u251c\u2500\u2500 calms21_unlabeled_videos_part1.npy\n\u251c\u2500\u2500 calms21_unlabeled_videos_part1.npy\n\u251c\u2500\u2500 calms21_unlabeled_videos_part2.npy\n\u2514\u2500\u2500 calms21_unlabeled_videos_part3.npy\n</code></pre>\n", "bases": "SequenceInputStore"}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"fullname": "dlc2action.data.input_store.CalMS21InputStore.__init__", "modulename": "dlc2action.data.input_store", "qualname": "CalMS21InputStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects)\ndata_path : str | set, optional\n    the path to the folder where the pose and feature files are stored or a set of such paths\n    (not passed if creating from key objects or from <code>file_paths</code>)\nfile_paths : set, optional\n    a set of string paths to the pose and feature files\n    (not passed if creating from key objects or from <code>data_path</code>)\ntask_n : [1, 2]\n    the number of the task\ninclude_task1 : bool, default True\n    include task 1 data to training set\nfeature_save_path : str, optional\n    the path to the folder where pre-processed files are stored (not passed if creating from key objects)\nlen_segment : int, default 128\n    the length of the segments in which the data should be cut (in frames)\noverlap : int, default 0\n    the length of the overlap between neighboring segments (in frames)\nfeature_extraction : str, default 'kinematic'\n    the feature extraction method (see options.feature_extractors for available options)\nignored_bodyparts : list, optional\n    list of strings of bodypart names to ignore\nkey_objects : tuple, optional\n    a tuple of key objects\ntreba_files : bool, default False\n    if <code>True</code>, TREBA feature files will be loaded\nnum_cpus : int, optional\n    the number of cpus to use in data processing\nfeature_extraction_pars : dict, optional\n    parameters of the feature extractor</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">task_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">include_task1</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">feature_save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">feature_extraction</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematic&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">treba_files</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">num_cpus</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">feature_extraction_pars</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"fullname": "dlc2action.data.input_store.CalMS21InputStore.task_n", "modulename": "dlc2action.data.input_store", "qualname": "CalMS21InputStore.task_n", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"fullname": "dlc2action.data.input_store.CalMS21InputStore.include_task1", "modulename": "dlc2action.data.input_store", "qualname": "CalMS21InputStore.include_task1", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"fullname": "dlc2action.data.input_store.CalMS21InputStore.treba_files", "modulename": "dlc2action.data.input_store", "qualname": "CalMS21InputStore.treba_files", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"fullname": "dlc2action.data.input_store.CalMS21InputStore.get_file_ids", "modulename": "dlc2action.data.input_store", "qualname": "CalMS21InputStore.get_file_ids", "kind": "function", "doc": "<p>Process data parameters and return a list of ids  of the videos that should\nbe processed by the __init__ function</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>task_n : {1, 2, 3}\n    the index of the CalMS21 challenge task\ninclude_task1 : bool, default False\n    if <code>True</code>, the training file of the task 1 will be loaded\ntreba_files : bool, default False\n    if <code>True</code>, the TREBA feature files will be loaded\nfilenames : set, optional\n    a set of string filenames to search for (only basenames, not the whole paths)\ndata_path : str | set, optional\n    the path to the folder where the pose and feature files are stored or a set of such paths\n    (not passed if creating from key objects or from <code>file_paths</code>)\nfile_paths : set, optional\n    a set of string paths to the pose and feature files\n    (not passed if creating from key objects or from <code>data_path</code>)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_ids : list\n    a list of video file ids</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">task_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">include_task1</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">treba_files</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterable</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.Numpy3DInputStore": {"fullname": "dlc2action.data.input_store.Numpy3DInputStore", "modulename": "dlc2action.data.input_store", "qualname": "Numpy3DInputStore", "kind": "class", "doc": "<p>3D data</p>\n\n<p>Assumes the data files to be <code>numpy</code> arrays saved in <code>.npy</code> format with shape <code>(#frames, #keypoints, 3)</code>.</p>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>data_path\n\u251c\u2500\u2500 video1_suffix1.npy\n\u251c\u2500\u2500 video2_suffix2.npy\n\u251c\u2500\u2500 video1_features.pt\n\u2514\u2500\u2500 video2_features.pt\n</code></pre>\n\n<p>Here <code>data_suffix</code> is <code>{'_suffix1.npy', '_suffix1.npy'}</code> and <code>feature_suffix</code> (optional) is <code>'_features.pt'</code>.</p>\n\n<p>The feature files should to be dictionaries where keys are clip IDs (e.g. animal names) and values are\nfeature values (arrays of shape <code>(#frames, #features)</code>). If the arrays are shaped as <code>(#features, #frames)</code>,\nset <code>transpose_features</code> to <code>True</code>.</p>\n\n<p>The files can be saved with <code>numpy.save()</code> (with <code>.npy</code> extension), <code>torch.save()</code> (with <code>.pt</code> extension) or\nwith <code>pickle.dump()</code> (with <code>.pickle</code> or <code>.pkl</code> extension).</p>\n", "bases": "FileInputStore"}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"fullname": "dlc2action.data.input_store.Numpy3DInputStore.__init__", "modulename": "dlc2action.data.input_store", "qualname": "Numpy3DInputStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects\ndata_path : str | set, optional\n    the path to the folder where the pose and feature files are stored or a set of such paths\n    (not passed if creating from key objects or from <code>file_paths</code>)\nfile_paths : set, optional\n    a set of string paths to the pose and feature files\n    (not passed if creating from key objects or from <code>data_path</code>)\ndata_suffix : str | set, optional\n    the suffix or the set of suffices such that the pose files are named {video_id}{data_suffix}\n    (not passed if creating from key objects or if irrelevant for the dataset)\ndata_prefix : str | set, optional\n    the prefix or the set of prefixes such that the pose files for different video views of the same\n    clip are named {prefix}{sep}{video_id}{data_suffix} (not passed if creating from key objects\n    or if irrelevant for the dataset)\nfeature_suffix : str | set, optional\n    the suffix or the set of suffices such that the additional feature files are named\n    {video_id}{feature_suffix} (and placed at the data_path folder)\nconvert_int_indices : bool, default True\n    if <code>True</code>, convert any integer key <code>i</code> in feature files to <code>'ind{i}'</code>\nfeature_save_path : str, optional\n    the path to the folder where pre-processed files are stored (not passed if creating from key objects)\ncanvas_shape : List, default [1, 1]\n    the canvas size where the pose is defined\nlen_segment : int, default 128\n    the length of the segments in which the data should be cut (in frames)\noverlap : int, default 0\n    the length of the overlap between neighboring segments (in frames)\nfeature_extraction : str, default 'kinematic'\n    the feature extraction method (see options.feature_extractors for available options)\nignored_clips : list, optional\n    list of strings of clip ids to ignore\nignored_bodyparts : list, optional\n    list of strings of bodypart names to ignore\ndefault_agent_name : str, default 'ind0'\n    the agent name used as default in the pose files for a single agent\nkey_objects : tuple, optional\n    a tuple of key objects\nlikelihood_threshold : float, default 0\n    coordinate values with likelihoods less than this value will be set to 'unknown'\nnum_cpus : int, optional\n    the number of cpus to use in data processing\nframe_limit : int, default 1\n    clips shorter than this number of frames will be ignored\nfeature_extraction_pars : dict, optional\n    parameters of the feature extractor</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_suffix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_prefix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">feature_suffix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">convert_int_indices</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">feature_save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">canvas_shape</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">feature_extraction</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematic&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_clips</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_bodyparts</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">default_agent_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ind0&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">likelihood_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_cpus</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">frame_limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">feature_extraction_pars</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">centered</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"fullname": "dlc2action.data.input_store.LoadedFeaturesInputStore", "modulename": "dlc2action.data.input_store", "qualname": "LoadedFeaturesInputStore", "kind": "class", "doc": "<p>Non-pose feature files</p>\n\n<p>The feature files should to be dictionaries where keys are clip IDs (e.g. animal names) and values are\nfeature values (arrays of shape <code>(#frames, #features)</code>). If the arrays are shaped as <code>(#features, #frames)</code>,\nset <code>transpose_features</code> to <code>True</code>.</p>\n\n<p>The files can be saved with <code>numpy.save()</code> (with <code>.npy</code> extension), <code>torch.save()</code> (with <code>.pt</code> extension) or\nwith <code>pickle.dump()</code> (with <code>.pickle</code> or <code>.pkl</code> extension).</p>\n\n<p>Assumes the following file structure:</p>\n\n<pre><code>data_path\n\u251c\u2500\u2500 video1_features.pt\n\u2514\u2500\u2500 video2_features.pt\n</code></pre>\n\n<p>Here <code>feature_suffix</code> (optional) is <code>'_features.pt'</code>.</p>\n", "bases": "GeneralInputStore"}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"fullname": "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__", "modulename": "dlc2action.data.input_store", "qualname": "LoadedFeaturesInputStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects\ndata_path : str | set, optional\n    the path to the folder where the pose and feature files are stored or a set of such paths\n    (not passed if creating from key objects or from <code>file_paths</code>)\nfile_paths : set, optional\n    a set of string paths to the pose and feature files\n    (not passed if creating from key objects or from <code>data_path</code>)\nfeature_suffix : str | set, optional\n    the suffix or the set of suffices such that the additional feature files are named\n    {video_id}{feature_suffix} (and placed at the data_path folder)\nfeature_save_path : str, optional\n    the path to the folder where pre-processed files are stored (not passed if creating from key objects)\nlen_segment : int, default 128\n    the length of the segments in which the data should be cut (in frames)\noverlap : int, default 0\n    the length of the overlap between neighboring segments (in frames)\nignored_clips : list, optional\n    list of strings of clip ids to ignore\ndefault_agent_name : str, default 'ind0'\n    the agent name used as default in the pose files for a single agent\nkey_objects : tuple, optional\n    a tuple of key objects\nnum_cpus : int, optional\n    the number of cpus to use in data processing\nframe_limit : int, default 1\n    clips shorter than this number of frames will be ignored\nfeature_extraction_pars : dict, optional\n    parameters of the feature extractor</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">feature_suffix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">convert_int_indices</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">feature_save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_clips</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_cpus</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">frame_limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">transpose_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"fullname": "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility", "modulename": "dlc2action.data.input_store", "qualname": "LoadedFeaturesInputStore.get_visibility", "kind": "function", "doc": "<p>Get the fraction of the frames in that have a visibility score better than a hard_threshold</p>\n\n<p>For example, in the case of keypoint data the visibility score can be the number of identified keypoints.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_id : str\n    the video id of the frames\nclip_id : str\n    the clip id of the frames\nstart : int\n    the start frame\nend : int\n    the end frame\nscore : float\n    the visibility score hard_threshold</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>frac_visible: float\n    the fraction of frames with visibility above the hard_threshold</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">video_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">clip_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">score</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"fullname": "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids", "modulename": "dlc2action.data.input_store", "qualname": "LoadedFeaturesInputStore.get_file_ids", "kind": "function", "doc": "<p>Process data parameters and return a list of ids  of the videos that should\nbe processed by the __init__ function</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_suffix : set | str, optional\n    the suffix (or a set of suffixes) of the input data files\ndata_path : set | str, optional\n    the path to the folder where the pose and feature files are stored or a set of such paths\n    (not passed if creating from key objects or from <code>file_paths</code>)\ndata_prefix : set | str, optional\n    the prefix or the set of prefixes such that the pose files for different video views of the same\n    clip are named {prefix}{sep}{video_id}{data_suffix} (not passed if creating from key objects\n    or if irrelevant for the dataset)\nfile_paths : set, optional\n    a set of string paths to the pose and feature files\nfeature_suffix : str | set, optional\n    the suffix or the set of suffices such that the additional feature files are named\n    {video_id}{feature_suffix} (and placed at the <code>data_path</code> folder or at <code>file_paths</code>)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>video_ids : list\n    a list of video file ids</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">feature_suffix</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.data.input_store.SIMBAInputStore": {"fullname": "dlc2action.data.input_store.SIMBAInputStore", "modulename": "dlc2action.data.input_store", "qualname": "SIMBAInputStore", "kind": "class", "doc": "<p>SIMBA paper format data</p>\n\n<p>Assumes the following file structure\n <pre><code>data_path\n\u251c\u2500\u2500 Video1.csv\n...\n\u2514\u2500\u2500 Video9.csv\n</code></pre>\n Here <code>data_suffix</code> is <code>.csv</code>.</p>\n", "bases": "FileInputStore"}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"fullname": "dlc2action.data.input_store.SIMBAInputStore.__init__", "modulename": "dlc2action.data.input_store", "qualname": "SIMBAInputStore.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>video_order : list, optional\n    a list of video ids that should be processed in the same order (not passed if creating from key objects\ndata_path : str | set, optional\n    the path to the folder where the pose and feature files are stored or a set of such paths\n    (not passed if creating from key objects or from <code>file_paths</code>)\nfile_paths : set, optional\n    a set of string paths to the pose and feature files\n    (not passed if creating from key objects or from <code>data_path</code>)\ndata_suffix : str | set, optional\n    the suffix or the set of suffices such that the pose files are named {video_id}{data_suffix}\n    (not passed if creating from key objects or if irrelevant for the dataset)\ndata_prefix : str | set, optional\n    the prefix or the set of prefixes such that the pose files for different video views of the same\n    clip are named {prefix}{sep}{video_id}{data_suffix} (not passed if creating from key objects\n    or if irrelevant for the dataset)\nfeature_suffix : str | set, optional\n    the suffix or the set of suffices such that the additional feature files are named\n    {video_id}{feature_suffix} (and placed at the data_path folder)\nfeature_save_path : str, optional\n    the path to the folder where pre-processed files are stored (not passed if creating from key objects)\ncanvas_shape : List, default [1, 1]\n    the canvas size where the pose is defined\nlen_segment : int, default 128\n    the length of the segments in which the data should be cut (in frames)\noverlap : int, default 0\n    the length of the overlap between neighboring segments (in frames)\nfeature_extraction : str, default 'kinematic'\n    the feature extraction method (see options.feature_extractors for available options)\nignored_clips : list, optional\n    list of strings of clip ids to ignore\nignored_bodyparts : list, optional\n    list of strings of bodypart names to ignore\nkey_objects : tuple, optional\n    a tuple of key objects\nlikelihood_threshold : float, default 0\n    coordinate values with likelihoods less than this value will be set to 'unknown'\nnum_cpus : int, optional\n    the number of cpus to use in data processing\nfeature_extraction_pars : dict, optional\n    parameters of the feature extractor</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">video_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_prefix</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">feature_suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">feature_save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">canvas_shape</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">feature_extraction</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematic&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_clips</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_bodyparts</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">key_objects</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">likelihood_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_cpus</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">normalize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">feature_extraction_pars</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">centered</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">data_suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"fullname": "dlc2action.data.input_store.SIMBAInputStore.use_features", "modulename": "dlc2action.data.input_store", "qualname": "SIMBAInputStore.use_features", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction": {"fullname": "dlc2action.feature_extraction", "modulename": "dlc2action.feature_extraction", "kind": "module", "doc": "<h2 id=\"feature-extraction\">Feature extraction</h2>\n\n<p>Feature extractors generate feature dictionaries that are then passed to SSL transformations\n(see <code>dlc2action.ssl</code>) and finally to\ntransformers that perform augmentations and merge all features into a tensor (see <code>dlc2action.transformer</code>).\nThe keys of the dictionaries are the feature names (<code>'coords'</code>, <code>'speeds'</code> and so on) and the values are the\nfeature tensors. It is generally assumed that the tensors have shape <code>(F, ..., L)</code> where <code>F</code> is the variable\nnumber of features (per frame, keypoint, pixel...) and <code>L</code> is the length of the segment in frames. The <code>F</code>\nvalue can be different for every tensor in the dictionary and the rest of the shape should be constant.</p>\n"}, "dlc2action.feature_extraction.FeatureExtractor": {"fullname": "dlc2action.feature_extraction.FeatureExtractor", "modulename": "dlc2action.feature_extraction", "qualname": "FeatureExtractor", "kind": "class", "doc": "<p>The base class for feature extractors</p>\n\n<p>The <code>extract_features</code> method receives a data dictionary as input.\nWe do not assume a specific\nstructure in the values and all necessary information (coordinates of a bodypart, number\nof frames, list of bodyparts) is inferred using input store methods. Therefore, each child class\nof <code>FeatureExtractor</code> is written for a specific subclass of <code>dlc2action.data.base_Store.InputStore</code>\nwith the data inference\nfunctions defined (i.e. <code>dlc2action.data.base_store.PoseInputStore</code>).</p>\n", "bases": "abc.ABC"}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"fullname": "dlc2action.feature_extraction.FeatureExtractor.__init__", "modulename": "dlc2action.feature_extraction", "qualname": "FeatureExtractor.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ignored_clips : list\n    a list of string names of clip ids to ignore</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ignored_clips</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"fullname": "dlc2action.feature_extraction.FeatureExtractor.input_store_class", "modulename": "dlc2action.feature_extraction", "qualname": "FeatureExtractor.input_store_class", "kind": "variable", "doc": "<p>The <code>dlc2action.data.base_Store.InputStore</code> child class paired with this feature extractor</p>\n", "default_value": "None"}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"fullname": "dlc2action.feature_extraction.FeatureExtractor.extract_features", "modulename": "dlc2action.feature_extraction", "qualname": "FeatureExtractor.extract_features", "kind": "function", "doc": "<p>Extract features from a data dictionary</p>\n\n<p>An input store will call this method while pre-computing a dataset. The data dictionary has to relate to one\nvideo id and have clip ids as keys. Read the documentation at <code>dlc2action.data</code> to find out more about video\nand clip ids. We do not assume a specific\nstructure in the values, so all necessary information (coordinates of a bodypart, number\nof frames, list of bodyparts) is inferred using input store methods.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_dict : dict\n    the data dictionary\nvideo_id : str\n    the id of the video associated with the data dictionary\none_clip : bool, default False\n    if <code>True</code>, all features will be concatenated and assigned to one clip named <code>'all'</code></p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>features : dict\n    a features dictionary where the keys are the feature names (e.g. 'coords', 'distances') and the\n    values are numpy arrays of shape <code>(#features, ..., #frames)</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>, </span><span class=\"param\"><span class=\"n\">video_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">one_clip</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"fullname": "dlc2action.feature_extraction.PoseFeatureExtractor", "modulename": "dlc2action.feature_extraction", "qualname": "PoseFeatureExtractor", "kind": "class", "doc": "<p>The base class for pose feature extractors</p>\n\n<p>Pose feature extractors work with <code>dlc2action.data.base_store.InputStore</code> instances\nthat inherit from <code>dlc2action.data.base_store.PoseInputStore</code>.</p>\n", "bases": "FeatureExtractor"}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"fullname": "dlc2action.feature_extraction.PoseFeatureExtractor.__init__", "modulename": "dlc2action.feature_extraction", "qualname": "PoseFeatureExtractor.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>input_store : PoseInputStore\n    the input store object</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_store</span><span class=\"p\">:</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">base_store</span><span class=\"o\">.</span><span class=\"n\">PoseInputStore</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"fullname": "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class", "modulename": "dlc2action.feature_extraction", "qualname": "PoseFeatureExtractor.input_store_class", "kind": "variable", "doc": "<p>The <code>dlc2action.data.base_Store.InputStore</code> child class paired with this feature extractor</p>\n", "default_value": "&lt;class &#x27;dlc2action.data.base_store.PoseInputStore&#x27;&gt;"}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts": {"fullname": "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts", "modulename": "dlc2action.feature_extraction", "qualname": "PoseFeatureExtractor.get_bodyparts", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords": {"fullname": "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords", "modulename": "dlc2action.feature_extraction", "qualname": "PoseFeatureExtractor.get_coords", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"fullname": "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames", "modulename": "dlc2action.feature_extraction", "qualname": "PoseFeatureExtractor.get_n_frames", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood": {"fullname": "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood", "modulename": "dlc2action.feature_extraction", "qualname": "PoseFeatureExtractor.get_likelihood", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.KinematicExtractor": {"fullname": "dlc2action.feature_extraction.KinematicExtractor", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor", "kind": "class", "doc": "<p>A feature extractor for basic kinematic features: speeds, accelerations, distances.</p>\n\n<p>The available keys are:\n    - coords: the allocentric bodypart coordinates,\n    - coord_diff: the egocentric bodypart coordinates,\n    - center: the body center (mean of bodyparts) coordinates,\n    - intra_distance: distances between bodyparts (pairs set in <code>distance_pairs</code> or all combinations by default),\n    - inter_distance: computed in interactive mode (for pairs of animals); distances from each bodypart of each animal to the centroid between them,\n    - speed_direction: unit vector of speed approximation for each bodypart,\n    - speed_value: l2 norm of the speed approximation vector for each bodypart,\n    - acc_joints: l2 norm of the acceleration approximation vector for each bodypart,\n    - angle_speeds: vector of angle speed approximation for each bodypart,\n    - angles: cosines of angles set in <code>angle_pairs</code>,\n    - areas: areas of polygons set in <code>area_vertices</code>,\n    - zone_bools: binary identifier of zone visitation, defined in <code>zone_bools</code>,\n    - zone_distances: distance to zone boundary, defined in <code>zone_distances'</code>,\n    - likelihood: pose estimation likelihood (if known).</p>\n\n<p>The default set is <code>{coord_diff, center, intra_distance, inter_distance, speed_direction, speed_value, acc_joints, angle_speeds}</code></p>\n", "bases": "PoseFeatureExtractor"}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.__init__", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>input_store : PoseInputStore\n    the input store object\nkeys : list, optional\n    a list of names of the features to extract\nignored_clips : list, optional\n    a list of clip ids to ignore\ninteractive : bool, default False\n    if <code>True</code>, features for pairs of clips will be computed\naveraging_window : int, default 1\n    if &gt;1, features are averaged with a moving window of this size (in frames)\ndistance_pairs : list, optional\n    a list of bodypart name tuples (e.g. <code>[(\"tail\", \"nose\")]</code>) to compute distances for when <code>\"intra_distance\"</code>\n    is in <code>keys</code> (by default all distances are computed)\nangle_pairs : list, optional\n    a list of bodypart name tuples (e.g. <code>[(\"ear1\", \"nose\", \"ear2\")]</code>) for the angle between <code>\"ear1\"--\"nose\"</code> and\n    <code>\"nose\"--\"ear2\"</code> lines) to compute angle cosines for when <code>\"angles\"</code> is in <code>keys</code> (by default no angles are computed)\nneighboring_frames : int, default 0\n    if &gt;0, this number of neighboring frames is aggregated in the center frame features (generally not recommended)\narea_vertices : list, optional\n    a list of bodypart name tuples of any length &gt;= 3 (e.g. <code>[(\"ear1\", \"nose\", \"ear2\", \"spine1\")]</code>) that define polygons\n    to compute areas for when <code>\"areas\"</code> is in <code>keys</code> (by default no areas are computed)\nzone_vertices : dict, optional\n    a dictionary of bodypart name tuples of any length &gt;= 3 that define zones for <code>\"zone_bools\"</code>and <code>\"zone_distances\"</code>\n    featyres; keys should be zone names and values should be tuples that define the polygons (e.g.\n    <code>{\"main_area\": (\"x_min\", \"x_max\", \"y_max\", \"y_min\"))}</code>)\nzone_bools : list, optional\n    a list of zone and bodypart name tuples to compute binary identifiers for (1 if an animal is within the polygon or\n    0 if it's outside) (e.g. <code>[(\"main_area\", \"nose\")]</code>); the zones should be defined in the <code>zone_vertices</code> parameter;\n    this is only computed if <code>\"zone_bools\"</code> is in <code>keys</code>\nzone_distances : list, optional\n    a list of zone and bodypart name tuples to compute distances for (distance from the bodypart to the closest of the\n    boundaries) (e.g. <code>[(\"main_area\", \"nose\")]</code>); the zones should be defined in the <code>zone_vertices</code> parameter;\n    this is only computed if <code>\"zone_distances\"</code> is in <code>keys</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_store</span><span class=\"p\">:</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">base_store</span><span class=\"o\">.</span><span class=\"n\">PoseInputStore</span>,</span><span class=\"param\">\t<span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_clips</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">interactive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">averaging_window</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">distance_pairs</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">angle_pairs</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">neighboring_frames</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">area_vertices</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">zone_vertices</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">zone_bools</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">zone_distances</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.feature_extraction.KinematicExtractor.keys": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.keys", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.keys", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.KinematicExtractor.ignored_clips": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.ignored_clips", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.ignored_clips", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.KinematicExtractor.interactive": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.interactive", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.interactive", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.KinematicExtractor.w": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.w", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.w", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.KinematicExtractor.distance_pairs": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.distance_pairs", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.distance_pairs", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.KinematicExtractor.angle_pairs": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.angle_pairs", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.angle_pairs", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.KinematicExtractor.area_vertices": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.area_vertices", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.area_vertices", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.KinematicExtractor.neighboring_frames": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.neighboring_frames", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.neighboring_frames", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.KinematicExtractor.zone_vertices": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.zone_vertices", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.zone_vertices", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.KinematicExtractor.zone_bools": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.zone_bools", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.zone_bools", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.KinematicExtractor.zone_distances": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.zone_distances", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.zone_distances", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"fullname": "dlc2action.feature_extraction.KinematicExtractor.extract_features", "modulename": "dlc2action.feature_extraction", "qualname": "KinematicExtractor.extract_features", "kind": "function", "doc": "<p>Extract features from a data dictionary</p>\n\n<p>An input store will call this method while pre-computing a dataset. We do not assume a specific\nstructure in the data dictionary, so all necessary information (coordinates of a bodypart, number\nof frames, list of bodyparts) is inferred using input store methods.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data_dict : dict\n    the data dictionary\nvideo_id : str\n    the id of the video associated with the data dictionary\nprefix : str, optional\n    a prefix for the feature names\none_clip : bool, default False\n    if <code>True</code>, all features will be concatenated and assigned to one clip named <code>'all'</code></p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>features : dict\n    a features dictionary where the keys are the feature names (e.g. 'coords', 'distances') and the\n    values are numpy arrays of shape <code>(#features, #frames)</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">video_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">one_clip</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.loss": {"fullname": "dlc2action.loss", "modulename": "dlc2action.loss", "kind": "module", "doc": "<h2 id=\"losses\">Losses</h2>\n\n<p>There is no dedicated loss class in <code>dlc2action</code>. Instead we use regular <code>torch.nn.Module</code> instances that take\nprediction\nand target as input and return loss value as output.</p>\n"}, "dlc2action.loss.contrastive": {"fullname": "dlc2action.loss.contrastive", "modulename": "dlc2action.loss.contrastive", "kind": "module", "doc": "<p>Losses used by contrastive SSL constructors (see <code>dlc2action.ssl.contrastive</code>)</p>\n"}, "dlc2action.loss.contrastive_frame": {"fullname": "dlc2action.loss.contrastive_frame", "modulename": "dlc2action.loss.contrastive_frame", "kind": "module", "doc": "<p></p>\n"}, "dlc2action.loss.ms_tcn": {"fullname": "dlc2action.loss.ms_tcn", "modulename": "dlc2action.loss.ms_tcn", "kind": "module", "doc": "<p>Loss for the MS-TCN models</p>\n\n<p>Adapted from <a href=\"https://github.com/sj-li/MS-TCN2\">https://github.com/sj-li/MS-TCN2</a></p>\n"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss", "kind": "class", "doc": "<p>The MS-TCN loss\nCrossentropy + consistency loss (MSE over predicted probabilities)</p>\n", "bases": "torch.nn.modules.module.Module"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_classes : int\n    number of classes\nweights : iterable, optional\n    class-wise cross-entropy weights\nexclusive : bool, default True\n    True if single-label classification is used\nignore_index : int, default -100\n    the elements where target is equal to ignore_index will be ignored by cross-entropy\nfocal : bool, default False\n    if True, instead of regular cross-entropy the focal loss will be used\ngamma : float, default 1\n    the gamma parameter of the focal loss\nalpha : float, default 0.15\n    the weight of the consistency loss\nhard_negative_weight : float, default 1\n    the weight assigned to the hard negative frames</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">weights</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Iterable</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">focal</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.15</span>,</span><span class=\"param\">\t<span class=\"n\">hard_negative_weight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span>)</span>"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss.weights", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss.num_classes", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss.ignore_index", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss.gamma", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.focal": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss.focal", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss.focal", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss.alpha", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss.exclusive", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss.neg_weight", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.mse": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss.mse", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss.mse", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss.consistency_loss", "kind": "function", "doc": "<p>Apply consistency loss</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"fullname": "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward", "modulename": "dlc2action.loss.ms_tcn", "qualname": "MS_TCN_Loss.forward", "kind": "function", "doc": "<p>Compute the loss</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>predictions : torch.Tensor\n    a tensor of shape (#batch, #classes, #frames)\ntarget : torch.Tensor\n    a tensor of shape (#batch, #classes, #frames) or (#batch, #frames)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>loss : float\n    the loss value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predictions</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.loss.mse": {"fullname": "dlc2action.loss.mse", "modulename": "dlc2action.loss.mse", "kind": "module", "doc": "<p>The mean squared error loss</p>\n"}, "dlc2action.loss.tcc": {"fullname": "dlc2action.loss.tcc", "modulename": "dlc2action.loss.tcc", "kind": "module", "doc": "<p>TCC loss</p>\n\n<p>Adapted from from <a href=\"https://github.com/June01/tcc_Temporal_Cycle_Consistency_Loss.pytorch\">https://github.com/June01/tcc_Temporal_Cycle_Consistency_Loss.pytorch</a></p>\n"}, "dlc2action.loss.tcc.gen_cycles": {"fullname": "dlc2action.loss.tcc.gen_cycles", "modulename": "dlc2action.loss.tcc", "qualname": "gen_cycles", "kind": "function", "doc": "<p>Generates cycles for alignment.\nGenerates a batch of indices to cycle over. For example setting num_cycles=2,\nbatch_size=5, cycle_length=3 might return something like this:\ncycles = [[0, 3, 4, 0], [1, 2, 0, 3]]. This means we have 2 cycles for which\nthe loss will be calculated. The first cycle starts at sequence 0 of the\nbatch, then we find a matching step in sequence 3 of that batch, then we\nfind matching step in sequence 4 and finally come back to sequence 0,\ncompleting a cycle.\nArgs:\nnum_cycles: Integer, Number of cycles that will be matched in one pass.\nbatch_size: Integer, Number of sequences in one batch.\ncycle_length: Integer, Length of the cycles. If we are matching between\n  2 sequences (cycle_length=2), we get cycles that look like [0,1,0].\n  This means that we go from sequence 0 to sequence 1 then back to sequence</p>\n\n<ol start=\"0\">\n<li>A cycle length of 3 might look like [0, 1, 2, 0].\nReturns:\ncycles: Tensor, Batch indices denoting cycles that will be used for\ncalculating the alignment loss.</li>\n</ol>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num_cycles</span>, </span><span class=\"param\"><span class=\"n\">batch_size</span>, </span><span class=\"param\"><span class=\"n\">cycle_length</span><span class=\"o\">=</span><span class=\"mi\">2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"fullname": "dlc2action.loss.tcc.compute_stochastic_alignment_loss", "modulename": "dlc2action.loss.tcc", "qualname": "compute_stochastic_alignment_loss", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">embs</span>,</span><span class=\"param\">\t<span class=\"n\">steps</span>,</span><span class=\"param\">\t<span class=\"n\">seq_lens</span>,</span><span class=\"param\">\t<span class=\"n\">num_steps</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span>,</span><span class=\"param\">\t<span class=\"n\">loss_type</span>,</span><span class=\"param\">\t<span class=\"n\">similarity_type</span>,</span><span class=\"param\">\t<span class=\"n\">num_cycles</span>,</span><span class=\"param\">\t<span class=\"n\">cycle_length</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span>,</span><span class=\"param\">\t<span class=\"n\">label_smoothing</span>,</span><span class=\"param\">\t<span class=\"n\">variance_lambda</span>,</span><span class=\"param\">\t<span class=\"n\">huber_delta</span>,</span><span class=\"param\">\t<span class=\"n\">normalize_indices</span>,</span><span class=\"param\">\t<span class=\"n\">real_lens</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.loss.tcc.compute_alignment_loss": {"fullname": "dlc2action.loss.tcc.compute_alignment_loss", "modulename": "dlc2action.loss.tcc", "qualname": "compute_alignment_loss", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">embs</span>,</span><span class=\"param\">\t<span class=\"n\">real_lens</span>,</span><span class=\"param\">\t<span class=\"n\">steps</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">seq_lens</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">normalize_embeddings</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">loss_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;classification&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">similarity_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;l2&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">num_cycles</span><span class=\"o\">=</span><span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">cycle_length</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">label_smoothing</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">variance_lambda</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">huber_delta</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">normalize_indices</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.loss.tcc.regression_loss": {"fullname": "dlc2action.loss.tcc.regression_loss", "modulename": "dlc2action.loss.tcc", "qualname": "regression_loss", "kind": "function", "doc": "<p>Loss function based on regressing to the correct indices.\nIn the paper, this is called Cycle-back Regression. There are 3 variants\nof this loss:\ni) regression_mse: MSE of the predicted indices and ground truth indices.\nii) regression_mse_var: MSE of the predicted indices that takes into account\nthe variance of the similarities. This is important when the rate at which\nsequences go through different phases changes a lot. The variance scaling\nallows dynamic weighting of the MSE loss based on the similarities.\niii) regression_huber: Huber loss between the predicted indices and ground\ntruth indices.\nArgs:\n  logits: Tensor, Pre-softmax similarity scores after cycling back to the\n    starting sequence.\n  labels: Tensor, One hot labels containing the ground truth. The index where\n    the cycle started is 1.\n  num_steps: Integer, Number of steps in the sequence embeddings.\n  steps: Tensor, step indices/frame indices of the embeddings of the shape\n    [N, T] where N is the batch size, T is the number of the timesteps.\n  seq_lens: Tensor, Lengths of the sequences from which the sampling was done.\n    This can provide additional temporal information to the alignment loss.\n  loss_type: String, This specifies the kind of regression loss function.\n    Currently supported loss functions: regression_mse, regression_mse_var,\n    regression_huber.\n  normalize_indices: Boolean, If True, normalizes indices by sequence lengths.\n    Useful for ensuring numerical instabilities don't arise as sequence\n    indices can be large numbers.\n  variance_lambda: Float, Weight of the variance of the similarity\n    predictions while cycling back. If this is high then the low variance\n    similarities are preferred by the loss while making this term low results\n    in high variance of the similarities (more uniform/random matching).\nReturns:\n   loss: Tensor, A scalar loss calculated using a variant of regression.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">logits</span>,</span><span class=\"param\">\t<span class=\"n\">labels</span>,</span><span class=\"param\">\t<span class=\"n\">num_steps</span>,</span><span class=\"param\">\t<span class=\"n\">steps</span>,</span><span class=\"param\">\t<span class=\"n\">seq_lens</span>,</span><span class=\"param\">\t<span class=\"n\">loss_type</span>,</span><span class=\"param\">\t<span class=\"n\">normalize_indices</span>,</span><span class=\"param\">\t<span class=\"n\">variance_lambda</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.metric": {"fullname": "dlc2action.metric", "modulename": "dlc2action.metric", "kind": "module", "doc": "<h2 id=\"metrics\">Metrics</h2>\n\n<p>Metrics that can be updated with batch data and computed at the end of an epoch.</p>\n"}, "dlc2action.metric.base_metric": {"fullname": "dlc2action.metric.base_metric", "modulename": "dlc2action.metric.base_metric", "kind": "module", "doc": "<p>Abstract parent class for all metrics</p>\n"}, "dlc2action.metric.base_metric.Metric": {"fullname": "dlc2action.metric.base_metric.Metric", "modulename": "dlc2action.metric.base_metric", "qualname": "Metric", "kind": "class", "doc": "<p>Base class for all metric</p>\n\n<p>Metrics are reset at the beginning of each epoch, updated with batch data and then calculated at the end of the epoch.\nIf needs_raw_data is True for a metric class, it should expect to receive raw model output as the predicted vector;\notherwise it should be the final class prediction</p>\n", "bases": "abc.ABC"}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"fullname": "dlc2action.metric.base_metric.Metric.needs_raw_data", "modulename": "dlc2action.metric.base_metric", "qualname": "Metric.needs_raw_data", "kind": "variable", "doc": "<p>If <code>True</code>, <code>dlc2action.task.universal_task.Task</code> will pass raw data to the metric (only primary predict \nfunction applied).\nOtherwise it will pass a prediction for the classes.</p>\n", "default_value": "False"}, "dlc2action.metric.base_metric.Metric.update": {"fullname": "dlc2action.metric.base_metric.Metric.update", "modulename": "dlc2action.metric.base_metric", "qualname": "Metric.update", "kind": "function", "doc": "<p>Update the intrinsic parameters (with a batch)</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>predicted : torch.Tensor\n    the main prediction tensor generated by the model\nssl_predicted : torch.Tensor\n    the SSL prediction tensor generated by the model\ntarget : torch.Tensor\n    the corresponding main target tensor\nssl_target : torch.Tensor\n    the corresponding SSL target tensor\ntags : torch.Tensor\n    the tensor of meta tags (or <code>None</code>, if tags are not given)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.base_metric.Metric.reset": {"fullname": "dlc2action.metric.base_metric.Metric.reset", "modulename": "dlc2action.metric.base_metric", "qualname": "Metric.reset", "kind": "function", "doc": "<p>Reset the intrinsic parameters (at the beginning of an epoch)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.base_metric.Metric.calculate": {"fullname": "dlc2action.metric.base_metric.Metric.calculate", "modulename": "dlc2action.metric.base_metric", "qualname": "Metric.calculate", "kind": "function", "doc": "<p>Calculate the metric (at the end of an epoch)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>result : float | dict\n    either the single value of the metric or a dictionary where the keys are class indices and the values\n    are class metric values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics": {"fullname": "dlc2action.metric.metrics", "modulename": "dlc2action.metric.metrics", "kind": "module", "doc": "<p>Implementations of <code>dlc2action.metric.base_metric.Metric</code></p>\n"}, "dlc2action.metric.metrics.PR_AUC": {"fullname": "dlc2action.metric.metrics.PR_AUC", "modulename": "dlc2action.metric.metrics", "qualname": "PR_AUC", "kind": "class", "doc": "<p>Area under precision-recall curve (not advised for training)</p>\n", "bases": "_ClassificationMetric"}, "dlc2action.metric.metrics.PR_AUC.__init__": {"fullname": "dlc2action.metric.metrics.PR_AUC.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "PR_AUC.__init__", "kind": "function", "doc": "<p>Initialize the metric</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>ignore_index : int, default -100\n    the class index that indicates ignored samples\naverage: {'macro', 'micro', 'none'}\n    method for averaging across classes\nnum_classes : int, optional\n    number of classes (not necessary if main_class is not None)\nignored_classes : set, optional\n    a set of class ids to ignore in calculation\nexclusive: bool, default True\n    set to False for multi-label classification tasks\ntag_average: {'micro', 'macro', 'none'}\n    method for averaging across meta tags (if given)\nthreshold_step : float, default 0.1\n    the decision threshold step</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_step</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span></span>)</span>"}, "dlc2action.metric.metrics.Precision": {"fullname": "dlc2action.metric.metrics.Precision", "modulename": "dlc2action.metric.metrics", "qualname": "Precision", "kind": "class", "doc": "<p>Precision</p>\n", "bases": "_ClassificationMetric"}, "dlc2action.metric.metrics.Precision.__init__": {"fullname": "dlc2action.metric.metrics.Precision.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "Precision.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ignore_index : int, default -100\n    the class index that indicates ignored samples\naverage: {'macro', 'micro', 'none'}\n    method for averaging across classes\nnum_classes : int, optional\n    number of classes (not necessary if main_class is not None)\nignored_classes : set, optional\n    a set of class ids to ignore in calculation\nexclusive: bool, default True\n    set to False for multi-label classification tasks\ntag_average: {'micro', 'macro', 'none'}\n    method for averaging across meta tags (if given)\nthreshold_value : float | list, optional\n    the decision threshold value (cannot be defined for exclusive classification, and 0.5 be default\n    for non-exclusive); if <code>threshold_value</code> is a list, every value should correspond to the class\n    under the same index</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.metric.metrics.SegmentalPrecision": {"fullname": "dlc2action.metric.metrics.SegmentalPrecision", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalPrecision", "kind": "class", "doc": "<p>Segmental precision (not advised for training)</p>\n", "bases": "_ClassificationMetric"}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"fullname": "dlc2action.metric.metrics.SegmentalPrecision.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalPrecision.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ignore_index : int, default -100\n    the class index that indicates ignored samples\naverage: {'macro', 'micro', 'none'}\n    method for averaging across classes\nnum_classes : int, optional\n    number of classes (not necessary if main_class is not None)\nignored_classes : set, optional\n    a set of class ids to ignore in calculation\nexclusive: bool, default True\n    set to False for multi-label classification tasks\niou_threshold : float, default 0.5\n    if segmental is true, intervals with IoU larger than this threshold are considered correct\ntag_average: {'micro', 'macro', 'none'}\n    method for averaging across meta tags (if given)\nthreshold_value : float | list, optional\n    the decision threshold value (cannot be defined for exclusive classification, and 0.5 be default\n    for non-exclusive); if <code>threshold_value</code> is a list, every value should correspond to the class\n    under the same index</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"fullname": "dlc2action.metric.metrics.SegmentalPrecision.segmental", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalPrecision.segmental", "kind": "variable", "doc": "<p>If <code>True</code>, the metric will be calculated over segments; otherwise over frames.</p>\n", "default_value": "True"}, "dlc2action.metric.metrics.Recall": {"fullname": "dlc2action.metric.metrics.Recall", "modulename": "dlc2action.metric.metrics", "qualname": "Recall", "kind": "class", "doc": "<p>Recall</p>\n", "bases": "_ClassificationMetric"}, "dlc2action.metric.metrics.Recall.__init__": {"fullname": "dlc2action.metric.metrics.Recall.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "Recall.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ignore_index : int, default -100\n    the class index that indicates ignored samples\naverage: {'macro', 'micro', 'none'}\n    method for averaging across classes\nnum_classes : int, optional\n    number of classes (not necessary if main_class is not None)\nignored_classes : set, optional\n    a set of class ids to ignore in calculation\nexclusive: bool, default True\n    set to False for multi-label classification tasks\ntag_average: {'micro', 'macro', 'none'}\n    method for averaging across meta tags (if given)\nthreshold_value : float | list, optional\n    the decision threshold value (cannot be defined for exclusive classification, and 0.5 be default\n    for non-exclusive); if <code>threshold_value</code> is a list, every value should correspond to the class\n    under the same index</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.metric.metrics.SegmentalRecall": {"fullname": "dlc2action.metric.metrics.SegmentalRecall", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalRecall", "kind": "class", "doc": "<p>Segmental recall (not advised for training)</p>\n", "bases": "_ClassificationMetric"}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"fullname": "dlc2action.metric.metrics.SegmentalRecall.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalRecall.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ignore_index : int, default -100\n    the class index that indicates ignored samples\naverage: {'macro', 'micro', 'none'}\n    method for averaging across classes\nnum_classes : int, optional\n    number of classes (not necessary if main_class is not None)\nignored_classes : set, optional\n    a set of class ids to ignore in calculation\nexclusive: bool, default True\n    set to False for multi-label classification tasks\niou_threshold : float, default 0.5\n    if segmental is true, intervals with IoU larger than this threshold are considered correct\ntag_average: {'micro', 'macro', 'none'}\n    method for averaging across meta tags (if given)\nthreshold_value : float | list, optional\n    the decision threshold value (cannot be defined for exclusive classification, and 0.5 be default\n    for non-exclusive); if <code>threshold_value</code> is a list, every value should correspond to the class\n    under the same index</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"fullname": "dlc2action.metric.metrics.SegmentalRecall.segmental", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalRecall.segmental", "kind": "variable", "doc": "<p>If <code>True</code>, the metric will be calculated over segments; otherwise over frames.</p>\n", "default_value": "True"}, "dlc2action.metric.metrics.F1": {"fullname": "dlc2action.metric.metrics.F1", "modulename": "dlc2action.metric.metrics", "qualname": "F1", "kind": "class", "doc": "<p>F1 score</p>\n", "bases": "_ClassificationMetric"}, "dlc2action.metric.metrics.F1.__init__": {"fullname": "dlc2action.metric.metrics.F1.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "F1.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ignore_index : int, default -100\n    the class index that indicates ignored samples\naverage: {'macro', 'micro', 'none'}\n    method for averaging across classes\nnum_classes : int, optional\n    number of classes (not necessary if main_class is not None)\nignored_classes : set, optional\n    a set of class ids to ignore in calculation\nexclusive: bool, default True\n    set to False for multi-label classification tasks\ntag_average: {'micro', 'macro', 'none'}\n    method for averaging across meta tags (if given)\nthreshold_value : float | list, optional\n    the decision threshold value (cannot be defined for exclusive classification, and 0.5 be default\n    for non-exclusive); if <code>threshold_value</code> is a list, every value should correspond to the class\n    under the same index</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">integration_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, "dlc2action.metric.metrics.SegmentalF1": {"fullname": "dlc2action.metric.metrics.SegmentalF1", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalF1", "kind": "class", "doc": "<p>Segmental F1 score (not advised for training)</p>\n", "bases": "_ClassificationMetric"}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"fullname": "dlc2action.metric.metrics.SegmentalF1.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalF1.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ignore_index : int, default -100\n    the class index that indicates ignored samples\naverage: {'macro', 'micro', 'none'}\n    method for averaging across classes\nnum_classes : int, optional\n    number of classes (not necessary if main_class is not None)\nignored_classes : set, optional\n    a set of class ids to ignore in calculation\nexclusive: bool, default True\n    set to False for multi-label classification tasks\niou_threshold : float, default 0.5\n    if segmental is true, intervals with IoU larger than this threshold are considered correct\ntag_average: {'micro', 'macro', 'none'}\n    method for averaging across meta tags (if given)\nthreshold_value : float | list, optional\n    the decision threshold value (cannot be defined for exclusive classification, and 0.5 be default\n    for non-exclusive); if <code>threshold_value</code> is a list, every value should correspond to the class\n    under the same index</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"fullname": "dlc2action.metric.metrics.SegmentalF1.segmental", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalF1.segmental", "kind": "variable", "doc": "<p>If <code>True</code>, the metric will be calculated over segments; otherwise over frames.</p>\n", "default_value": "True"}, "dlc2action.metric.metrics.Fbeta": {"fullname": "dlc2action.metric.metrics.Fbeta", "modulename": "dlc2action.metric.metrics", "qualname": "Fbeta", "kind": "class", "doc": "<p>F-beta score</p>\n", "bases": "_ClassificationMetric"}, "dlc2action.metric.metrics.Fbeta.__init__": {"fullname": "dlc2action.metric.metrics.Fbeta.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "Fbeta.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>beta : float, default 1\n    the beta parameter\nignore_index : int, default -100\n    the class index that indicates ignored samples\naverage: {'macro', 'micro', 'none'}\n    method for averaging across classes\nnum_classes : int, optional\n    number of classes (not necessary if main_class is not None)\nignored_classes : set, optional\n    a set of class ids to ignore in calculation\nexclusive: bool, default True\n    set to False for multi-label classification tasks\ntag_average: {'micro', 'macro', 'none'}\n    method for averaging across meta tags (if given)\nthreshold_value : float | list, optional\n    the decision threshold value (cannot be defined for exclusive classification, and 0.5 be default\n    for non-exclusive); if <code>threshold_value</code> is a list, every value should correspond to the class\n    under the same index</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">beta</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span></span>)</span>"}, "dlc2action.metric.metrics.Fbeta.beta2": {"fullname": "dlc2action.metric.metrics.Fbeta.beta2", "modulename": "dlc2action.metric.metrics", "qualname": "Fbeta.beta2", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.metric.metrics.SegmentalFbeta": {"fullname": "dlc2action.metric.metrics.SegmentalFbeta", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalFbeta", "kind": "class", "doc": "<p>Segmental F-beta score (not advised for training)</p>\n", "bases": "_ClassificationMetric"}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"fullname": "dlc2action.metric.metrics.SegmentalFbeta.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalFbeta.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>beta : float, default 1\n    the beta parameter\nignore_index : int, default -100\n    the class index that indicates ignored samples\naverage: {'macro', 'micro', 'none'}\n    method for averaging across classes\nnum_classes : int, optional\n    number of classes (not necessary if main_class is not None)\nignored_classes : set, optional\n    a set of class ids to ignore in calculation\nexclusive: bool, default True\n    set to False for multi-label classification tasks\niou_threshold : float, default 0.5\n    if segmental is true, intervals with IoU larger than this threshold are considered correct\ntag_average: {'micro', 'macro', 'none'}\n    method for averaging across meta tags (if given)\nthreshold_value : float | list, optional\n    the decision threshold value (cannot be defined for exclusive classification, and 0.5 be default\n    for non-exclusive); if <code>threshold_value</code> is a list, every value should correspond to the class\n    under the same index</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">beta</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span></span>)</span>"}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"fullname": "dlc2action.metric.metrics.SegmentalFbeta.segmental", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalFbeta.segmental", "kind": "variable", "doc": "<p>If <code>True</code>, the metric will be calculated over segments; otherwise over frames.</p>\n", "default_value": "True"}, "dlc2action.metric.metrics.SegmentalFbeta.beta2": {"fullname": "dlc2action.metric.metrics.SegmentalFbeta.beta2", "modulename": "dlc2action.metric.metrics", "qualname": "SegmentalFbeta.beta2", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"fullname": "dlc2action.metric.metrics.SemiSegmentalRecall", "modulename": "dlc2action.metric.metrics", "qualname": "SemiSegmentalRecall", "kind": "class", "doc": "<p>Semi-segmental recall (not advised for training)</p>\n\n<p>A metric in-between segmental and frame-wise recall.</p>\n\n<p>This metric follows the following algorithm:\n1) smooth over too-short intervals, both in ground truth and in prediction (first remove\n    groups of zeros shorter than <code>smooth_interval</code> and then do the same with groups of ones),\n2) add <code>delta</code> frames to each ground truth interval at both ends and count the number of predicted\n    positive frames at the resulting intervals (intersection),\n3) calculate the threshold for each interval as\n    <code>t = sigmoid(4 * (a * x + b)) * (iou_threshold_long - iou_threshold_short))</code>, where\n    <code>a = 2 / (long_length - short_length)</code>, <code>b = 1 - a * long_length</code>, <code>x</code> is the length of the interval\n    before <code>delta</code> was added,\n4) for each interval, if intersection is higher than <code>t * x</code>, the interval is labeled as true positive (<code>TP</code>),\n    and otherwise as false negative (<code>FN</code>),\n5) the final metric value is computed as <code>TP / (TP + FN)</code>.</p>\n", "bases": "_SemiSegmentalMetric"}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"fullname": "dlc2action.metric.metrics.SemiSegmentalRecall.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "SemiSegmentalRecall.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_classes : int\n    the number of classes in the dataset\nignore_index : int, default -100\n    the ground truth label to ignore\nignored_classes : set, optional\n    the class indices to ignore in computation\nexclusive : bool, default True\n    <code>False</code> for multi-label classification tasks\naverage : {\"macro\", \"micro\", \"none\"}\n    the method to average the results over classes\ntag_average : {\"macro\", \"micro\", \"none\"}\n    the method to average the results over meta tags (if given)\ndelta : int, default 0\n    the number of frames to add to each ground truth interval before computing the intersection,\n    see description of the class for details\nsmooth_interval : int, default 0\n    intervals shorter than this number of frames will be ignored (both in prediction and in ground truth,\n    see description of the class for details\niou_threshold_long : float, default 0.5\n    the intersection threshold for segments longer than <code>long_length</code> frames (between 0 and 1),\n    see description of the class for details\niou_threshold_short : float, default 0.5\n    the intersection threshold for segments shorter than <code>short_length</code> frames (between 0 and 1),\n    see description of the class for details\nshort_length : int, default 30\n    the threshold number of frames for short intervals that will have an intersection threshold of\n    <code>iou_threshold_short</code>, see description of the class for details\nlong_length : int, default 300\n    the threshold number of frames for long intervals that will have an intersection threshold of\n    <code>iou_threshold_long</code>, see description of the class for details</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">delta</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">smooth_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold_long</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold_short</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">short_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">long_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">300</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"fullname": "dlc2action.metric.metrics.SemiSegmentalPrecision", "modulename": "dlc2action.metric.metrics", "qualname": "SemiSegmentalPrecision", "kind": "class", "doc": "<p>Semi-segmental precision (not advised for training)</p>\n\n<p>A metric in-between segmental and frame-wise precision.</p>\n\n<p>This metric follows the following algorithm:\n1) smooth over too-short intervals, both in ground truth and in prediction (first remove\n    groups of zeros shorter than <code>smooth_interval</code> and then do the same with groups of ones),\n2) add <code>delta</code> frames to each predicted interval at both ends and count the number of ground truth\n    positive frames at the resulting intervals (intersection),\n3) calculate the threshold for each interval as\n    <code>t = sigmoid(4 * (a * x + b)) * (iou_threshold_long - iou_threshold_short))</code>, where\n    <code>a = 2 / (long_length - short_length)</code>, <code>b = 1 - a * long_length</code>, <code>x</code> is the length of the interval\n    before <code>delta</code> was added,\n4) for each interval, if intersection is higher than <code>t * x</code>, the interval is labeled as true positive (<code>TP</code>),\n    and otherwise as false positive (<code>FP</code>),\n5) the final metric value is computed as <code>TP / (TP + FP)</code>.</p>\n", "bases": "_SemiSegmentalMetric"}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"fullname": "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "SemiSegmentalPrecision.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_classes : int\n    the number of classes in the dataset\nignore_index : int, default -100\n    the ground truth label to ignore\nignored_classes : set, optional\n    the class indices to ignore in computation\nexclusive : bool, default True\n    <code>False</code> for multi-label classification tasks\naverage : {\"macro\", \"micro\", \"none\"}\n    the method to average the results over classes\ntag_average : {\"macro\", \"micro\", \"none\"}\n    the method to average the results over meta tags (if given)\ndelta : int, default 0\n    the number of frames to add to each ground truth interval before computing the intersection,\n    see description of the class for details\nsmooth_interval : int, default 0\n    intervals shorter than this number of frames will be ignored (both in prediction and in ground truth,\n    see description of the class for details\niou_threshold_long : float, default 0.5\n    the intersection threshold for segments longer than <code>long_length</code> frames (between 0 and 1),\n    see description of the class for details\niou_threshold_short : float, default 0.5\n    the intersection threshold for segments shorter than <code>short_length</code> frames (between 0 and 1),\n    see description of the class for details\nshort_length : int, default 30\n    the threshold number of frames for short intervals that will have an intersection threshold of\n    <code>iou_threshold_short</code>, see description of the class for details\nlong_length : int, default 300\n    the threshold number of frames for long intervals that will have an intersection threshold of\n    <code>iou_threshold_long</code>, see description of the class for details</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">delta</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">smooth_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold_long</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold_short</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">short_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">long_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">300</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.metric.metrics.SemiSegmentalF1": {"fullname": "dlc2action.metric.metrics.SemiSegmentalF1", "modulename": "dlc2action.metric.metrics", "qualname": "SemiSegmentalF1", "kind": "class", "doc": "<p>The F1 score for semi-segmental recall and precision (not advised for training)</p>\n", "bases": "_SemiSegmentalMetric"}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"fullname": "dlc2action.metric.metrics.SemiSegmentalF1.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "SemiSegmentalF1.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_classes : int\n    the number of classes in the dataset\nignore_index : int, default -100\n    the ground truth label to ignore\nignored_classes : set, optional\n    the class indices to ignore in computation\nexclusive : bool, default True\n    <code>False</code> for multi-label classification tasks\naverage : {\"macro\", \"micro\", \"none\"}\n    the method to average the results over classes\ntag_average : {\"macro\", \"micro\", \"none\"}\n    the method to average the results over meta tags (if given)\ndelta : int, default 0\n    the number of frames to add to each ground truth interval before computing the intersection,\n    see description of the class for details\nsmooth_interval : int, default 0\n    intervals shorter than this number of frames will be ignored (both in prediction and in ground truth,\n    see description of the class for details\niou_threshold_long : float, default 0.5\n    the intersection threshold for segments longer than <code>long_length</code> frames (between 0 and 1),\n    see description of the class for details\niou_threshold_short : float, default 0.5\n    the intersection threshold for segments shorter than <code>short_length</code> frames (between 0 and 1),\n    see description of the class for details\nshort_length : int, default 30\n    the threshold number of frames for short intervals that will have an intersection threshold of\n    <code>iou_threshold_short</code>, see description of the class for details\nlong_length : int, default 300\n    the threshold number of frames for long intervals that will have an intersection threshold of\n    <code>iou_threshold_long</code>, see description of the class for details</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">delta</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">smooth_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold_long</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold_short</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">short_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">long_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">300</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"fullname": "dlc2action.metric.metrics.SemiSegmentalPR_AUC", "modulename": "dlc2action.metric.metrics", "qualname": "SemiSegmentalPR_AUC", "kind": "class", "doc": "<p>The area under the precision-recall curve for semi-segmental metrics (not advised for training)</p>\n", "bases": "_SemiSegmentalMetric"}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"fullname": "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "SemiSegmentalPR_AUC.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_classes : int\n    the number of classes in the dataset\nignore_index : int, default -100\n    the ground truth label to ignore\nignored_classes : set, optional\n    the class indices to ignore in computation\nexclusive : bool, default True\n    <code>False</code> for multi-label classification tasks\naverage : {\"macro\", \"micro\", \"none\"}\n    the method to average the results over classes\ntag_average : {\"macro\", \"micro\", \"none\"}\n    the method to average the results over meta tags (if given)\ndelta : int, default 0\n    the number of frames to add to each ground truth interval before computing the intersection,\n    see description of the class for details\nsmooth_interval : int, default 0\n    intervals shorter than this number of frames will be ignored (both in prediction and in ground truth,\n    see description of the class for details\niou_threshold_long : float, default 0.5\n    the intersection threshold for segments longer than <code>long_length</code> frames (between 0 and 1),\n    see description of the class for details\niou_threshold_short : float, default 0.5\n    the intersection threshold for segments shorter than <code>short_length</code> frames (between 0 and 1),\n    see description of the class for details\nshort_length : int, default 30\n    the threshold number of frames for short intervals that will have an intersection threshold of\n    <code>iou_threshold_short</code>, see description of the class for details\nlong_length : int, default 300\n    the threshold number of frames for long intervals that will have an intersection threshold of\n    <code>iou_threshold_long</code>, see description of the class for details</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;macro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tag_average</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;micro&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">delta</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">smooth_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold_long</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold_short</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">short_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">long_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">300</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_step</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span></span>)</span>"}, "dlc2action.metric.metrics.Accuracy": {"fullname": "dlc2action.metric.metrics.Accuracy", "modulename": "dlc2action.metric.metrics", "qualname": "Accuracy", "kind": "class", "doc": "<p>Accuracy</p>\n", "bases": "dlc2action.metric.base_metric.Metric"}, "dlc2action.metric.metrics.Accuracy.__init__": {"fullname": "dlc2action.metric.metrics.Accuracy.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "Accuracy.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ignore_index: int\n    the class index that indicates ignored sample</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ignore_index</span><span class=\"o\">=-</span><span class=\"mi\">100</span></span>)</span>"}, "dlc2action.metric.metrics.Accuracy.ignore_index": {"fullname": "dlc2action.metric.metrics.Accuracy.ignore_index", "modulename": "dlc2action.metric.metrics", "qualname": "Accuracy.ignore_index", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.metric.metrics.Accuracy.reset": {"fullname": "dlc2action.metric.metrics.Accuracy.reset", "modulename": "dlc2action.metric.metrics", "qualname": "Accuracy.reset", "kind": "function", "doc": "<p>Reset the intrinsic parameters (at the beginning of an epoch)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.Accuracy.calculate": {"fullname": "dlc2action.metric.metrics.Accuracy.calculate", "modulename": "dlc2action.metric.metrics", "qualname": "Accuracy.calculate", "kind": "function", "doc": "<p>Calculate the metric value</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>metric : float\n    metric value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.Accuracy.update": {"fullname": "dlc2action.metric.metrics.Accuracy.update", "modulename": "dlc2action.metric.metrics", "qualname": "Accuracy.update", "kind": "function", "doc": "<p>Update the intrinsic parameters (with a batch)</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>predicted : torch.Tensor\n    the main prediction tensor generated by the model\nssl_predicted : torch.Tensor\n    the SSL prediction tensor generated by the model\ntarget : torch.Tensor\n    the corresponding main target tensor\nssl_target : torch.Tensor\n    the corresponding SSL target tensor\ntags : torch.Tensor\n    the tensor of meta tags (or <code>None</code>, if tags are not given)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.Count": {"fullname": "dlc2action.metric.metrics.Count", "modulename": "dlc2action.metric.metrics", "qualname": "Count", "kind": "class", "doc": "<p>Fraction of samples labeled by the model as a class</p>\n", "bases": "dlc2action.metric.base_metric.Metric"}, "dlc2action.metric.metrics.Count.__init__": {"fullname": "dlc2action.metric.metrics.Count.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "Count.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>classes : set\n    the set of classes to count\nexclusive: bool, default True\n    set to False for multi-label classification tasks</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span>, </span><span class=\"param\"><span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "dlc2action.metric.metrics.Count.classes": {"fullname": "dlc2action.metric.metrics.Count.classes", "modulename": "dlc2action.metric.metrics", "qualname": "Count.classes", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.metric.metrics.Count.exclusive": {"fullname": "dlc2action.metric.metrics.Count.exclusive", "modulename": "dlc2action.metric.metrics", "qualname": "Count.exclusive", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.metric.metrics.Count.reset": {"fullname": "dlc2action.metric.metrics.Count.reset", "modulename": "dlc2action.metric.metrics", "qualname": "Count.reset", "kind": "function", "doc": "<p>Reset the intrinsic parameters (at the beginning of an epoch)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.Count.update": {"fullname": "dlc2action.metric.metrics.Count.update", "modulename": "dlc2action.metric.metrics", "qualname": "Count.update", "kind": "function", "doc": "<p>Update the intrinsic parameters (with a batch)</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>predicted : torch.Tensor\n    the main prediction tensor generated by the model\nssl_predicted : torch.Tensor\n    the SSL prediction tensor generated by the model\ntarget : torch.Tensor\n    the corresponding main target tensor\nssl_target : torch.Tensor\n    the corresponding SSL target tensor\ntags : torch.Tensor\n    the tensor of meta tags (or <code>None</code>, if tags are not given)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.Count.calculate": {"fullname": "dlc2action.metric.metrics.Count.calculate", "modulename": "dlc2action.metric.metrics", "qualname": "Count.calculate", "kind": "function", "doc": "<p>Calculate the metric (at the end of an epoch)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>result : dict\n    a dictionary where the keys are class indices and the values are class metric values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.EditDistance": {"fullname": "dlc2action.metric.metrics.EditDistance", "modulename": "dlc2action.metric.metrics", "qualname": "EditDistance", "kind": "class", "doc": "<p>Edit distance (not advised for training)</p>\n\n<p>Normalized by the length of the sequences</p>\n", "bases": "dlc2action.metric.base_metric.Metric"}, "dlc2action.metric.metrics.EditDistance.__init__": {"fullname": "dlc2action.metric.metrics.EditDistance.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "EditDistance.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ignore_index : int, default -100\n    the class index that indicates samples that should be ignored\nexclusive : bool, default True\n    set to False for multi-label classification tasks</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ignore_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "dlc2action.metric.metrics.EditDistance.ignore_index": {"fullname": "dlc2action.metric.metrics.EditDistance.ignore_index", "modulename": "dlc2action.metric.metrics", "qualname": "EditDistance.ignore_index", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.metric.metrics.EditDistance.exclusive": {"fullname": "dlc2action.metric.metrics.EditDistance.exclusive", "modulename": "dlc2action.metric.metrics", "qualname": "EditDistance.exclusive", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.metric.metrics.EditDistance.reset": {"fullname": "dlc2action.metric.metrics.EditDistance.reset", "modulename": "dlc2action.metric.metrics", "qualname": "EditDistance.reset", "kind": "function", "doc": "<p>Reset the intrinsic parameters (at the beginning of an epoch)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.EditDistance.update": {"fullname": "dlc2action.metric.metrics.EditDistance.update", "modulename": "dlc2action.metric.metrics", "qualname": "EditDistance.update", "kind": "function", "doc": "<p>Update the intrinsic parameters (with a batch)</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>predicted : torch.Tensor\n    the main prediction tensor generated by the model\nssl_predicted : torch.Tensor\n    the SSL prediction tensor generated by the model\ntarget : torch.Tensor\n    the corresponding main target tensor\nssl_target : torch.Tensor\n    the corresponding SSL target tensor\ntags : torch.Tensor\n    the tensor of meta tags (or <code>None</code>, if tags are not given)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.EditDistance.calculate": {"fullname": "dlc2action.metric.metrics.EditDistance.calculate", "modulename": "dlc2action.metric.metrics", "qualname": "EditDistance.calculate", "kind": "function", "doc": "<p>Calculate the metric (at the end of an epoch)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>result : float\n    the metric value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.PKU_mAP": {"fullname": "dlc2action.metric.metrics.PKU_mAP", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP", "kind": "class", "doc": "<p>Mean average precision (segmental) (not advised for training)</p>\n", "bases": "dlc2action.metric.base_metric.Metric"}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"fullname": "dlc2action.metric.metrics.PKU_mAP.__init__", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">average</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span>,</span><span class=\"param\">\t<span class=\"n\">num_classes</span>,</span><span class=\"param\">\t<span class=\"n\">iou_threshold</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">threshold_value</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">ignored_classes</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"fullname": "dlc2action.metric.metrics.PKU_mAP.needs_raw_data", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.needs_raw_data", "kind": "variable", "doc": "<p>If <code>True</code>, <code>dlc2action.task.universal_task.Task</code> will pass raw data to the metric (only primary predict \nfunction applied).\nOtherwise it will pass a prediction for the classes.</p>\n", "default_value": "True"}, "dlc2action.metric.metrics.PKU_mAP.average": {"fullname": "dlc2action.metric.metrics.PKU_mAP.average", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.average", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"fullname": "dlc2action.metric.metrics.PKU_mAP.iou_threshold", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.iou_threshold", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.metric.metrics.PKU_mAP.threshold": {"fullname": "dlc2action.metric.metrics.PKU_mAP.threshold", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.threshold", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.metric.metrics.PKU_mAP.exclusive": {"fullname": "dlc2action.metric.metrics.PKU_mAP.exclusive", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.exclusive", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.metric.metrics.PKU_mAP.classes": {"fullname": "dlc2action.metric.metrics.PKU_mAP.classes", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.classes", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.metric.metrics.PKU_mAP.match": {"fullname": "dlc2action.metric.metrics.PKU_mAP.match", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.match", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lst</span>, </span><span class=\"param\"><span class=\"n\">ratio</span>, </span><span class=\"param\"><span class=\"n\">ground</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.PKU_mAP.reset": {"fullname": "dlc2action.metric.metrics.PKU_mAP.reset", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.reset", "kind": "function", "doc": "<p>Reset the intrinsic parameters (at the beginning of an epoch)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"fullname": "dlc2action.metric.metrics.PKU_mAP.calc_pr", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.calc_pr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">positive</span>, </span><span class=\"param\"><span class=\"n\">proposal</span>, </span><span class=\"param\"><span class=\"n\">ground</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"fullname": "dlc2action.metric.metrics.PKU_mAP.calculate", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.calculate", "kind": "function", "doc": "<p>Calculate the metric (at the end of an epoch)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>result : float | dict\n    either the single value of the metric or a dictionary where the keys are class indices and the values\n    are class metric values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.PKU_mAP.ap": {"fullname": "dlc2action.metric.metrics.PKU_mAP.ap", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.ap", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cos_map</span>, </span><span class=\"param\"><span class=\"n\">count_map</span>, </span><span class=\"param\"><span class=\"n\">positive</span>, </span><span class=\"param\"><span class=\"n\">confidence</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.metric.metrics.PKU_mAP.update": {"fullname": "dlc2action.metric.metrics.PKU_mAP.update", "modulename": "dlc2action.metric.metrics", "qualname": "PKU_mAP.update", "kind": "function", "doc": "<p>Update the intrinsic parameters (with a batch)</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>predicted : torch.Tensor\n    the main prediction tensor generated by the model\nssl_predicted : torch.Tensor\n    the SSL prediction tensor generated by the model\ntarget : torch.Tensor\n    the corresponding main target tensor\nssl_target : torch.Tensor\n    the corresponding SSL target tensor\ntags : torch.Tensor\n    the tensor of meta tags (or <code>None</code>, if tags are not given)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.model": {"fullname": "dlc2action.model", "modulename": "dlc2action.model", "kind": "module", "doc": "<h2 id=\"models\">Models</h2>\n\n<p>The <code>dlc2action.model.base_model.Model</code> abstract class inherits from <code>torch.nn.Module</code> but additionally\nhandles automatic integration\nof SSL modules (see <code>dlc2action.ssl</code>) and enforces consistent input and output formats.</p>\n"}, "dlc2action.model.asformer": {"fullname": "dlc2action.model.asformer", "modulename": "dlc2action.model.asformer", "kind": "module", "doc": "<p>ASFormer</p>\n\n<p>Adapted from <a href=\"https://github.com/ChinaYi/ASFormer\">https://github.com/ChinaYi/ASFormer</a></p>\n"}, "dlc2action.model.asformer.device": {"fullname": "dlc2action.model.asformer.device", "modulename": "dlc2action.model.asformer", "qualname": "device", "kind": "variable", "doc": "<p></p>\n", "default_value": "device(type=&#x27;cpu&#x27;)"}, "dlc2action.model.asformer.ASFormer": {"fullname": "dlc2action.model.asformer.ASFormer", "modulename": "dlc2action.model.asformer", "qualname": "ASFormer", "kind": "class", "doc": "<p>An implementation of ASFormer</p>\n", "bases": "dlc2action.model.base_model.Model"}, "dlc2action.model.asformer.ASFormer.__init__": {"fullname": "dlc2action.model.asformer.ASFormer.__init__", "modulename": "dlc2action.model.asformer", "qualname": "ASFormer.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ssl_constructors : list, optional\n    a list of SSL constructors that build the necessary SSL modules\nssl_modules : list, optional\n    a list of torch.nn.Module instances that will serve as SSL modules\nssl_types : list, optional\n    a list of string SSL types\nstate_dict_path : str, optional\n    path to the model state dictionary to load\nstrict : bool, default False\n    when True, the state dictionary will only be loaded if the current and the loaded architecture are the same;\n    otherwise missing or extra keys, as well as shaoe inconsistencies, are ignored</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_decoders</span>,</span><span class=\"param\">\t<span class=\"n\">num_layers</span>,</span><span class=\"param\">\t<span class=\"n\">r1</span>,</span><span class=\"param\">\t<span class=\"n\">r2</span>,</span><span class=\"param\">\t<span class=\"n\">num_f_maps</span>,</span><span class=\"param\">\t<span class=\"n\">input_dim</span>,</span><span class=\"param\">\t<span class=\"n\">num_classes</span>,</span><span class=\"param\">\t<span class=\"n\">channel_masking_rate</span>,</span><span class=\"param\">\t<span class=\"n\">state_dict_path</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_constructors</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_types</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_modules</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "dlc2action.model.asformer.ASFormer.num_f_maps": {"fullname": "dlc2action.model.asformer.ASFormer.num_f_maps", "modulename": "dlc2action.model.asformer", "qualname": "ASFormer.num_f_maps", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.asformer.ASFormer.params": {"fullname": "dlc2action.model.asformer.ASFormer.params", "modulename": "dlc2action.model.asformer", "qualname": "ASFormer.params", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.asformer.ASFormer.params_predictor": {"fullname": "dlc2action.model.asformer.ASFormer.params_predictor", "modulename": "dlc2action.model.asformer", "qualname": "ASFormer.params_predictor", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.asformer.ASFormer.features_shape": {"fullname": "dlc2action.model.asformer.ASFormer.features_shape", "modulename": "dlc2action.model.asformer", "qualname": "ASFormer.features_shape", "kind": "function", "doc": "<p>Get the shape of feature extractor output</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>feature_shape : torch.Size\n    shape of feature extractor output</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.base_model": {"fullname": "dlc2action.model.base_model", "modulename": "dlc2action.model.base_model", "kind": "module", "doc": "<p>Abstract parent class for models used in <code>dlc2action.task.universal_task.Task</code></p>\n"}, "dlc2action.model.base_model.available_ssl_types": {"fullname": "dlc2action.model.base_model.available_ssl_types", "modulename": "dlc2action.model.base_model", "qualname": "available_ssl_types", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;ssl_input&#x27;, &#x27;ssl_target&#x27;, &#x27;contrastive&#x27;, &#x27;none&#x27;, &#x27;contrastive_2layers&#x27;]"}, "dlc2action.model.base_model.Model": {"fullname": "dlc2action.model.base_model.Model", "modulename": "dlc2action.model.base_model", "qualname": "Model", "kind": "class", "doc": "<p>Base class for all models</p>\n\n<p>Manages interaction of base model and SSL modules + ensures consistent input and output format</p>\n", "bases": "torch.nn.modules.module.Module, abc.ABC"}, "dlc2action.model.base_model.Model.__init__": {"fullname": "dlc2action.model.base_model.Model.__init__", "modulename": "dlc2action.model.base_model", "qualname": "Model.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ssl_constructors : list, optional\n    a list of SSL constructors that build the necessary SSL modules\nssl_modules : list, optional\n    a list of torch.nn.Module instances that will serve as SSL modules\nssl_types : list, optional\n    a list of string SSL types\nstate_dict_path : str, optional\n    path to the model state dictionary to load\nstrict : bool, default False\n    when True, the state dictionary will only be loaded if the current and the loaded architecture are the same;\n    otherwise missing or extra keys, as well as shaoe inconsistencies, are ignored</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ssl_constructors</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_modules</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_types</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">state_dict_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">prompt_function</span><span class=\"p\">:</span> <span class=\"n\">Callable</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.model.base_model.Model.process_labels": {"fullname": "dlc2action.model.base_model.Model.process_labels", "modulename": "dlc2action.model.base_model", "qualname": "Model.process_labels", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, "dlc2action.model.base_model.Model.feature_extractor": {"fullname": "dlc2action.model.base_model.Model.feature_extractor", "modulename": "dlc2action.model.base_model", "qualname": "Model.feature_extractor", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.base_model.Model.feature_extractors": {"fullname": "dlc2action.model.base_model.Model.feature_extractors", "modulename": "dlc2action.model.base_model", "qualname": "Model.feature_extractors", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.base_model.Model.predictor": {"fullname": "dlc2action.model.base_model.Model.predictor", "modulename": "dlc2action.model.base_model", "qualname": "Model.predictor", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.base_model.Model.ssl_active": {"fullname": "dlc2action.model.base_model.Model.ssl_active", "modulename": "dlc2action.model.base_model", "qualname": "Model.ssl_active", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.base_model.Model.main_task_active": {"fullname": "dlc2action.model.base_model.Model.main_task_active", "modulename": "dlc2action.model.base_model", "qualname": "Model.main_task_active", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.base_model.Model.prompt_function": {"fullname": "dlc2action.model.base_model.Model.prompt_function", "modulename": "dlc2action.model.base_model", "qualname": "Model.prompt_function", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.base_model.Model.class_tensors": {"fullname": "dlc2action.model.base_model.Model.class_tensors", "modulename": "dlc2action.model.base_model", "qualname": "Model.class_tensors", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"fullname": "dlc2action.model.base_model.Model.freeze_feature_extractor", "modulename": "dlc2action.model.base_model", "qualname": "Model.freeze_feature_extractor", "kind": "function", "doc": "<p>Freeze the parameters of the feature extraction module</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"fullname": "dlc2action.model.base_model.Model.unfreeze_feature_extractor", "modulename": "dlc2action.model.base_model", "qualname": "Model.unfreeze_feature_extractor", "kind": "function", "doc": "<p>Unfreeze the parameters of the feature extraction module</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.base_model.Model.load_state_dict": {"fullname": "dlc2action.model.base_model.Model.load_state_dict", "modulename": "dlc2action.model.base_model", "qualname": "Model.load_state_dict", "kind": "function", "doc": "<p>Load a model state dictionary</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>state_dict : str\n    the path to the saved state dictionary\nstrict : bool, default True\n    when True, the state dictionary will only be loaded if the current and the loaded architecture are the same;\n    otherwise missing or extra keys, as well as shaoe inconsistencies, are ignored</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state_dict</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.base_model.Model.ssl_off": {"fullname": "dlc2action.model.base_model.Model.ssl_off", "modulename": "dlc2action.model.base_model", "qualname": "Model.ssl_off", "kind": "function", "doc": "<p>Turn SSL off (SSL output will not be computed by the forward function)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.base_model.Model.ssl_on": {"fullname": "dlc2action.model.base_model.Model.ssl_on", "modulename": "dlc2action.model.base_model", "qualname": "Model.ssl_on", "kind": "function", "doc": "<p>Turn SSL on (SSL output will be computed by the forward function)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.base_model.Model.main_task_on": {"fullname": "dlc2action.model.base_model.Model.main_task_on", "modulename": "dlc2action.model.base_model", "qualname": "Model.main_task_on", "kind": "function", "doc": "<p>Turn main task training on</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.base_model.Model.main_task_off": {"fullname": "dlc2action.model.base_model.Model.main_task_off", "modulename": "dlc2action.model.base_model", "qualname": "Model.main_task_off", "kind": "function", "doc": "<p>Turn main task training on</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.base_model.Model.set_ssl": {"fullname": "dlc2action.model.base_model.Model.set_ssl", "modulename": "dlc2action.model.base_model", "qualname": "Model.set_ssl", "kind": "function", "doc": "<p>Set the SSL modules</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_constructors</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_types</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_modules</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.base_model.Model.features_shape": {"fullname": "dlc2action.model.base_model.Model.features_shape", "modulename": "dlc2action.model.base_model", "qualname": "Model.features_shape", "kind": "function", "doc": "<p>Get the shape of feature extractor output</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>feature_shape : torch.Size\n    shape of feature extractor output</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.base_model.Model.extract_features": {"fullname": "dlc2action.model.base_model.Model.extract_features", "modulename": "dlc2action.model.base_model", "qualname": "Model.extract_features", "kind": "function", "doc": "<p>Apply the feature extraction modules consecutively</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x : torch.Tensor\n    the input tensor\nstart : int, default 0\n    the index of the feature extraction module to start with</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>output : torch.Tensor\n    the output tensor</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.model.base_model.Model.forward": {"fullname": "dlc2action.model.base_model.Model.forward", "modulename": "dlc2action.model.base_model", "qualname": "Model.forward", "kind": "function", "doc": "<p>Generate a prediction for x</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x : torch.Tensor\n    the main input\nssl_xs : list\n    a list of SSL input tensors\ntag : any, optional\n    a meta information tag</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>prediction : torch.Tensor\n    prediction for the main input\nssl_out : list\n    a list of SSL prediction tensors</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_xs</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">tag</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.base_model.LoadedModel": {"fullname": "dlc2action.model.base_model.LoadedModel", "modulename": "dlc2action.model.base_model", "qualname": "LoadedModel", "kind": "class", "doc": "<p>A class to generate a Model instance from a torch.nn.Module</p>\n", "bases": "Model"}, "dlc2action.model.base_model.LoadedModel.__init__": {"fullname": "dlc2action.model.base_model.LoadedModel.__init__", "modulename": "dlc2action.model.base_model", "qualname": "LoadedModel.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>model : torch.nn.Module\n    a model with a forward function that takes a single tensor as input and returns a single tensor as output</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"fullname": "dlc2action.model.base_model.LoadedModel.ssl_types", "modulename": "dlc2action.model.base_model", "qualname": "LoadedModel.ssl_types", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;none&#x27;]"}, "dlc2action.model.base_model.LoadedModel.ssl_active": {"fullname": "dlc2action.model.base_model.LoadedModel.ssl_active", "modulename": "dlc2action.model.base_model", "qualname": "LoadedModel.ssl_active", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.base_model.LoadedModel.feature_extractor": {"fullname": "dlc2action.model.base_model.LoadedModel.feature_extractor", "modulename": "dlc2action.model.base_model", "qualname": "LoadedModel.feature_extractor", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"fullname": "dlc2action.model.base_model.LoadedModel.ssl_on", "modulename": "dlc2action.model.base_model", "qualname": "LoadedModel.ssl_on", "kind": "function", "doc": "<p>Turn SSL on (SSL output will be computed by the forward function)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.model.c2f_tcn": {"fullname": "dlc2action.model.c2f_tcn", "modulename": "dlc2action.model.c2f_tcn", "kind": "module", "doc": "<p>C2F-TCN</p>\n\n<p>Adapted from <a href=\"https://github.com/dipika-singhania/C2F-TCN\">https://github.com/dipika-singhania/C2F-TCN</a></p>\n"}, "dlc2action.model.c2f_tcn.nonlinearity": {"fullname": "dlc2action.model.c2f_tcn.nonlinearity", "modulename": "dlc2action.model.c2f_tcn", "qualname": "nonlinearity", "kind": "variable", "doc": "<p></p>\n", "default_value": "functools.partial(&lt;function relu&gt;, inplace=True)"}, "dlc2action.model.c2f_tcn.C2F_TCN": {"fullname": "dlc2action.model.c2f_tcn.C2F_TCN", "modulename": "dlc2action.model.c2f_tcn", "qualname": "C2F_TCN", "kind": "class", "doc": "<p>An implementation of C2F-TCN</p>\n\n<p>Requires the <code>\"general/len_segment\"</code> parameter to be at least 512</p>\n", "bases": "dlc2action.model.base_model.Model"}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"fullname": "dlc2action.model.c2f_tcn.C2F_TCN.__init__", "modulename": "dlc2action.model.c2f_tcn", "qualname": "C2F_TCN.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ssl_constructors : list, optional\n    a list of SSL constructors that build the necessary SSL modules\nssl_modules : list, optional\n    a list of torch.nn.Module instances that will serve as SSL modules\nssl_types : list, optional\n    a list of string SSL types\nstate_dict_path : str, optional\n    path to the model state dictionary to load\nstrict : bool, default False\n    when True, the state dictionary will only be loaded if the current and the loaded architecture are the same;\n    otherwise missing or extra keys, as well as shaoe inconsistencies, are ignored</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span>,</span><span class=\"param\">\t<span class=\"n\">input_dims</span>,</span><span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"o\">=</span><span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">feature_dim</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">state_dict_path</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_constructors</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_types</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_modules</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "dlc2action.model.c2f_tcn.C2F_TCN.params": {"fullname": "dlc2action.model.c2f_tcn.C2F_TCN.params", "modulename": "dlc2action.model.c2f_tcn", "qualname": "C2F_TCN.params", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"fullname": "dlc2action.model.c2f_tcn.C2F_TCN.features_shape", "modulename": "dlc2action.model.c2f_tcn", "qualname": "C2F_TCN.features_shape", "kind": "function", "doc": "<p>Get the shape of feature extractor output</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>feature_shape : torch.Size\n    shape of feature extractor output</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.edtcn": {"fullname": "dlc2action.model.edtcn", "modulename": "dlc2action.model.edtcn", "kind": "module", "doc": "<p>EDTCN</p>\n\n<p>Adapted from <a href=\"https://github.com/yiskw713/asrf/blob/main/libs/models/tcn.py\">https://github.com/yiskw713/asrf/blob/main/libs/models/tcn.py</a></p>\n"}, "dlc2action.model.edtcn.EDTCN": {"fullname": "dlc2action.model.edtcn.EDTCN", "modulename": "dlc2action.model.edtcn", "qualname": "EDTCN", "kind": "class", "doc": "<p>An implementation of EDTCN (Endoder-Decoder TCN)</p>\n", "bases": "dlc2action.model.base_model.Model"}, "dlc2action.model.edtcn.EDTCN.__init__": {"fullname": "dlc2action.model.edtcn.EDTCN.__init__", "modulename": "dlc2action.model.edtcn", "qualname": "EDTCN.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ssl_constructors : list, optional\n    a list of SSL constructors that build the necessary SSL modules\nssl_modules : list, optional\n    a list of torch.nn.Module instances that will serve as SSL modules\nssl_types : list, optional\n    a list of string SSL types\nstate_dict_path : str, optional\n    path to the model state dictionary to load\nstrict : bool, default False\n    when True, the state dictionary will only be loaded if the current and the loaded architecture are the same;\n    otherwise missing or extra keys, as well as shaoe inconsistencies, are ignored</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_classes</span>,</span><span class=\"param\">\t<span class=\"n\">input_dims</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_size</span>,</span><span class=\"param\">\t<span class=\"n\">mid_channels</span>,</span><span class=\"param\">\t<span class=\"n\">feature_dim</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">state_dict_path</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_constructors</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_types</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_modules</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "dlc2action.model.edtcn.EDTCN.params": {"fullname": "dlc2action.model.edtcn.EDTCN.params", "modulename": "dlc2action.model.edtcn", "qualname": "EDTCN.params", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.edtcn.EDTCN.features_shape": {"fullname": "dlc2action.model.edtcn.EDTCN.features_shape", "modulename": "dlc2action.model.edtcn", "qualname": "EDTCN.features_shape", "kind": "function", "doc": "<p>Get the shape of feature extractor output</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>feature_shape : torch.Size\n    shape of feature extractor output</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.mlp": {"fullname": "dlc2action.model.mlp", "modulename": "dlc2action.model.mlp", "kind": "module", "doc": "<p></p>\n"}, "dlc2action.model.mlp.MLP": {"fullname": "dlc2action.model.mlp.MLP", "modulename": "dlc2action.model.mlp", "qualname": "MLP", "kind": "class", "doc": "<p>A Multi-Layer Perceptron</p>\n", "bases": "dlc2action.model.base_model.Model"}, "dlc2action.model.mlp.MLP.__init__": {"fullname": "dlc2action.model.mlp.MLP.__init__", "modulename": "dlc2action.model.mlp", "qualname": "MLP.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ssl_constructors : list, optional\n    a list of SSL constructors that build the necessary SSL modules\nssl_modules : list, optional\n    a list of torch.nn.Module instances that will serve as SSL modules\nssl_types : list, optional\n    a list of string SSL types\nstate_dict_path : str, optional\n    path to the model state dictionary to load\nstrict : bool, default False\n    when True, the state dictionary will only be loaded if the current and the loaded architecture are the same;\n    otherwise missing or extra keys, as well as shaoe inconsistencies, are ignored</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f_maps_list</span>,</span><span class=\"param\">\t<span class=\"n\">input_dims</span>,</span><span class=\"param\">\t<span class=\"n\">num_classes</span>,</span><span class=\"param\">\t<span class=\"n\">dropout_rates</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">state_dict_path</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_constructors</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_types</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_modules</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "dlc2action.model.mlp.MLP.params": {"fullname": "dlc2action.model.mlp.MLP.params", "modulename": "dlc2action.model.mlp", "qualname": "MLP.params", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.mlp.MLP.features_shape": {"fullname": "dlc2action.model.mlp.MLP.features_shape", "modulename": "dlc2action.model.mlp", "qualname": "MLP.features_shape", "kind": "function", "doc": "<p>Get the shape of feature extractor output</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>feature_shape : torch.Size\n    shape of feature extractor output</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>:</span></span>", "funcdef": "def"}, "dlc2action.model.transformer": {"fullname": "dlc2action.model.transformer", "modulename": "dlc2action.model.transformer", "kind": "module", "doc": "<p></p>\n"}, "dlc2action.model.transformer.Transformer": {"fullname": "dlc2action.model.transformer.Transformer", "modulename": "dlc2action.model.transformer", "qualname": "Transformer", "kind": "class", "doc": "<p>A modification of Transformer-Encoder with additional max-pooling and upsampling</p>\n\n<p>Set <code>num_pool</code> to 0 to get a standart transformer-encoder.</p>\n", "bases": "dlc2action.model.base_model.Model"}, "dlc2action.model.transformer.Transformer.__init__": {"fullname": "dlc2action.model.transformer.Transformer.__init__", "modulename": "dlc2action.model.transformer", "qualname": "Transformer.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>ssl_constructors : list, optional\n    a list of SSL constructors that build the necessary SSL modules\nssl_modules : list, optional\n    a list of torch.nn.Module instances that will serve as SSL modules\nssl_types : list, optional\n    a list of string SSL types\nstate_dict_path : str, optional\n    path to the model state dictionary to load\nstrict : bool, default False\n    when True, the state dictionary will only be loaded if the current and the loaded architecture are the same;\n    otherwise missing or extra keys, as well as shaoe inconsistencies, are ignored</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">N</span>,</span><span class=\"param\">\t<span class=\"n\">heads</span>,</span><span class=\"param\">\t<span class=\"n\">num_f_maps</span>,</span><span class=\"param\">\t<span class=\"n\">input_dim</span>,</span><span class=\"param\">\t<span class=\"n\">num_classes</span>,</span><span class=\"param\">\t<span class=\"n\">num_pool</span>,</span><span class=\"param\">\t<span class=\"n\">add_batchnorm</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">feature_dim</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">state_dict_path</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_constructors</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_types</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_modules</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "dlc2action.model.transformer.Transformer.params": {"fullname": "dlc2action.model.transformer.Transformer.params", "modulename": "dlc2action.model.transformer", "qualname": "Transformer.params", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.model.transformer.Transformer.features_shape": {"fullname": "dlc2action.model.transformer.Transformer.features_shape", "modulename": "dlc2action.model.transformer", "qualname": "Transformer.features_shape", "kind": "function", "doc": "<p>Get the shape of feature extractor output</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>feature_shape : torch.Size\n    shape of feature extractor output</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>:</span></span>", "funcdef": "def"}, "dlc2action.options": {"fullname": "dlc2action.options", "modulename": "dlc2action.options", "kind": "module", "doc": "<p>Here all option dictionaries are stored</p>\n"}, "dlc2action.options.input_stores": {"fullname": "dlc2action.options.input_stores", "modulename": "dlc2action.options", "qualname": "input_stores", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;dlc_tracklet&#x27;: &lt;class &#x27;dlc2action.data.input_store.DLCTrackletStore&#x27;&gt;, &#x27;dlc_track&#x27;: &lt;class &#x27;dlc2action.data.input_store.DLCTrackStore&#x27;&gt;, &#x27;pku-mmd&#x27;: &lt;class &#x27;dlc2action.data.input_store.PKUMMDInputStore&#x27;&gt;, &#x27;calms21&#x27;: &lt;class &#x27;dlc2action.data.input_store.CalMS21InputStore&#x27;&gt;, &#x27;np_3d&#x27;: &lt;class &#x27;dlc2action.data.input_store.Numpy3DInputStore&#x27;&gt;, &#x27;features&#x27;: &lt;class &#x27;dlc2action.data.input_store.LoadedFeaturesInputStore&#x27;&gt;, &#x27;simba&#x27;: &lt;class &#x27;dlc2action.data.input_store.SIMBAInputStore&#x27;&gt;}"}, "dlc2action.options.annotation_stores": {"fullname": "dlc2action.options.annotation_stores", "modulename": "dlc2action.options", "qualname": "annotation_stores", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;dlc&#x27;: &lt;class &#x27;dlc2action.data.annotation_store.DLCAnnotationStore&#x27;&gt;, &#x27;pku-mmd&#x27;: &lt;class &#x27;dlc2action.data.annotation_store.PKUMMDAnnotationStore&#x27;&gt;, &#x27;boris&#x27;: &lt;class &#x27;dlc2action.data.annotation_store.BorisAnnotationStore&#x27;&gt;, &#x27;none&#x27;: &lt;class &#x27;dlc2action.data.annotation_store.EmptyAnnotationStore&#x27;&gt;, &#x27;calms21&#x27;: &lt;class &#x27;dlc2action.data.annotation_store.CalMS21AnnotationStore&#x27;&gt;, &#x27;csv&#x27;: &lt;class &#x27;dlc2action.data.annotation_store.CSVAnnotationStore&#x27;&gt;, &#x27;simba&#x27;: &lt;class &#x27;dlc2action.data.annotation_store.SIMBAAnnotationStore&#x27;&gt;}"}, "dlc2action.options.feature_extractors": {"fullname": "dlc2action.options.feature_extractors", "modulename": "dlc2action.options", "qualname": "feature_extractors", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;kinematic&#x27;: &lt;class &#x27;dlc2action.feature_extraction.KinematicExtractor&#x27;&gt;}"}, "dlc2action.options.ssl_constructors": {"fullname": "dlc2action.options.ssl_constructors", "modulename": "dlc2action.options", "qualname": "ssl_constructors", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;masked_features&#x27;: &lt;class &#x27;dlc2action.ssl.masked.MaskedFeaturesSSL_FC&#x27;&gt;, &#x27;masked_joints&#x27;: &lt;class &#x27;dlc2action.ssl.masked.MaskedKinematicSSL_FC&#x27;&gt;, &#x27;masked_frames&#x27;: &lt;class &#x27;dlc2action.ssl.masked.MaskedFramesSSL_FC&#x27;&gt;, &#x27;contrastive&#x27;: &lt;class &#x27;dlc2action.ssl.contrastive.ContrastiveSSL&#x27;&gt;, &#x27;pairwise&#x27;: &lt;class &#x27;dlc2action.ssl.contrastive.PairwiseSSL&#x27;&gt;, &#x27;contrastive_masked&#x27;: &lt;class &#x27;dlc2action.ssl.contrastive.ContrastiveMaskedSSL&#x27;&gt;, &#x27;pairwise_masked&#x27;: &lt;class &#x27;dlc2action.ssl.contrastive.PairwiseMaskedSSL&#x27;&gt;, &#x27;reverse&#x27;: &lt;class &#x27;dlc2action.ssl.segment_order.ReverseSSL&#x27;&gt;, &#x27;order&#x27;: &lt;class &#x27;dlc2action.ssl.segment_order.OrderSSL&#x27;&gt;, &#x27;contrastive_regression&#x27;: &lt;class &#x27;dlc2action.ssl.contrastive.ContrastiveRegressionSSL&#x27;&gt;, &#x27;tcc&#x27;: &lt;class &#x27;dlc2action.ssl.tcc.TCCSSL&#x27;&gt;}"}, "dlc2action.options.transformers": {"fullname": "dlc2action.options.transformers", "modulename": "dlc2action.options", "qualname": "transformers", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;kinematic&#x27;: &lt;class &#x27;dlc2action.transformer.kinematic.KinematicTransformer&#x27;&gt;}"}, "dlc2action.options.losses": {"fullname": "dlc2action.options.losses", "modulename": "dlc2action.options", "qualname": "losses", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ms_tcn&#x27;: &lt;class &#x27;dlc2action.loss.ms_tcn.MS_TCN_Loss&#x27;&gt;}"}, "dlc2action.options.losses_multistage": {"fullname": "dlc2action.options.losses_multistage", "modulename": "dlc2action.options", "qualname": "losses_multistage", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;ms_tcn&#x27;]"}, "dlc2action.options.metrics": {"fullname": "dlc2action.options.metrics", "modulename": "dlc2action.options", "qualname": "metrics", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;accuracy&#x27;: &lt;class &#x27;dlc2action.metric.metrics.Accuracy&#x27;&gt;, &#x27;precision&#x27;: &lt;class &#x27;dlc2action.metric.metrics.Precision&#x27;&gt;, &#x27;f1&#x27;: &lt;class &#x27;dlc2action.metric.metrics.F1&#x27;&gt;, &#x27;recall&#x27;: &lt;class &#x27;dlc2action.metric.metrics.Recall&#x27;&gt;, &#x27;count&#x27;: &lt;class &#x27;dlc2action.metric.metrics.Count&#x27;&gt;, &#x27;segmental_precision&#x27;: &lt;class &#x27;dlc2action.metric.metrics.SegmentalPrecision&#x27;&gt;, &#x27;segmental_recall&#x27;: &lt;class &#x27;dlc2action.metric.metrics.SegmentalRecall&#x27;&gt;, &#x27;segmental_f1&#x27;: &lt;class &#x27;dlc2action.metric.metrics.SegmentalF1&#x27;&gt;, &#x27;edit_distance&#x27;: &lt;class &#x27;dlc2action.metric.metrics.EditDistance&#x27;&gt;, &#x27;f_beta&#x27;: &lt;class &#x27;dlc2action.metric.metrics.Fbeta&#x27;&gt;, &#x27;segmental_f_beta&#x27;: &lt;class &#x27;dlc2action.metric.metrics.SegmentalFbeta&#x27;&gt;, &#x27;semisegmental_precision&#x27;: &lt;class &#x27;dlc2action.metric.metrics.SemiSegmentalPrecision&#x27;&gt;, &#x27;semisegmental_recall&#x27;: &lt;class &#x27;dlc2action.metric.metrics.SemiSegmentalRecall&#x27;&gt;, &#x27;semisegmental_f1&#x27;: &lt;class &#x27;dlc2action.metric.metrics.SemiSegmentalF1&#x27;&gt;, &#x27;pr-auc&#x27;: &lt;class &#x27;dlc2action.metric.metrics.PR_AUC&#x27;&gt;, &#x27;semisegmental_pr-auc&#x27;: &lt;class &#x27;dlc2action.metric.metrics.SemiSegmentalPR_AUC&#x27;&gt;, &#x27;mAP&#x27;: &lt;class &#x27;dlc2action.metric.metrics.PKU_mAP&#x27;&gt;}"}, "dlc2action.options.metrics_minimize": {"fullname": "dlc2action.options.metrics_minimize", "modulename": "dlc2action.options", "qualname": "metrics_minimize", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;edit_distance&#x27;]"}, "dlc2action.options.metrics_no_direction": {"fullname": "dlc2action.options.metrics_no_direction", "modulename": "dlc2action.options", "qualname": "metrics_no_direction", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;count&#x27;]"}, "dlc2action.options.optimizers": {"fullname": "dlc2action.options.optimizers", "modulename": "dlc2action.options", "qualname": "optimizers", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;Adam&#x27;: &lt;class &#x27;torch.optim.adam.Adam&#x27;&gt;, &#x27;SGD&#x27;: &lt;class &#x27;torch.optim.sgd.SGD&#x27;&gt;}"}, "dlc2action.options.models": {"fullname": "dlc2action.options.models", "modulename": "dlc2action.options", "qualname": "models", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;asformer&#x27;: &lt;class &#x27;dlc2action.model.asformer.ASFormer&#x27;&gt;, &#x27;mlp&#x27;: &lt;class &#x27;dlc2action.model.mlp.MLP&#x27;&gt;, &#x27;c2f_tcn&#x27;: &lt;class &#x27;dlc2action.model.c2f_tcn.C2F_TCN&#x27;&gt;, &#x27;edtcn&#x27;: &lt;class &#x27;dlc2action.model.edtcn.EDTCN&#x27;&gt;, &#x27;transformer&#x27;: &lt;class &#x27;dlc2action.model.transformer.Transformer&#x27;&gt;}"}, "dlc2action.options.blanks": {"fullname": "dlc2action.options.blanks", "modulename": "dlc2action.options", "qualname": "blanks", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;dataset_inverse_weights&#x27;, &#x27;dataset_proportional_weights&#x27;, &#x27;dataset_classes&#x27;, &#x27;dataset_features&#x27;, &#x27;dataset_len_segment&#x27;, &#x27;dataset_bodyparts&#x27;, &#x27;dataset_boundary_weight&#x27;, &#x27;model_features&#x27;]"}, "dlc2action.options.extractor_to_transformer": {"fullname": "dlc2action.options.extractor_to_transformer", "modulename": "dlc2action.options", "qualname": "extractor_to_transformer", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;kinematic&#x27;: &#x27;kinematic&#x27;, &#x27;heatmap&#x27;: &#x27;heatmap&#x27;}"}, "dlc2action.options.partition_methods": {"fullname": "dlc2action.options.partition_methods", "modulename": "dlc2action.options", "qualname": "partition_methods", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;random&#x27;: [&#x27;random&#x27;, &#x27;random:test-from-name&#x27;, &#x27;random:test-from-name:{name}&#x27;, &#x27;random:equalize:segments&#x27;, &#x27;random:equalize:videos&#x27;], &#x27;fixed&#x27;: [&#x27;val-from-name:{val_name}:test-from-name:{test_name}&#x27;, &#x27;time&#x27;, &#x27;time:start-from:{frac}&#x27;, &#x27;time:start-from:{frac}:strict&#x27;, &#x27;time:strict&#x27;, &#x27;file&#x27;, &#x27;folders&#x27;]}"}, "dlc2action.options.basic_parameters": {"fullname": "dlc2action.options.basic_parameters", "modulename": "dlc2action.options", "qualname": "basic_parameters", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;data&#x27;: [&#x27;data_suffix&#x27;, &#x27;feature_suffix&#x27;, &#x27;annotation_suffix&#x27;, &#x27;canvas_shape&#x27;, &#x27;ignored_bodyparts&#x27;, &#x27;likelihood_threshold&#x27;, &#x27;behaviors&#x27;, &#x27;filter_annotated&#x27;, &#x27;filter_background&#x27;, &#x27;visibility_min_score&#x27;, &#x27;visibility_min_frac&#x27;], &#x27;augmentations&#x27;: {&#x27;heatmap&#x27;: [&#x27;augmentations&#x27;, &#x27;rotation_degree_limits&#x27;], &#x27;kinematic&#x27;: [&#x27;augmentations&#x27;, &#x27;rotation_limits&#x27;, &#x27;mirror_dim&#x27;, &#x27;noise_std&#x27;, &#x27;zoom_limits&#x27;, &#x27;masking_probability&#x27;]}, &#x27;features&#x27;: {&#x27;heatmap&#x27;: [&#x27;keys&#x27;, &#x27;channel_policy&#x27;, &#x27;heatmap_width&#x27;, &#x27;sigma&#x27;], &#x27;kinematic&#x27;: [&#x27;keys&#x27;, &#x27;averaging_window&#x27;, &#x27;distance_pairs&#x27;, &#x27;angle_pairs&#x27;, &#x27;zone_vertices&#x27;, &#x27;zone_bools&#x27;, &#x27;zone_distances&#x27;, &#x27;area_vertices&#x27;]}, &#x27;model&#x27;: {&#x27;asformer&#x27;: [&#x27;num_decoders&#x27;, &#x27;num_layers&#x27;, &#x27;r1&#x27;, &#x27;r2&#x27;, &#x27;num_f_maps&#x27;, &#x27;channel_masking_rate&#x27;], &#x27;c2f_tcn&#x27;: [&#x27;num_f_maps&#x27;, &#x27;feature_dim&#x27;], &#x27;edtcn&#x27;: [&#x27;kernel_size&#x27;, &#x27;mid_channels&#x27;], &#x27;mlp&#x27;: [&#x27;f_maps_list&#x27;, &#x27;dropout_rates&#x27;], &#x27;transformer&#x27;: [&#x27;num_f_maps&#x27;, &#x27;N&#x27;, &#x27;heads&#x27;, &#x27;num_pool&#x27;]}, &#x27;general&#x27;: [&#x27;model_name&#x27;, &#x27;metric_functions&#x27;, &#x27;ignored_clips&#x27;, &#x27;len_segment&#x27;, &#x27;overlap&#x27;, &#x27;interactive&#x27;], &#x27;losses&#x27;: {&#x27;ms_tcn&#x27;: [&#x27;focal&#x27;, &#x27;gamma&#x27;, &#x27;alpha&#x27;], &#x27;clip&#x27;: [&#x27;focal&#x27;, &#x27;gamma&#x27;, &#x27;alpha&#x27;, &#x27;fix_text&#x27;]}, &#x27;metrics&#x27;: {&#x27;f1&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;threshold_value&#x27;], &#x27;precision&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;threshold_value&#x27;], &#x27;recall&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;threshold_value&#x27;], &#x27;f_beta&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;threshold_value&#x27;, &#x27;beta&#x27;], &#x27;count&#x27;: [&#x27;classes&#x27;], &#x27;segmental_precision&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;threshold_value&#x27;, &#x27;iou_threshold&#x27;], &#x27;segmental_recall&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;threshold_value&#x27;, &#x27;iou_threshold&#x27;], &#x27;segmental_f1&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;threshold_value&#x27;, &#x27;iou_threshold&#x27;], &#x27;segmental_f_beta&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;threshold_value&#x27;, &#x27;iou_threshold&#x27;], &#x27;pr-auc&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;threshold_step&#x27;], &#x27;mAP&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;iou_threshold&#x27;, &#x27;threshold_value&#x27;], &#x27;semisegmental_precision&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;iou_threshold&#x27;], &#x27;semisegmental_recall&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;iou_threshold&#x27;], &#x27;semisegmental_f1&#x27;: [&#x27;average&#x27;, &#x27;ignored_classes&#x27;, &#x27;iou_threshold&#x27;]}, &#x27;training&#x27;: [&#x27;lr&#x27;, &#x27;device&#x27;, &#x27;num_epochs&#x27;, &#x27;to_ram&#x27;, &#x27;batch_size&#x27;, &#x27;normalize&#x27;, &#x27;temporal_subsampling_size&#x27;, &#x27;parallel&#x27;, &#x27;val_frac&#x27;, &#x27;test_frac&#x27;, &#x27;partition_method&#x27;]}"}, "dlc2action.options.model_hyperparameters": {"fullname": "dlc2action.options.model_hyperparameters", "modulename": "dlc2action.options", "qualname": "model_hyperparameters", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;asformer&#x27;: {&#x27;losses/ms_tcn/alpha&#x27;: (&#x27;float_log&#x27;, 1e-05, 0.01), &#x27;losses/ms_tcn/focal&#x27;: (&#x27;categorical&#x27;, [True, False]), &#x27;training/temporal_subsampling_size&#x27;: (&#x27;float&#x27;, 0.75, 1), &#x27;model/num_decoders&#x27;: (&#x27;int&#x27;, 1, 4), &#x27;model/num_f_maps&#x27;: (&#x27;categorical&#x27;, [32, 64, 128]), &#x27;model/num_layers&#x27;: (&#x27;int&#x27;, 5, 10), &#x27;model/channel_masking_rate&#x27;: (&#x27;float&#x27;, 0.2, 0.4), &#x27;general/len_segment&#x27;: (&#x27;categorical&#x27;, [64, 128])}, &#x27;c2f_tcn&#x27;: {&#x27;losses/ms_tcn/alpha&#x27;: (&#x27;float_log&#x27;, 1e-05, 0.01), &#x27;losses/ms_tcn/focal&#x27;: (&#x27;categorical&#x27;, [True, False]), &#x27;training/temporal_subsampling_size&#x27;: (&#x27;float&#x27;, 0.75, 1), &#x27;model/num_f_maps&#x27;: (&#x27;int_log&#x27;, 32, 128), &#x27;general/len_segment&#x27;: (&#x27;categorical&#x27;, [512, 1024])}, &#x27;edtcn&#x27;: {&#x27;losses/ms_tcn/alpha&#x27;: (&#x27;float_log&#x27;, 1e-05, 0.01), &#x27;losses/ms_tcn/focal&#x27;: (&#x27;categorical&#x27;, [True, False]), &#x27;training/temporal_subsampling_size&#x27;: (&#x27;float&#x27;, 0.75, 1), &#x27;general/len_segment&#x27;: (&#x27;categorical&#x27;, [128, 256, 512])}, &#x27;transformer&#x27;: {&#x27;losses/ms_tcn/alpha&#x27;: (&#x27;float_log&#x27;, 1e-05, 0.01), &#x27;losses/ms_tcn/focal&#x27;: (&#x27;categorical&#x27;, [True, False]), &#x27;training/temporal_subsampling_size&#x27;: (&#x27;float&#x27;, 0.75, 1), &#x27;model/N&#x27;: (&#x27;int&#x27;, 5, 12), &#x27;model/heads&#x27;: (&#x27;categorical&#x27;, [1, 2, 4, 8]), &#x27;model/num_pool&#x27;: (&#x27;int&#x27;, 0, 4), &#x27;model/add_batchnorm&#x27;: (&#x27;categorical&#x27;, [True, False]), &#x27;general/len_segment&#x27;: (&#x27;categorical&#x27;, [64, 128])}, &#x27;mlp&#x27;: {&#x27;losses/ms_tcn/alpha&#x27;: (&#x27;float_log&#x27;, 1e-05, 0.01), &#x27;losses/ms_tcn/focal&#x27;: (&#x27;categorical&#x27;, [True, False]), &#x27;training/temporal_subsampling_size&#x27;: (&#x27;float&#x27;, 0.75, 1), &#x27;model/dropout_rates&#x27;: (&#x27;float&#x27;, 0.3, 0.6)}}"}, "dlc2action.project": {"fullname": "dlc2action.project", "modulename": "dlc2action.project", "kind": "module", "doc": "<h2 id=\"project-interface\">Project interface</h2>\n\n<p>The most convenient way to use <code>dlc2action</code> is through the high-level project interface. It is defined in the\n<code>project</code> module and its main functions are managing configuration files and keeping track of experiments.\nWhen you create a <code>project.Project</code> instance with a previously unused name, it generates a new project folder with results,\nhistory and configuration files.</p>\n\n<pre><code>.\nproject_name\n\u251c\u2500\u2500 config\n\u251c\u2500\u2500 meta\n\u251c\u2500\u2500 saved_datasets\n\u2514\u2500\u2500 results\n    \u251c\u2500\u2500 logs\n    \u2502   \u2514\u2500\u2500 episode.txt\n    \u251c\u2500\u2500 models\n    \u2502   \u2514\u2500\u2500 episode\n    \u2502       \u251c\u2500\u2500 epoch25.pt\n    \u2502       \u2514\u2500\u2500 epoch50.pt\n    \u251c\u2500\u2500 searches\n    \u2502   \u2514\u2500\u2500 search\n    \u2502       \u251c\u2500\u2500 search_param_importances.html_docs\n    \u2502       \u2514\u2500\u2500 search_contour.html_docs\n    \u251c\u2500\u2500 splits\n    \u2502       \u251c\u2500\u2500 time_25.0%validation_10.0%test.txt\n    \u2502       \u2514\u2500\u2500 random_20.0%validation_10.0%test.txt\n    \u251c\u2500\u2500 suggestions\n    \u2502       \u2514\u2500\u2500 active_learning\n    \u2502           \u251c\u2500\u2500 video1_suggestion.pickle\n    \u2502           \u251c\u2500\u2500 video2_suggestion.pickle\n    \u2502           \u2514\u2500\u2500 al_points.pickle\n    \u2514\u2500\u2500 predictions\n            \u251c\u2500\u2500 episode_epoch25.pickle\n            \u2514\u2500\u2500 episode_epoch50_newdata.pickle\n</code></pre>\n\n<p>Here is an explanation of this structure.</p>\n\n<p>The <strong>config</strong> folder contains .yaml configuration files. Project instances can read them into a parameter dictionary\nand update. Those readers understand several blanks for certain parameters that can be inferred from the data on\nruntime:</p>\n\n<ul>\n<li><code>'dataset_features'</code> will be replaced with the shape of features per frame in the data,</li>\n<li><code>'dataset_classes'</code> will be replaced with the number of classes,</li>\n<li><code>'dataset_inverse_weights'</code> at losses.yaml will be replaced with a list of float values that are inversely</li>\n<li><code>'dataset_len_segment'</code> will be replaced with the length of segment in the data,</li>\n<li><code>'model_features'</code> will be replaced with the shape of features per frame in the model feature extraction\noutput (the input to SSL modules).\nproportional to the number of frames labeled with the corresponding classes.</li>\n</ul>\n\n<p>Pickled history files go in the <strong>meta</strong> folder. They are all pandas dataframes that store the relevant task\nparameters, a summary of experiment results (where applicable) and some meta information, like additional\nparameters or the time when the record was added. There are separate files for the history of training episodes,\nhyperparameter searches, predictions, saved datasets and active learning file generations. The classes that handle\nthose files are defined at the <code>meta</code> module.</p>\n\n<p>When a dataset is generated (the features are extracted and cut), it is saved in the <strong>saved_datasets</strong> folder. Every\ntime you create a new task, Project will check the saved dataset records and load pre-computed features if they\nexist. You can always safely clean the datasets to save space with the remove_datasets() function.</p>\n\n<p>Everything else is stored in the <em>results</em> folder. The text training log files go into the <strong>logs</strong> subfolder. Model\ncheckpoints (with <code>'model_state_dict'</code>, <code>'optimizer_state_dict'</code> and <code>'epoch'</code> keys) are saved in the <strong>models</strong>\nsubfolder. The main results of hyperparameter searches (best parameters and best values) are kept in the meta files\nbut they also generate html_docs plots that can be accessed in the <strong>searches</strong> subfolder. Split text files can be found\nin the <strong>splits</strong> subfolder. They are also checked every time you create a task and if a split with the same\nparameters already exists it will be loaded. Active learning files are saved in the <strong>suggestions</strong> subfolder.\nSuggestions for each video are named <em>{video_id}_suggestion.pickle</em> and the active learning file is always\n<em>al_points.pickle</em>. Finally, prediction files (pickled dictionaries) are stored in the <strong>predictions</strong> subfolder.</p>\n"}, "dlc2action.project.meta": {"fullname": "dlc2action.project.meta", "modulename": "dlc2action.project.meta", "kind": "module", "doc": "<p>Handling meta (history) files</p>\n"}, "dlc2action.project.meta.Run": {"fullname": "dlc2action.project.meta.Run", "modulename": "dlc2action.project.meta", "qualname": "Run", "kind": "class", "doc": "<p>A class that manages operations with a single episode record</p>\n"}, "dlc2action.project.meta.Run.__init__": {"fullname": "dlc2action.project.meta.Run.__init__", "modulename": "dlc2action.project.meta", "qualname": "Run.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode\nmeta_path : str, optional\n    the path to the pickled SavedRuns dataframe\nparams : dict, optional\n    alternative to meta_path: pre-loaded pandas Series of episode parameters</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">project_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">meta_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.project.meta.Run.name": {"fullname": "dlc2action.project.meta.Run.name", "modulename": "dlc2action.project.meta", "qualname": "Run.name", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.meta.Run.project_path": {"fullname": "dlc2action.project.meta.Run.project_path", "modulename": "dlc2action.project.meta", "qualname": "Run.project_path", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.meta.Run.training_time": {"fullname": "dlc2action.project.meta.Run.training_time", "modulename": "dlc2action.project.meta", "qualname": "Run.training_time", "kind": "function", "doc": "<p>Get the training time in seconds</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>training_time : int\n    the training time in seconds</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.model_file": {"fullname": "dlc2action.project.meta.Run.model_file", "modulename": "dlc2action.project.meta", "qualname": "Run.model_file", "kind": "function", "doc": "<p>Get a checkpoint file path</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>project_path : str\n    the current project folder path\nload_epoch : int, optional\n    the epoch to load (the closest checkpoint will be chosen; if not given will be set to last)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>checkpoint_path : str\n    the path to the checkpoint</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">load_epoch</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.dataset_name": {"fullname": "dlc2action.project.meta.Run.dataset_name", "modulename": "dlc2action.project.meta", "qualname": "Run.dataset_name", "kind": "function", "doc": "<p>Get the dataset name</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dataset_name : str\n    the name of the dataset record</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.split_file": {"fullname": "dlc2action.project.meta.Run.split_file", "modulename": "dlc2action.project.meta", "qualname": "Run.split_file", "kind": "function", "doc": "<p>Get the split file</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>split_path : str\n    the path to the split file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.log_file": {"fullname": "dlc2action.project.meta.Run.log_file", "modulename": "dlc2action.project.meta", "qualname": "Run.log_file", "kind": "function", "doc": "<p>Get the log file</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>log_path : str\n    the path to the log file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.split_info": {"fullname": "dlc2action.project.meta.Run.split_info", "modulename": "dlc2action.project.meta", "qualname": "Run.split_info", "kind": "function", "doc": "<p>Get the train/test/val split information</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>split_info : dict\n    a dictionary with [val_frac, test_frac, partition_method] keys and corresponding values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.same_split_info": {"fullname": "dlc2action.project.meta.Run.same_split_info", "modulename": "dlc2action.project.meta", "qualname": "Run.same_split_info", "kind": "function", "doc": "<p>Check whether this episode has the same split information</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>split_info : dict\n    a dictionary with [val_frac, test_frac, partition_method] keys and corresponding values from another episode</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>result : bool\n    if True, this episode has the same split information</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">split_info</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.get_metrics": {"fullname": "dlc2action.project.meta.Run.get_metrics", "modulename": "dlc2action.project.meta", "qualname": "Run.get_metrics", "kind": "function", "doc": "<p>Get a list of metric names in the episode log</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>metrics : List\n    a list of string metric names</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.get_metric_log": {"fullname": "dlc2action.project.meta.Run.get_metric_log", "modulename": "dlc2action.project.meta", "qualname": "Run.get_metric_log", "kind": "function", "doc": "<p>Get the metric log</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>mode : {'train', 'val'}\n    the mode to get the log from\nmetric_name : str\n    the metric to get the log for (has to be one of the metric computed for this episode during training)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>log : np.ndarray\n    the log of metric values (empty if the metric was not computed during training)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">metric_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.get_epoch_list": {"fullname": "dlc2action.project.meta.Run.get_epoch_list", "modulename": "dlc2action.project.meta", "qualname": "Run.get_epoch_list", "kind": "function", "doc": "<p>Get a list of epoch indices</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>epoch_list : list\n    a list of int epoch indices</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mode</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.unfinished": {"fullname": "dlc2action.project.meta.Run.unfinished", "modulename": "dlc2action.project.meta", "qualname": "Run.unfinished", "kind": "function", "doc": "<p>Check whether this episode was interrupted</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>result : bool\n    True if the number of epochs in the log file is smaller than in the parameters</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.get_class_ind": {"fullname": "dlc2action.project.meta.Run.get_class_ind", "modulename": "dlc2action.project.meta", "qualname": "Run.get_class_ind", "kind": "function", "doc": "<p>Get the integer label from a class name</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>class_name : str\n    the name of the class</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>class_ind : int\n    the integer label</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">class_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.get_behaviors_dict": {"fullname": "dlc2action.project.meta.Run.get_behaviors_dict", "modulename": "dlc2action.project.meta", "qualname": "Run.get_behaviors_dict", "kind": "function", "doc": "<p>Get behaviors dictionary in the episode</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>behaviors_dict : dict\n    a dictionary with class indices as keys and labels as values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Run.get_num_classes": {"fullname": "dlc2action.project.meta.Run.get_num_classes", "modulename": "dlc2action.project.meta", "qualname": "Run.get_num_classes", "kind": "function", "doc": "<p>Get number of classes in episode</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>num_classes : int\n    the number of classes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.DecisionThresholds": {"fullname": "dlc2action.project.meta.DecisionThresholds", "modulename": "dlc2action.project.meta", "qualname": "DecisionThresholds", "kind": "class", "doc": "<p>A class that saves and looks up tuned decision thresholds</p>\n"}, "dlc2action.project.meta.DecisionThresholds.__init__": {"fullname": "dlc2action.project.meta.DecisionThresholds.__init__", "modulename": "dlc2action.project.meta", "qualname": "DecisionThresholds.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>path : str\n    the path to the pickled SavedRuns dataframe</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "dlc2action.project.meta.DecisionThresholds.path": {"fullname": "dlc2action.project.meta.DecisionThresholds.path", "modulename": "dlc2action.project.meta", "qualname": "DecisionThresholds.path", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.meta.DecisionThresholds.data": {"fullname": "dlc2action.project.meta.DecisionThresholds.data", "modulename": "dlc2action.project.meta", "qualname": "DecisionThresholds.data", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"fullname": "dlc2action.project.meta.DecisionThresholds.save_thresholds", "modulename": "dlc2action.project.meta", "qualname": "DecisionThresholds.save_thresholds", "kind": "function", "doc": "<p>Add a new record</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode\nepoch : int\n    the epoch index\nmetric_name : str\n    the name of the metric the thresholds were tuned on\nmetric_parameters : dict\n    the metric parameter dictionary\nthresholds : list\n    a list of float decision thresholds</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">epochs</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">metric_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">metric_parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">thresholds</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"fullname": "dlc2action.project.meta.DecisionThresholds.find_thresholds", "modulename": "dlc2action.project.meta", "qualname": "DecisionThresholds.find_thresholds", "kind": "function", "doc": "<p>Find a record</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode\nepoch : int\n    the epoch index\nmetric_name : str\n    the name of the metric the thresholds were tuned on\nmetric_parameters : dict\n    the metric parameter dictionary</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>thresholds : list\n    a list of float decision thresholds</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">epochs</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">metric_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">metric_parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns": {"fullname": "dlc2action.project.meta.SavedRuns", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns", "kind": "class", "doc": "<p>A class that manages operations with all episode (or prediction) records</p>\n"}, "dlc2action.project.meta.SavedRuns.__init__": {"fullname": "dlc2action.project.meta.SavedRuns.__init__", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>path : str\n    the path to the pickled SavedRuns dataframe</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">project_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "dlc2action.project.meta.SavedRuns.path": {"fullname": "dlc2action.project.meta.SavedRuns.path", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.path", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.meta.SavedRuns.project_path": {"fullname": "dlc2action.project.meta.SavedRuns.project_path", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.project_path", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.meta.SavedRuns.data": {"fullname": "dlc2action.project.meta.SavedRuns.data", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.data", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.meta.SavedRuns.update": {"fullname": "dlc2action.project.meta.SavedRuns.update", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.update", "kind": "function", "doc": "<p>Update with new data</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data : pd.DataFrame\n    the new dataframe\ndata_path : str\n    the new data path\nannotation_path : str\n    the new annotation path\nname_map : dict, optional\n    the name change dictionary; keys are old episode names and values are new episode names\nforce : bool, default False\n    replace existing episodes if <code>True</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name_map</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.get_subset": {"fullname": "dlc2action.project.meta.SavedRuns.get_subset", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.get_subset", "kind": "function", "doc": "<p>Get a subset of the raw metadata</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_names : list\n    a list of the episodes to include</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"fullname": "dlc2action.project.meta.SavedRuns.get_saved_data_path", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.get_saved_data_path", "kind": "function", "doc": "<p>Get the <code>saved_data_path</code> parameter for the episode</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>saved_data_path : str\n    the saved data path</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"fullname": "dlc2action.project.meta.SavedRuns.check_name_validity", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.check_name_validity", "kind": "function", "doc": "<p>Check if an episode name already exists</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name to check</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>result : bool\n    True if the name can be used</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"fullname": "dlc2action.project.meta.SavedRuns.update_episode_metrics", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.update_episode_metrics", "kind": "function", "doc": "<p>Update meta data with evaluation results</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode to update\nmetrics : dict\n    a dictionary of the metrics</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.save_episode": {"fullname": "dlc2action.project.meta.SavedRuns.save_episode", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.save_episode", "kind": "function", "doc": "<p>Save a new run record</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode\nparameters : dict\n    the parameters to save\nbehaviors_dict : dict\n    the dictionary of behaviors (keys are indices, values are names)\nsuppress_validation : bool, optional False\n    if True, existing episode with the same name will be overwritten\ntraining_time : str, optional\n    the training time in '%H:%M:%S' format</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">behaviors_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">suppress_validation</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">training_time</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.load_parameters": {"fullname": "dlc2action.project.meta.SavedRuns.load_parameters", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.load_parameters", "kind": "function", "doc": "<p>Load the task parameters from a record</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode to load</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>parameters : dict\n    the loaded task parameters</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"fullname": "dlc2action.project.meta.SavedRuns.get_active_datasets", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.get_active_datasets", "kind": "function", "doc": "<p>Get a list of names of datasets that are used by unfinished episodes</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>active_datasets : list\n    a list of dataset names used by unfinished episodes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.list_episodes": {"fullname": "dlc2action.project.meta.SavedRuns.list_episodes", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.list_episodes", "kind": "function", "doc": "<p>Get a filtered pandas dataframe with episode metadata</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_names : List\n    a list of strings of episode names\nvalue_filter : str\n    a string of filters to apply of this general structure:\n    'group_name1/par_name1::(&lt;&gt;=)value1,group_name2/par_name2::(&lt;&gt;=)value2', e.g.\n    'data/overlap::=50,results/recall::&gt;0.5,data/feature_extraction::=kinematic'\ndisplay_parameters : List\n    list of parameters to display (e.g. ['data/overlap', 'results/recall'])</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>pandas.DataFrame\n    the filtered dataframe</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value_filter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">display_parameters</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.rename_episode": {"fullname": "dlc2action.project.meta.SavedRuns.rename_episode", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.rename_episode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span>, </span><span class=\"param\"><span class=\"n\">new_episode_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.remove_episode": {"fullname": "dlc2action.project.meta.SavedRuns.remove_episode", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.remove_episode", "kind": "function", "doc": "<p>Remove all model, logs and metafile records related to an episode</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode to remove</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"fullname": "dlc2action.project.meta.SavedRuns.unfinished_episodes", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.unfinished_episodes", "kind": "function", "doc": "<p>Get a list of unfinished episodes (currently running or interrupted)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>interrupted_episodes: List\n    a list of string names of unfinished episodes in the records</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"fullname": "dlc2action.project.meta.SavedRuns.update_episode_results", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.update_episode_results", "kind": "function", "doc": "<p>Add results to an episode record</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode to update\nlogs : dict\n    a log dictionary from task.train()\ntraining_time : str\n    the training time</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">logs</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span>, </span><span class=\"param\"><span class=\"n\">training_time</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedRuns.get_runs": {"fullname": "dlc2action.project.meta.SavedRuns.get_runs", "modulename": "dlc2action.project.meta", "qualname": "SavedRuns.get_runs", "kind": "function", "doc": "<p>Get a list of runs with this episode name (episodes like <code>episode_name#0</code>)</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>runs_list : List\n    a list of string run names</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Searches": {"fullname": "dlc2action.project.meta.Searches", "modulename": "dlc2action.project.meta", "qualname": "Searches", "kind": "class", "doc": "<p>A class that manages operations with search records</p>\n", "bases": "SavedRuns"}, "dlc2action.project.meta.Searches.save_search": {"fullname": "dlc2action.project.meta.Searches.save_search", "modulename": "dlc2action.project.meta", "qualname": "Searches.save_search", "kind": "function", "doc": "<p>Save a new search record</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>search_name : str\n    the name of the search to save\nparameters : dict\n    the task parameters to save\nn_trials : int\n    the number of trials in the search\nbest_params : dict\n    the best parameters dictionary\nbest_value : float\n    the best valie\nmetric : str\n    the name of the objective metric\nsearch_space : dict\n    a dictionary representing the search space; of this general structure:\n    {'group/param_name': ('float/int/float_log/int_log', start, end),\n    'group/param_name': ('categorical', [choices])}, e.g.\n    {'data/overlap': ('int', 5, 100), 'training/lr': ('float_log', 1e-4, 1e-2),\n    'data/feature_extraction': ('categorical', ['kinematic', 'bones'])}</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">search_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">n_trials</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">best_params</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">best_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">search_space</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Searches.get_best_params_raw": {"fullname": "dlc2action.project.meta.Searches.get_best_params_raw", "modulename": "dlc2action.project.meta", "qualname": "Searches.get_best_params_raw", "kind": "function", "doc": "<p>Get the raw dictionary of best parameters found by a search</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>search_name : str\n    the name of the search</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>best_params : dict\n    a dictionary of the best parameters where the keys are in '{group}/{name}' format</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">search_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Searches.get_best_params": {"fullname": "dlc2action.project.meta.Searches.get_best_params", "modulename": "dlc2action.project.meta", "qualname": "Searches.get_best_params", "kind": "function", "doc": "<p>Get the best parameters from a search</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>search_name : str\n    the name of the search\nload_parameters : List, optional\n    a list of string names of the parameters to load (if not provided all parameters are loaded)\nround_to_binary : List, optional\n    a list of string names of the loaded parameters that should be rounded to the nearest power of two</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>best_params : dict\n    a dictionary of the best parameters</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">search_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">load_parameters</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">round_to_binary</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.Suggestions": {"fullname": "dlc2action.project.meta.Suggestions", "modulename": "dlc2action.project.meta", "qualname": "Suggestions", "kind": "class", "doc": "<p>A class that manages operations with all episode (or prediction) records</p>\n", "bases": "SavedRuns"}, "dlc2action.project.meta.Suggestions.save_suggestion": {"fullname": "dlc2action.project.meta.Suggestions.save_suggestion", "modulename": "dlc2action.project.meta", "qualname": "Suggestions.save_suggestion", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>, </span><span class=\"param\"><span class=\"n\">meta_parameters</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedStores": {"fullname": "dlc2action.project.meta.SavedStores", "modulename": "dlc2action.project.meta", "qualname": "SavedStores", "kind": "class", "doc": "<p>A class that manages operation with saved dataset records</p>\n"}, "dlc2action.project.meta.SavedStores.__init__": {"fullname": "dlc2action.project.meta.SavedStores.__init__", "modulename": "dlc2action.project.meta", "qualname": "SavedStores.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>path : str\n    the path to the pickled SavedRuns dataframe</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span></span>)</span>"}, "dlc2action.project.meta.SavedStores.path": {"fullname": "dlc2action.project.meta.SavedStores.path", "modulename": "dlc2action.project.meta", "qualname": "SavedStores.path", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.meta.SavedStores.data": {"fullname": "dlc2action.project.meta.SavedStores.data", "modulename": "dlc2action.project.meta", "qualname": "SavedStores.data", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.meta.SavedStores.skip_keys": {"fullname": "dlc2action.project.meta.SavedStores.skip_keys", "modulename": "dlc2action.project.meta", "qualname": "SavedStores.skip_keys", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.meta.SavedStores.clear": {"fullname": "dlc2action.project.meta.SavedStores.clear", "modulename": "dlc2action.project.meta", "qualname": "SavedStores.clear", "kind": "function", "doc": "<p>Remove all datasets</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedStores.dataset_names": {"fullname": "dlc2action.project.meta.SavedStores.dataset_names", "modulename": "dlc2action.project.meta", "qualname": "SavedStores.dataset_names", "kind": "function", "doc": "<p>Get a list of dataset names</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dataset_names : List\n    a list of string dataset names</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedStores.remove": {"fullname": "dlc2action.project.meta.SavedStores.remove", "modulename": "dlc2action.project.meta", "qualname": "SavedStores.remove", "kind": "function", "doc": "<p>Remove some datasets</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>names : List\n    a list of string names of the datasets to delete</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">names</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedStores.remove_dataset": {"fullname": "dlc2action.project.meta.SavedStores.remove_dataset", "modulename": "dlc2action.project.meta", "qualname": "SavedStores.remove_dataset", "kind": "function", "doc": "<p>Remove a dataset record</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataset_name : str\n    the name of the dataset to remove</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dataset_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedStores.find_name": {"fullname": "dlc2action.project.meta.SavedStores.find_name", "modulename": "dlc2action.project.meta", "qualname": "SavedStores.find_name", "kind": "function", "doc": "<p>Find a record that satisfies the parameters (if it exists)</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>parameters : dict\n    a dictionary of data parameters</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>name : str\n    the name of a record that has the same parameters (None if it does not exist; the earliest if there are\n    several)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedStores.save_store": {"fullname": "dlc2action.project.meta.SavedStores.save_store", "modulename": "dlc2action.project.meta", "qualname": "SavedStores.save_store", "kind": "function", "doc": "<p>Save a new saved dataset record</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the dataset\nparameters : dict\n    a dictionary of data parameters</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.meta.SavedStores.check_name_validity": {"fullname": "dlc2action.project.meta.SavedStores.check_name_validity", "modulename": "dlc2action.project.meta", "qualname": "SavedStores.check_name_validity", "kind": "function", "doc": "<p>Check if a store name already exists</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name to check</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>result : bool\n    True if the name can be used</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">store_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project": {"fullname": "dlc2action.project.project", "modulename": "dlc2action.project.project", "kind": "module", "doc": "<p>Project interface</p>\n"}, "dlc2action.project.project.Project": {"fullname": "dlc2action.project.project.Project", "modulename": "dlc2action.project.project", "qualname": "Project", "kind": "class", "doc": "<p>A class to create and maintain the project files + keep track of experiments</p>\n"}, "dlc2action.project.project.Project.__init__": {"fullname": "dlc2action.project.project.Project.__init__", "modulename": "dlc2action.project.project", "qualname": "Project.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    name of the project\ndata_type : str, optional\n    data type (run Project.data_types() to see available options; has to be provided if the project is being\n    created)\nannotation_type : str, default 'none'\n    annotation type (run Project.annotation_types() to see available options)\nprojects_path : str, optional\n    path to the projects folder (is filled with ~/DLC2Action by default)\ndata_path : str, optional\n    path to the folder containing input files for the project (has to be provided if the project is being\n    created)\nannotation_path : str, optional\n    path to the folder containing annotation files for the project\ncopy : bool, default False\n    if True, the files from annotation_path and data_path will be copied to the projects folder;\n    otherwise they will be moved</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">data_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;none&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">projects_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">copy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "dlc2action.project.project.Project.project_path": {"fullname": "dlc2action.project.project.Project.project_path", "modulename": "dlc2action.project.project", "qualname": "Project.project_path", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.project.Project.name": {"fullname": "dlc2action.project.project.Project.name", "modulename": "dlc2action.project.project", "qualname": "Project.name", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.project.Project.data_type": {"fullname": "dlc2action.project.project.Project.data_type", "modulename": "dlc2action.project.project", "qualname": "Project.data_type", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.project.Project.annotation_type": {"fullname": "dlc2action.project.project.Project.annotation_type", "modulename": "dlc2action.project.project", "qualname": "Project.annotation_type", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.project.Project.data_path": {"fullname": "dlc2action.project.project.Project.data_path", "modulename": "dlc2action.project.project", "qualname": "Project.data_path", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.project.Project.annotation_path": {"fullname": "dlc2action.project.project.Project.annotation_path", "modulename": "dlc2action.project.project", "qualname": "Project.annotation_path", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.project.project.Project.run_episode": {"fullname": "dlc2action.project.project.Project.run_episode", "modulename": "dlc2action.project.project", "qualname": "Project.run_episode", "kind": "function", "doc": "<p>Run an episode</p>\n\n<p>The task parameters are read from the config files and then updated with the\nparameters_update dictionary. The model can be either initialized from scratch or loaded from one of the\nprevious experiments. All parameters and results are saved in the meta files and can be accessed with the\nlist_episodes() function. The train/test/validation split is saved and loaded from a file whenever the\nsame split parameters are used. The pre-computed datasets are also saved and loaded whenever the same\ndata parameters are used.</p>\n\n<p>You can use the autostop parameters to finish training when the parameters are not improving. It will be\nstopped if the average value of <code>autostop_metric</code> over the last <code>autostop_interval</code> epochs is smaller than\nthe average over the previous <code>autostop_interval</code> epochs + <code>autostop_threshold</code>. For example, if the\ncurrent epoch is 120 and <code>autostop_interval</code> is 50, the averages over epochs 70-120 and 20-70 will be compared.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the episode name\nload_episode : str, optional\n    the (previously run) episode name to load the model from; if the episode has multiple runs,\n    the new episode will have the same number of runs, each starting with one of the pre-trained models\nparameters_update : dict, optional\n    the dictionary used to update the parameters from the config files\ntask : TaskDispatcher, optional\n    a pre-existing <code>TaskDispatcher</code> object (if provided, the method will update it instead of creating\n    a new instance)\nload_epoch : int, optional\n    the epoch to load (if load_episodes is not None); if not provided, the last epoch is used\nload_search : str, optional\n    the hyperparameter search result to load\nload_parameters : list, optional\n    a list of string names of the parameters to load from load_search (if not provided, all parameters\n    are loaded)\nround_to_binary : list, optional\n    a list of string names of the loaded parameters that should be rounded to the nearest power of two\nload_strict : bool, default True\n    if <code>False</code>, matching weights will be loaded from <code>load_episode</code> and differences in parameter name lists and\n    weight shapes will be ignored; otherwise mismatches will prompt a <code>RuntimeError</code>\nn_seeds : int, default 1\n    the number of runs to perform with different random seeds; if <code>n_seeds &gt; 1</code>, the episodes will be named\n    <code>episode_name#seed_index</code>, e.g. <code>test_episode#0</code> and <code>test_episode#1</code>\nforce : bool, default False\n    if <code>True</code> and an episode with name <code>episode_name</code> already exists, it will be overwritten (use with caution!)\nsuppress_name_check : bool, default False\n    if <code>True</code>, episode names with a double colon are allowed (please don't use this option unless you understand\n    why they are usually forbidden)\nremove_saved_features : bool, default False\n    if <code>True</code>, the dataset will be deleted after training\nmask_name : str, optional\n    the name of the real_lens to apply\nautostop_interval : int, default 50\n    the number of epochs to average the autostop metric over\nautostop_threshold : float, default 0.001\n    the autostop difference threshold\nautostop_metric : str, optional\n    the autostop metric (can be any one of the tracked metrics of <code>'loss'</code>)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">load_episode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters_update</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">task_dispatcher</span><span class=\"o\">.</span><span class=\"n\">TaskDispatcher</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_epoch</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_search</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_parameters</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">round_to_binary</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">n_seeds</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">suppress_name_check</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">remove_saved_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">mask_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">autostop_metric</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">autostop_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>,</span><span class=\"param\">\t<span class=\"n\">autostop_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">loading_bar</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">task_dispatcher</span><span class=\"o\">.</span><span class=\"n\">TaskDispatcher</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.run_episodes": {"fullname": "dlc2action.project.project.Project.run_episodes", "modulename": "dlc2action.project.project", "qualname": "Project.run_episodes", "kind": "function", "doc": "<p>Run multiple episodes in sequence (and re-use previously loaded information)</p>\n\n<p>For each episode, the task parameters are read from the config files and then updated with the\nparameter_update dictionary. The model can be either initialized from scratch or loaded from one of the\nprevious experiments. All parameters and results are saved in the meta files and can be accessed with the\nlist_episodes() function. The train/test/validation split is saved and loaded from a file whenever the\nsame split parameters are used. The pre-computed datasets are also saved and loaded whenever the same\ndata parameters are used.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_names : list\n    a list of strings of episode names\nload_episodes : list, optional\n    a list of strings of (previously run) episode names to load the model from; if the episode has multiple runs,\n    the new episode will have the same number of runs, each starting with one of the pre-trained models\nparameters_updates : list, optional\n    a list of dictionaries used to update the parameters from the config\nload_epochs : list, optional\n    a list of integers used to specify the epoch to load (if load_episodes is not None)\nload_searches : list, optional\n    a list of strings of hyperparameter search results to load\nload_parameters : list, optional\n    a list of lists of string names of the parameters to load from the searches\nround_to_binary : list, optional\n    a list of string names of the loaded parameters that should be rounded to the nearest power of two\nload_strict : list, optional\n    a list of boolean values specifying weight loading policy: if <code>False</code>, matching weights will be loaded from\n    the corresponding episode and differences in parameter name lists and\n    weight shapes will be ignored; otherwise mismatches will prompt a <code>RuntimeError</code> (by default <code>True</code> for\n    every episode)\nforce : bool, default False\n    if <code>True</code> and an episode name is already taken, it will be overwritten (use with caution!)\nsuppress_name_check : bool, default False\n    if <code>True</code>, episode names with a double colon are allowed (please don't use this option unless you understand\n    why they are usually forbidden)\nremove_saved_features : bool, default False\n    if <code>True</code>, the dataset will be deleted after training</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">load_episodes</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters_updates</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_epochs</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_searches</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_parameters</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">round_to_binary</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_strict</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">suppress_name_check</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">remove_saved_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">task_dispatcher</span><span class=\"o\">.</span><span class=\"n\">TaskDispatcher</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.continue_episode": {"fullname": "dlc2action.project.project.Project.continue_episode", "modulename": "dlc2action.project.project", "qualname": "Project.continue_episode", "kind": "function", "doc": "<p>Load an older episode and continue running from the latest checkpoint</p>\n\n<p>All parameters as well as the model and optimizer state dictionaries are loaded from the episode.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode to continue\nnum_epochs : int, optional\n    the new number of epochs\ntask : TaskDispatcher, optional\n    a pre-existing task; if provided, the method will update the task instead of creating a new one\n    (this might save time, mainly on dataset loading)\nresult_average_interval : int, default 5\n    the metric are averaged over the last result_average_interval to be stored in the episodes meta file\n    and displayed by list_episodes() function (the full log is still always available)\nn_seeds : int, default 1\n    the number of runs to perform; if <code>n_seeds &gt; 1</code>, the episodes will be named <code>episode_name#run_index</code>, e.g.\n    <code>test_episode#0</code> and <code>test_episode#1</code>\nremove_saved_features : bool, default False\n    if <code>True</code>, pre-computed features will be deleted after the run\ndevice : str, default \"cuda\"\n    the torch device to use</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">num_epochs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">task_dispatcher</span><span class=\"o\">.</span><span class=\"n\">TaskDispatcher</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_seeds</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">remove_saved_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cuda&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">num_cpus</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">task_dispatcher</span><span class=\"o\">.</span><span class=\"n\">TaskDispatcher</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"fullname": "dlc2action.project.project.Project.run_default_hyperparameter_search", "modulename": "dlc2action.project.project", "qualname": "Project.run_default_hyperparameter_search", "kind": "function", "doc": "<p>Run an optuna hyperparameter search with default parameters for a model</p>\n\n<p>For the vast majority of cases, optimizing the default parameters should be enough.\nCheck out <code>dlc2action.options.model_hyperparameters</code> for the lists of parameters.\nThere are also options to set overlap, test fraction and number of epochs parameters for the search without\nmodifying the project config files. However, if you want something more complex, look into\n<code>Project.run_hyperparameter_search</code>.</p>\n\n<p>The task parameters are read from the config files and updated with the parameters_update dictionary.\nThe model can be either initialized from scratch or loaded from a previously run episode.\nFor each trial, the objective metric is averaged over a few best epochs.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>search_name : str\n    the name of the search to store it in the meta files and load in run_episode\nmodel_name : str, optional\n    the name of the model (by default loaded from the project settings, see <code>project.help('models')</code> for options)\nmetric : str, default f1\n    the metric to maximize/minimize (see direction); if the metric has an <code>\"average\"</code> parameter and it is set to\n    <code>\"none\"</code> in the config files, it will be reset to <code>\"macro\"</code> for the search; see <code>project.help('metrics')</code> for options\nn_trials : int, default 20\n    the number of optimization trials to run\nbest_n : int, default 1\n    the number of epochs to average the metric; if 0, the last value is taken\nparameters_update : dict, optional\n    the parameters update dictionary\ndirection : {'maximize', 'minimize'}\n    optimization direction\nload_episode : str, optional\n    the name of the episode to load the model from\nload_epoch : int, optional\n    the epoch to load the model from (if not provided, the last checkpoint is used)\nprune : bool, default False\n    if <code>True</code>, experiments where the optimized metric is improving too slowly will be terminated\n    (with optuna HyperBand pruner)\nforce : bool, default False\n    if <code>True</code>, existing searches with the same name will be overwritten\nremove_saved_features : bool, default False\n    if <code>True</code>, pre-computed features will be deleted after each run (if the data parameters change)\ndevice : str, optional\n    cuda:{i} or cpu, if not given it is read from the default parameters</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dict\n    a dictionary of best parameters</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">search_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;f1&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">best_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;maximize&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">load_episode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_epoch</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prune</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">remove_saved_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_epochs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>,</span><span class=\"param\">\t<span class=\"n\">test_frac</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">n_trials</span><span class=\"o\">=</span><span class=\"mi\">150</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.run_hyperparameter_search": {"fullname": "dlc2action.project.project.Project.run_hyperparameter_search", "modulename": "dlc2action.project.project", "qualname": "Project.run_hyperparameter_search", "kind": "function", "doc": "<p>Run an optuna hyperparameter search</p>\n\n<p>For a simpler function that fits most use cases, check out <code>Project.run_default_hyperparameter_search()</code>.</p>\n\n<p>To use a default search space with this method, import <code>dlc2action.options.model_hyperparameters</code>. It is\na dictionary where keys are model names and values are default search spaces.</p>\n\n<p>The task parameters are read from the config files and updated with the parameters_update dictionary.\nThe model can be either initialized from scratch or loaded from a previously run episode.\nFor each trial, the objective metric is averaged over a few best epochs.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>search_name : str\n    the name of the search to store it in the meta files and load in run_episode\nsearch_space : dict\n    a dictionary representing the search space; of this general structure:\n    {'group/param_name': ('float/int/float_log/int_log', start, end),\n    'group/param_name': ('categorical', [choices])}, e.g.\n    {'data/overlap': ('int', 5, 100), 'training/lr': ('float_log', 1e-4, 1e-2),\n    'data/feature_extraction': ('categorical', ['kinematic', 'bones'])};\nmetric : str, default f1\n    the metric to maximize/minimize (see direction)\nn_trials : int, default 20\n    the number of optimization trials to run\nbest_n : int, default 1\n    the number of epochs to average the metric; if 0, the last value is taken\nparameters_update : dict, optional\n    the parameters update dictionary\ndirection : {'maximize', 'minimize'}\n    optimization direction\nload_episode : str, optional\n    the name of the episode to load the model from\nload_epoch : int, optional\n    the epoch to load the model from (if not provided, the last checkpoint is used)\nprune : bool, default False\n    if <code>True</code>, experiments where the optimized metric is improving too slowly will be terminated\n    (with optuna HyperBand pruner)\nforce : bool, default False\n    if <code>True</code>, existing searches with the same name will be overwritten\nremove_saved_features : bool, default False\n    if <code>True</code>, pre-computed features will be deleted after each run (if the data parameters change)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dict\n    a dictionary of best parameters</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">search_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">search_space</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;f1&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">n_trials</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">best_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">parameters_update</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;maximize&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">load_episode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_epoch</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prune</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">remove_saved_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.run_prediction": {"fullname": "dlc2action.project.project.Project.run_prediction", "modulename": "dlc2action.project.project", "qualname": "Project.run_prediction", "kind": "function", "doc": "<p>Load models from previously run episodes to generate a prediction</p>\n\n<p>The probabilities predicted by the models are averaged.\nUnless <code>submission</code> is <code>True</code>, the prediction results are saved as a pickled dictionary in the project_name/results/predictions folder\nunder the {episode_name}_{load_epoch}.pickle name. The file is a nested dictionary where the first-level\nkeys are the video ids, the second-level keys are the clip ids (like individual names) and the values\nare the prediction arrays.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>prediction_name : str\n    the name of the prediction\nepisode_names : list\n    a list of string episode names to load the models from\nload_epochs : list, optional\n    a list of integer epoch indices to load the model from; if None, the last ones are used\nparameters_update : dict, optional\n    a dictionary of parameter updates\naugment_n : int, default 10\n    the number of augmentations to average over\ndata_path : str, optional\n    the data path to run the prediction for\nmode : {'all', 'test', 'val', 'train'}\n    the subset of the data to make the prediction for (forced to 'all' if data_path is not None)\nfile_paths : set, optional\n    a set of string file paths (data with all prefixes + feature files, in any order) to run the prediction\n    for\nremove_saved_features : bool, default False\n    if <code>True</code>, pre-computed features will be deleted\nsubmission : bool, default False\n    if <code>True</code>, a MABe-22 style submission file is generated\nframe_number_map_file : str, optional\n    path to the frame number map file\nforce : bool, default False\n    if <code>True</code>, existing prediction with this name will be overwritten</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">prediction_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">load_epochs</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters_update</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;all&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">remove_saved_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">submission</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">frame_number_map_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">embedding</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.evaluate_prediction": {"fullname": "dlc2action.project.project.Project.evaluate_prediction", "modulename": "dlc2action.project.project", "qualname": "Project.evaluate_prediction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">prediction_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">parameters_update</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">remove_saved_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.evaluate": {"fullname": "dlc2action.project.project.Project.evaluate", "modulename": "dlc2action.project.project", "qualname": "Project.evaluate", "kind": "function", "doc": "<p>Load one or several models from previously run episodes to make an evaluation</p>\n\n<p>By default it will run on the test (or validation, if there is no test) subset of the project dataset.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_names : list\n    a list of string episode names to load the models from\nload_epochs : list, optional\n    a list of integer epoch indices to load the model from; if None, the last ones are used\naugment_n : int, default 0\n    the number of augmentations to average over\ndata_path : str, optional\n    the data path to run the prediction for\nfile_paths : set, optional\n    a set of files to run the prediction for\nmode : {'test', 'val', 'train', 'all'}\n    the subset of the data to make the prediction for (forced to 'all' if data_path is not None;\n    by default 'test' if test subset is not empty and 'val' otherwise)\nparameters_update : dict, optional\n    a dictionary with parameter updates (cannot change model parameters)\nremove_saved_features : bool, default False\n    if <code>True</code>, the dataset will be deleted</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>metric : dict\n    a dictionary of average values of metric functions</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">load_epochs</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters_update</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">multiple_episode_policy</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;average&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">remove_saved_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">skip_updating_meta</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.list_episodes": {"fullname": "dlc2action.project.project.Project.list_episodes", "modulename": "dlc2action.project.project", "qualname": "Project.list_episodes", "kind": "function", "doc": "<p>Get a filtered pandas dataframe with episode metadata</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_names : list\n    a list of strings of episode names\nvalue_filter : str\n    a string of filters to apply; of this general structure:\n    'group_name1/par_name1::(</>/&lt;=/>=/=)value1,group_name2/par_name2::(</>/&lt;=/>=/=)value2', e.g.\n    'data/overlap::=50,results/recall::&gt;0.5,data/feature_extraction::=kinematic,meta/training_time::&gt;=00:00:10'\ndisplay_parameters : list\n    list of parameters to display (e.g. ['data/overlap', 'results/recall'])\nprint_results : bool, default True\n    if True, the result will be printed to standard output</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>pd.DataFrame\n    the filtered dataframe</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value_filter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">display_parameters</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">print_results</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.list_predictions": {"fullname": "dlc2action.project.project.Project.list_predictions", "modulename": "dlc2action.project.project", "qualname": "Project.list_predictions", "kind": "function", "doc": "<p>Get a filtered pandas dataframe with prediction metadata</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_names : list\n    a list of strings of episode names\nvalue_filter : str\n    a string of filters to apply; of this general structure:\n    'group_name1/par_name1:(&lt;&gt;=)value1,group_name2/par_name2:(&lt;&gt;=)value2', e.g.\n    'data/overlap:=50,results/recall:&gt;0.5,data/feature_extraction:=kinematic'\ndisplay_parameters : list\n    list of parameters to display (e.g. ['data/overlap', 'results/recall'])\nprint_results : bool, default True\n    if True, the result will be printed to standard output</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>pd.DataFrame\n    the filtered dataframe</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value_filter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">display_parameters</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">print_results</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.list_searches": {"fullname": "dlc2action.project.project.Project.list_searches", "modulename": "dlc2action.project.project", "qualname": "Project.list_searches", "kind": "function", "doc": "<p>Get a filtered pandas dataframe with hyperparameter search metadata</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>search_names : list\n    a list of strings of search names\nvalue_filter : str\n    a string of filters to apply; of this general structure:\n    'group_name1/par_name1:(&lt;&gt;=)value1,group_name2/par_name2:(&lt;&gt;=)value2', e.g.\n    'data/overlap:=50,results/recall:&gt;0.5,data/feature_extraction:=kinematic'\ndisplay_parameters : list\n    list of parameters to display (e.g. ['data/overlap', 'results/recall'])\nprint_results : bool, default True\n    if True, the result will be printed to standard output</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>pd.DataFrame\n    the filtered dataframe</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">search_names</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value_filter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">display_parameters</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">print_results</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.get_best_parameters": {"fullname": "dlc2action.project.project.Project.get_best_parameters", "modulename": "dlc2action.project.project", "qualname": "Project.get_best_parameters", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">search_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">round_to_binary</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.list_best_parameters": {"fullname": "dlc2action.project.project.Project.list_best_parameters", "modulename": "dlc2action.project.project", "qualname": "Project.list_best_parameters", "kind": "function", "doc": "<p>Get the raw dictionary of best parameters found by a search</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>search_name : str\n    the name of the search\nprint_results : bool, default True\n    if True, the result will be printed to standard output</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>best_params : dict\n    a dictionary of the best parameters where the keys are in '{group}/{name}' format</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">search_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">print_results</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.plot_episodes": {"fullname": "dlc2action.project.project.Project.plot_episodes", "modulename": "dlc2action.project.project", "qualname": "Project.plot_episodes", "kind": "function", "doc": "<p>Plot episode training curves</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_names : list\n    a list of episode names to plot; to plot to episodes in one line combine them in a list\n    (e.g. ['episode1', ['episode2', 'episode3']] to plot episode2 and episode3 as one experiment)\nmetrics : list\n    a list of metric to plot\nmodes : list, optional\n    a list of modes to plot ('train' and/or 'val'; <code>['val']</code> by default)\ntitle : str, optional\n    title for the plot\nepisode_labels : list, optional\n    a list of strings used to label the curves (has to be the same length as episode_names)\nsave_path : str, optional\n    the path to save the resulting plot\nadd_hlines : list, optional\n    a list of float values (or (value, label) tuples) to mark with horizontal lines\ncolors: list, optional\n    a list of matplotlib colors\nadd_highpoint_hlines : bool, default False\n    if <code>True</code>, horizontal lines will be added at the highest value of each episode</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">modes</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">episode_labels</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">add_hlines</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">epoch_limits</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">colors</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">add_highpoint_hlines</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.update_parameters": {"fullname": "dlc2action.project.project.Project.update_parameters", "modulename": "dlc2action.project.project", "qualname": "Project.update_parameters", "kind": "function", "doc": "<p>Update the parameters in the project config files</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>parameters_update : dict, optional\n    a dictionary of parameter updates\nload_search : str, optional\n    the name of hyperparameter search results to load to config\nload_parameters : list, optional\n    a list of lists of string names of the parameters to load from the searches\nround_to_binary : list, optional\n    a list of string names of the loaded parameters that should be rounded to the nearest power of two</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">parameters_update</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_search</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">load_parameters</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">round_to_binary</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.get_summary": {"fullname": "dlc2action.project.project.Project.get_summary", "modulename": "dlc2action.project.project", "qualname": "Project.get_summary", "kind": "function", "doc": "<p>Get a summary of episode statistics</p>\n\n<p>If the episode has multiple runs, the statistics will be aggregated over all of them.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode\nmethod : [\"best\", \"last\"]\n    the method for choosing the epochs\naverage : int, default 1\n    the number of epochs to average over (for each run)\nmetrics : list, optional\n    a list of metrics</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>statistics : dict\n    a nested dictionary where first-level keys are metric names and second-level keys are 'mean' for the mean\n    and 'std' for the standard deviation</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;last&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">average</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.remove_project": {"fullname": "dlc2action.project.project.Project.remove_project", "modulename": "dlc2action.project.project", "qualname": "Project.remove_project", "kind": "function", "doc": "<p>Remove all project files and experiment records and results</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">projects_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.remove_saved_features": {"fullname": "dlc2action.project.project.Project.remove_saved_features", "modulename": "dlc2action.project.project", "qualname": "Project.remove_saved_features", "kind": "function", "doc": "<p>Remove saved pre-computed dataset files</p>\n\n<p>By default, all pre-computed features will be deleted.\nNo essential information can get lost, storing them only saves time. Be careful with deleting datasets\nwhile training or inference is happening though.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataset_names : list, optional\n    a list of dataset names to delete (by default all names are added)\nexceptions : list, optional\n    a list of dataset names to not be deleted\nremove_active : bool, default False\n    if <code>False</code>, datasets used by unfinished episodes will not be deleted</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dataset_names</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exceptions</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">remove_active</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"fullname": "dlc2action.project.project.Project.remove_extra_checkpoints", "modulename": "dlc2action.project.project", "qualname": "Project.remove_extra_checkpoints", "kind": "function", "doc": "<p>Remove intermediate model checkpoint files (only leave the results of the last epoch)</p>\n\n<p>By default, all intermediate checkpoints will be deleted.\nFiles in the model folder that are not associated with any record in the meta files are also deleted.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_names : list, optional\n    a list of episode names to clean (by default all names are added)\nexceptions : list, optional\n    a list of episode names to not clean</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">exceptions</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.remove_search": {"fullname": "dlc2action.project.project.Project.remove_search", "modulename": "dlc2action.project.project", "qualname": "Project.remove_search", "kind": "function", "doc": "<p>Remove a hyperparameter search record</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>search_name : str\n    the name of the search to remove</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">search_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.remove_prediction": {"fullname": "dlc2action.project.project.Project.remove_prediction", "modulename": "dlc2action.project.project", "qualname": "Project.remove_prediction", "kind": "function", "doc": "<p>Remove a prediction record</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>prediction_name : str\n    the name of the prediction to remove</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">prediction_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.remove_episode": {"fullname": "dlc2action.project.project.Project.remove_episode", "modulename": "dlc2action.project.project", "qualname": "Project.remove_episode", "kind": "function", "doc": "<p>Remove all model, logs and metafile records related to an episode</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode to remove</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.prune_unfinished": {"fullname": "dlc2action.project.project.Project.prune_unfinished", "modulename": "dlc2action.project.project", "qualname": "Project.prune_unfinished", "kind": "function", "doc": "<p>Remove all interrupted episodes</p>\n\n<p>Remove all episodes that either don't have a log file or have less epochs in the log file than in\nthe training parameters or have a model folder but not a record. Note that it can remove episodes that are\ncurrently running!</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>exceptions : list\n    the episodes to keep even if they are interrupted</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>pruned : list\n    a list of the episode names that were pruned</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exceptions</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.prediction_path": {"fullname": "dlc2action.project.project.Project.prediction_path", "modulename": "dlc2action.project.project", "qualname": "Project.prediction_path", "kind": "function", "doc": "<p>Get the path where prediction files are saved</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>prediction_name : str\n    name of the prediction</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>prediction_path : str\n    the file path</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">prediction_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.print_data_types": {"fullname": "dlc2action.project.project.Project.print_data_types", "modulename": "dlc2action.project.project", "qualname": "Project.print_data_types", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.print_annotation_types": {"fullname": "dlc2action.project.project.Project.print_annotation_types", "modulename": "dlc2action.project.project", "qualname": "Project.print_annotation_types", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.data_types": {"fullname": "dlc2action.project.project.Project.data_types", "modulename": "dlc2action.project.project", "qualname": "Project.data_types", "kind": "function", "doc": "<p>Get available data types</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>list\n    available data types</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.annotation_types": {"fullname": "dlc2action.project.project.Project.annotation_types", "modulename": "dlc2action.project.project", "qualname": "Project.annotation_types", "kind": "function", "doc": "<p>Get available annotation types</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>list\n    available annotation types</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.set_main_parameters": {"fullname": "dlc2action.project.project.Project.set_main_parameters", "modulename": "dlc2action.project.project", "qualname": "Project.set_main_parameters", "kind": "function", "doc": "<p>Select the model and the metrics</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>model_name : str, optional\n    model name; run <code>project.help(\"model\") to find out more\nmetric_names : list, optional\n    a list of metric function names; run</code>project.help(\"metrics\") to find out more</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">metric_names</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.help": {"fullname": "dlc2action.project.project.Project.help", "modulename": "dlc2action.project.project", "qualname": "Project.help", "kind": "function", "doc": "<p>Get information on available options</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>keyword : str, optional\n    the keyword for options (run without arguments to see which keywords are available)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">keyword</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.list_blanks": {"fullname": "dlc2action.project.project.Project.list_blanks", "modulename": "dlc2action.project.project", "qualname": "Project.list_blanks", "kind": "function", "doc": "<p>List parameters that need to be filled in</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>blanks : list, optional\n    a list of the parameters to list, if already known</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">blanks</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.list_basic_parameters": {"fullname": "dlc2action.project.project.Project.list_basic_parameters", "modulename": "dlc2action.project.project", "qualname": "Project.list_basic_parameters", "kind": "function", "doc": "<p>Get a list of most relevant parameters and code to modify them</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.count_classes": {"fullname": "dlc2action.project.project.Project.count_classes", "modulename": "dlc2action.project.project", "qualname": "Project.count_classes", "kind": "function", "doc": "<p>Get a dictionary of class counts in different modes</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>load_episode : str, optional\n    the episode settings to load\nparameters_update : dict, optional\n    a dictionary of parameter updates (only for \"data\" and \"general\" categories)\nremove_saved_features : bool, default False\n    if <code>True</code>, the dataset that is used for computation is then deleted\nbouts : bool, default False\n    if <code>True</code>, instead of frame counts segment counts are returned</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>class_counts : dict\n    a dictionary where first-level keys are \"train\", \"val\" and \"test\", second-level keys are\n    class names and values are class counts (in frames)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">load_episode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters_update</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">remove_saved_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">bouts</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.plot_class_distribution": {"fullname": "dlc2action.project.project.Project.plot_class_distribution", "modulename": "dlc2action.project.project", "qualname": "Project.plot_class_distribution", "kind": "function", "doc": "<p>Make a class distribution plot</p>\n\n<p>You can either specify the parameters, choose an existing dataset or do neither (in that case a dataset\nis created or laoded for the computation with the default parameters).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>parameters_update : dict, optional\n    a dictionary of parameter updates (only for \"data\" and \"general\" categories)\nremove_saved_features : bool, default False\n    if <code>True</code>, the dataset that is used for computation is then deleted</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">parameters_update</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">frame_cutoff</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">bout_cutoff</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">print_full</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">remove_saved_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.plot_confusion_matrix": {"fullname": "dlc2action.project.project.Project.plot_confusion_matrix", "modulename": "dlc2action.project.project", "qualname": "Project.plot_confusion_matrix", "kind": "function", "doc": "<p>Make a confusion matrix plot and return the data</p>\n\n<p>If the annotation is non-exclusive, only false positive labels are considered.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode to load\nload_epoch : int, optional\n    the index of the epoch to load (by default the last one is loaded)\nparameters_update : dict, optional\n    a dictionary of parameter updates (only for \"data\" and \"general\" categories)\nmode : {'val', 'all', 'test', 'train'}\n    the subset of the data to make the prediction for (forced to 'all' if data_path is not None)\ntype : {\"recall\", \"precision\"}\n    for datasets with non-exclusive annotation, if <code>type</code> is <code>\"recall\"</code>, only false positives are taken\n    into account, and if <code>type</code> is <code>\"precision\"</code>, only false negatives\nremove_saved_features : bool, default False\n    if <code>True</code>, the dataset that is used for computation is then deleted</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>confusion_matrix : np.ndarray\n    a confusion matrix of shape <code>(#classes, #classes)</code> where <code>A[i, j] = F_ij/N_i</code>, <code>F_ij</code> is the number of\n    frames that have the i-th label in the ground truth and a false positive j-th label in the prediction,\n    <code>N_i</code> is the number of frames that have the i-th label in the ground truth\nclasses : list\n    a list of labels</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">load_epoch</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters_update</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;recall&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;val&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">remove_saved_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Iterable</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.plot_predictions": {"fullname": "dlc2action.project.project.Project.plot_predictions", "modulename": "dlc2action.project.project", "qualname": "Project.plot_predictions", "kind": "function", "doc": "<p>Visualize random predictions</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode to load\nload_epoch : int, optional\n    the epoch to load (by default last)\nparameters_update : dict, optional\n    parameter update dictionary\nadd_legend : bool, default True\n    if True, legend will be added to the plot\nground_truth : bool, default True\n    if True, ground truth will be added to the plot\ncolormap : str, default 'Accent'\n    the <code>matplotlib</code> colormap to use\nhide_axes : bool, default True\n    if <code>True</code>, the axes will be hidden on the plot\nmin_classes : int, default 1\n    the minimum number of classes in a displayed interval\nwidth : float, default 10\n    the width of the plot\nwhole_video : bool, default False\n    if <code>True</code>, whole videos are plotted instead of segments\ntransparent : bool, default False\n    if <code>True</code>, the background on the plot is transparent\ndrop_classes : set, optional\n    a set of class names to not be displayed\nsearch_classes : set, optional\n    if given, only intervals where at least one of the classes is in ground truth will be shown\nnum_plots : int, default 1\n    the number of plots to make\nremove_saved_features : bool, default False\n    if <code>True</code>, the dataset will be deleted after computation\nsmooth_interval_prediction : int, default 0\n    if &gt;0, predictions shorter than this number of frames are removed (filled with prediction for the previous frame)\ndata_path : str, optional\n    the data path to run the prediction for\nmode : {'all', 'test', 'val', 'train'}\n    the subset of the data to make the prediction for (forced to 'all' if data_path is not None)\nfile_paths : set, optional\n    a set of string file paths (data with all prefixes + feature files, in any order) to run the prediction\n    for\nbehavior_name : str, optional\n    for non-exclusive classificaton datasets, choose which behavior to visualize (by default first in list)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">load_epoch</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters_update</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">add_legend</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ground_truth</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">colormap</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;viridis&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hide_axes</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">min_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">whole_video</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">transparent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">drop_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">search_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_plots</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">remove_saved_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">smooth_interval_prediction</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;val&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">behavior_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.create_metadata_backup": {"fullname": "dlc2action.project.project.Project.create_metadata_backup", "modulename": "dlc2action.project.project", "qualname": "Project.create_metadata_backup", "kind": "function", "doc": "<p>Create a copy of the meta files</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.load_metadata_backup": {"fullname": "dlc2action.project.project.Project.load_metadata_backup", "modulename": "dlc2action.project.project", "qualname": "Project.load_metadata_backup", "kind": "function", "doc": "<p>Load from previously created meta data backup (in case of corruption)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.get_behavior_dictionary": {"fullname": "dlc2action.project.project.Project.get_behavior_dictionary", "modulename": "dlc2action.project.project", "qualname": "Project.get_behavior_dictionary", "kind": "function", "doc": "<p>Get the behavior dictionary for an episode</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the name of the episode</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>behaviors_dictionary : dict\n    a dictionary where keys are label indices and values are label names</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.import_episodes": {"fullname": "dlc2action.project.project.Project.import_episodes", "modulename": "dlc2action.project.project", "qualname": "Project.import_episodes", "kind": "function", "doc": "<p>Import episodes exported with <code>Project.export_episodes</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episodes_directory : str\n    the path to the exported episodes directory\nname_map : dict\n    a name change dictionary for the episodes: keys are old names, values are new names</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episodes_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name_map</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">repeat_policy</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;error&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.export_episodes": {"fullname": "dlc2action.project.project.Project.export_episodes", "modulename": "dlc2action.project.project", "qualname": "Project.export_episodes", "kind": "function", "doc": "<p>Save selected episodes as a file that can be imported into another project with <code>Project.import_episodes</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_names : list\n    a list of string episode names\noutput_directory : str\n    the path to the directory where the episodes will be saved\nname : str, optional\n    the name of the episodes directory (by default <code>exported_episodes</code>)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">output_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.get_results_table": {"fullname": "dlc2action.project.project.Project.get_results_table", "modulename": "dlc2action.project.project", "qualname": "Project.get_results_table", "kind": "function", "doc": "<p>Genererate a <code>pandas</code> dataframe with a summary of episode results</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_names : list\n    a list of names of episodes to include\nmetrics : list, optional\n    a list of metric names to include\ninclude_std : bool, default False\n    if <code>True</code>, for episodes with multiple runs the mean and standard deviation will be displayed;\n    otherwise only mean\nclasses : list, optional\n    a list of names of classes to include (by default all are included)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>results : pd.DataFrame\n    a table with the results</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episode_names</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">include_std</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">classes</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.episode_exists": {"fullname": "dlc2action.project.project.Project.episode_exists", "modulename": "dlc2action.project.project", "qualname": "Project.episode_exists", "kind": "function", "doc": "<p>Check if an episode already exists</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>episode_name : str\n    the episode name</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>exists : bool\n    <code>True</code> if the episode exists</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.search_exists": {"fullname": "dlc2action.project.project.Project.search_exists", "modulename": "dlc2action.project.project", "qualname": "Project.search_exists", "kind": "function", "doc": "<p>Check if a search already exists</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>search_name : str\n    the search name</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>exists : bool\n    <code>True</code> if the search exists</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">search_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.prediction_exists": {"fullname": "dlc2action.project.project.Project.prediction_exists", "modulename": "dlc2action.project.project", "qualname": "Project.prediction_exists", "kind": "function", "doc": "<p>Check if a prediction already exists</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>prediction_name : str\n    the prediction name</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>exists : bool\n    <code>True</code> if the prediction exists</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">prediction_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.project_name_available": {"fullname": "dlc2action.project.project.Project.project_name_available", "modulename": "dlc2action.project.project", "qualname": "Project.project_name_available", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">projects_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">project_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.project.project.Project.rename_episode": {"fullname": "dlc2action.project.project.Project.rename_episode", "modulename": "dlc2action.project.project", "qualname": "Project.rename_episode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">new_episode_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.ssl": {"fullname": "dlc2action.ssl", "modulename": "dlc2action.ssl", "kind": "module", "doc": "<h2 id=\"self-supervised-tasks\">Self-supervised tasks</h2>\n\n<p>Self-supervised learning tasks in <code>dlc2action</code> are implemented in the form of the <code>base_ssl.SSLConstructor</code>\nabstract class.\nIn order to create a new task you need to define four things: a data <em>transformation</em>, a network <em>module</em>, a <em>loss\nfunction</em> and the <em>type</em> of the task that defines interaction with the base network.</p>\n\n<p>The <em>transformation</em> is applied to model input data at runtime to generate the SSL input and target from input data.\nIt receives the target data as a feature dictionary, so complex generalised transformations can be defined easily.\nThe SSL input and target should also be returned in similarly formatted dictionaries so that augmentations can be\napplied to them correctly. If you are using the <code>dlc2action.task.task_dispatcher.TaskDispatcher</code>\n(or <code>dlc2action.project.project.Project</code>) interface, they will be regarded\ndifferently according to the type of the task:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: if the input generated by transformation is None an error will be raised; if the generated target\nis None it will be replaced by the unmodified input data,</li>\n<li><code>'ssl_target'</code>: the input generated by transformation will be disregarded; if the generated target is None it will\nbe replaced by the unmodified input data,</li>\n<li><code>'contrastive'</code>, <code>'contrastive_2layers'</code>: if the transformation returns None for the input, the input will be created by the transformer as\nan augmentation of the input data; if the target is <code>None</code> it will stay <code>None</code>,</li>\n</ul>\n\n<p>You can also set these rules manually with the <code>keep_target_none</code> and <code>generate_ssl_input</code> parameters of the\ntransformers.</p>\n\n<p>The SSL <em>module</em> is stacked with the base network feature extraction module as described above. The <em>loss function</em>\ntakes SSL output and SSL target as input and returns a loss value (all operations must be differentiable by <code>torch</code>).\nThe available types are described at <code>dlc2action.ssl.base_ssl.SSLConstructor</code>.</p>\n"}, "dlc2action.ssl.base_ssl": {"fullname": "dlc2action.ssl.base_ssl", "modulename": "dlc2action.ssl.base_ssl", "kind": "module", "doc": "<p>Abstract class for defining SSL tasks</p>\n"}, "dlc2action.ssl.base_ssl.SSLConstructor": {"fullname": "dlc2action.ssl.base_ssl.SSLConstructor", "modulename": "dlc2action.ssl.base_ssl", "qualname": "SSLConstructor", "kind": "class", "doc": "<p>A base class for all SSL constructors</p>\n\n<p>An SSL method is defined by three things: a <em>transformation</em> that maps a sample into SSL input and output,\na neural net <em>module</em> that takes features as input and predicts SSL target, a <em>type</em> and a <em>loss function</em>.</p>\n", "bases": "abc.ABC"}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"fullname": "dlc2action.ssl.base_ssl.SSLConstructor.type", "modulename": "dlc2action.ssl.base_ssl", "qualname": "SSLConstructor.type", "kind": "variable", "doc": "<p>The <code>type</code> parameter defines interaction with the model:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: a modification of the input data passes through the base network feature extraction module and the\nSSL module; it is returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'ssl_output'</code>:  the input data passes through the base network feature extraction module and the SSL module; it\nis returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'contrastive'</code>:  the input data and its modification pass through the base network feature extraction module and\nthe SSL module; an (input results, modification results) tuple is returned as SSL output,</li>\n<li><code>'contrastive_2layers'</code>: the input data and its modification pass through the base network feature extraction module; \nthe output of the second feature extraction layer for the modified data goes through an SSL module and then, \noptionally, that result and the first-level unmodified features pass another transformation; \nan (input results, modified results) tuple is returned as SSL output,</li>\n</ul>\n", "default_value": "&#x27;none&#x27;"}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"fullname": "dlc2action.ssl.base_ssl.SSLConstructor.transformation", "modulename": "dlc2action.ssl.base_ssl", "qualname": "SSLConstructor.transformation", "kind": "function", "doc": "<p>Transform a sample feature dictionary into SSL input and target</p>\n\n<p>Either input, target or both can be left as <code>None</code>. Transformers can be configured to replace <code>None</code> SSL targets\nwith the input sample at runtime and/or to replace <code>None SSL</code> inputs with a new augmentation of the input sample.\nIf the keys of the feature dictionaries are recognized by the transformer, they will be augmented before\nall features are stacked together.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>sample_data : dict\n    a feature dictionary</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>ssl_input : dict | torch.float('nan')\n    a feature dictionary of SSL inputs\nssl_target : dict | torch.float('nan')\n    a feature dictionary of SSL targets</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"fullname": "dlc2action.ssl.base_ssl.SSLConstructor.loss", "modulename": "dlc2action.ssl.base_ssl", "qualname": "SSLConstructor.loss", "kind": "function", "doc": "<p>Calculate the SSL loss</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>predicted : torch.Tensor\n    output of the SSL module\ntarget : torch.Tensor\n    augmented and stacked SSL_target</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>loss : float\n    the loss value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"fullname": "dlc2action.ssl.base_ssl.SSLConstructor.construct_module", "modulename": "dlc2action.ssl.base_ssl", "qualname": "SSLConstructor.construct_module", "kind": "function", "doc": "<p>Construct the SSL module</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>ssl_module : torch.nn.Module\n    a neural net module that takes features extracted by a model's feature extractor as input and\n    returns SSL output</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.base_ssl.EmptySSL": {"fullname": "dlc2action.ssl.base_ssl.EmptySSL", "modulename": "dlc2action.ssl.base_ssl", "qualname": "EmptySSL", "kind": "class", "doc": "<p>Empty SSL class</p>\n", "bases": "SSLConstructor"}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"fullname": "dlc2action.ssl.base_ssl.EmptySSL.transformation", "modulename": "dlc2action.ssl.base_ssl", "qualname": "EmptySSL.transformation", "kind": "function", "doc": "<p>Empty transformation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"fullname": "dlc2action.ssl.base_ssl.EmptySSL.loss", "modulename": "dlc2action.ssl.base_ssl", "qualname": "EmptySSL.loss", "kind": "function", "doc": "<p>Empty loss</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"fullname": "dlc2action.ssl.base_ssl.EmptySSL.construct_module", "modulename": "dlc2action.ssl.base_ssl", "qualname": "EmptySSL.construct_module", "kind": "function", "doc": "<p>Empty module</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive": {"fullname": "dlc2action.ssl.contrastive", "modulename": "dlc2action.ssl.contrastive", "kind": "module", "doc": "<p>Implementations of <code>dlc2action.ssl.base_ssl.SSLConstructor</code> of the <code>'contrastive'</code> type</p>\n"}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"fullname": "dlc2action.ssl.contrastive.ContrastiveSSL", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveSSL", "kind": "class", "doc": "<p>A contrastive SSL class with an NT-Xent loss</p>\n\n<p>The SSL input and target are left empty (the SSL input is generated as an augmentation of the\ninput sample at runtime).</p>\n", "bases": "dlc2action.ssl.base_ssl.SSLConstructor"}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"fullname": "dlc2action.ssl.contrastive.ContrastiveSSL.__init__", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveSSL.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_f_maps : torch.Size\n    shape of feature extractor output\nlen_segment : int\n    length of segment in the base feature extractor output\nssl_features : int, default 128\n    the final number of features per clip\ntau : float, default 1\n    the tau parameter of NT-Xent loss</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">tau</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span>)</span>"}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"fullname": "dlc2action.ssl.contrastive.ContrastiveSSL.type", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveSSL.type", "kind": "variable", "doc": "<p>The <code>type</code> parameter defines interaction with the model:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: a modification of the input data passes through the base network feature extraction module and the\nSSL module; it is returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'ssl_output'</code>:  the input data passes through the base network feature extraction module and the SSL module; it\nis returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'contrastive'</code>:  the input data and its modification pass through the base network feature extraction module and\nthe SSL module; an (input results, modification results) tuple is returned as SSL output,</li>\n<li><code>'contrastive_2layers'</code>: the input data and its modification pass through the base network feature extraction module; \nthe output of the second feature extraction layer for the modified data goes through an SSL module and then, \noptionally, that result and the first-level unmodified features pass another transformation; \nan (input results, modified results) tuple is returned as SSL output,</li>\n</ul>\n", "default_value": "&#x27;contrastive&#x27;"}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function": {"fullname": "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveSSL.loss_function", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.ContrastiveSSL.pars": {"fullname": "dlc2action.ssl.contrastive.ContrastiveSSL.pars", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveSSL.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"fullname": "dlc2action.ssl.contrastive.ContrastiveSSL.transformation", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveSSL.transformation", "kind": "function", "doc": "<p>Empty transformation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"fullname": "dlc2action.ssl.contrastive.ContrastiveSSL.loss", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveSSL.loss", "kind": "function", "doc": "<p>NT-Xent loss</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"fullname": "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveSSL.construct_module", "kind": "function", "doc": "<p>Clip-wise feature TCN extractor</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"fullname": "dlc2action.ssl.contrastive.ContrastiveMaskedSSL", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveMaskedSSL", "kind": "class", "doc": "<p>A contrastive masked SSL class with an NT-Xent loss</p>\n\n<p>A few frames in the middle of each segment are masked and then the output of the second layer of\nfeature extraction for the segment is used to predict the output of the first layer for the missing frames.\nThe SSL input and target are left empty (the SSL input is generated as an augmentation of the\ninput sample at runtime).</p>\n", "bases": "dlc2action.ssl.base_ssl.SSLConstructor"}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"fullname": "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveMaskedSSL.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_f_maps : torch.Size\n    shape of feature extractor output\nlen_segment : int\n    length of segment in the base feature extractor output\nssl_features : int, default 128\n    the final number of features per clip\ntau : float, default 1\n    the tau parameter of NT-Xent loss</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">tau</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">num_masked</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span>)</span>"}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"fullname": "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveMaskedSSL.type", "kind": "variable", "doc": "<p>The <code>type</code> parameter defines interaction with the model:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: a modification of the input data passes through the base network feature extraction module and the\nSSL module; it is returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'ssl_output'</code>:  the input data passes through the base network feature extraction module and the SSL module; it\nis returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'contrastive'</code>:  the input data and its modification pass through the base network feature extraction module and\nthe SSL module; an (input results, modification results) tuple is returned as SSL output,</li>\n<li><code>'contrastive_2layers'</code>: the input data and its modification pass through the base network feature extraction module; \nthe output of the second feature extraction layer for the modified data goes through an SSL module and then, \noptionally, that result and the first-level unmodified features pass another transformation; \nan (input results, modified results) tuple is returned as SSL output,</li>\n</ul>\n", "default_value": "&#x27;contrastive_2layers&#x27;"}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.start": {"fullname": "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.start", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveMaskedSSL.start", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.end": {"fullname": "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.end", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveMaskedSSL.end", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function": {"fullname": "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveMaskedSSL.loss_function", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.pars": {"fullname": "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.pars", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveMaskedSSL.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"fullname": "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveMaskedSSL.transformation", "kind": "function", "doc": "<p>Empty transformation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"fullname": "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveMaskedSSL.loss", "kind": "function", "doc": "<p>NT-Xent loss</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"fullname": "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveMaskedSSL.construct_module", "kind": "function", "doc": "<p>Clip-wise feature TCN extractor</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.PairwiseSSL": {"fullname": "dlc2action.ssl.contrastive.PairwiseSSL", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseSSL", "kind": "class", "doc": "<p>A pairwise SSL class with triplet or circle loss</p>\n\n<p>The SSL input and target are left empty (the SSL input is generated as an augmentation of the\ninput sample at runtime).</p>\n", "bases": "dlc2action.ssl.base_ssl.SSLConstructor"}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"fullname": "dlc2action.ssl.contrastive.PairwiseSSL.__init__", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseSSL.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_f_maps : torch.Size\n    shape of feature extractor output\nlen_segment : int\n    length of segment in feature extractor output\nssl_features : int, default 128\n    final number of features per clip\nmargin : float, default 0\n    the margin parameter of triplet or circle loss\ndistance : {'cosine', 'euclidean'}\n    the distance calculation method for triplet or circle loss\nloss : {'triplet', 'circle'}\n    the loss function name\ngamma : float, default 1\n    the gamma parameter of circle loss</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">margin</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">distance</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cosine&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">loss</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;triplet&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span>)</span>"}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"fullname": "dlc2action.ssl.contrastive.PairwiseSSL.type", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseSSL.type", "kind": "variable", "doc": "<p>The <code>type</code> parameter defines interaction with the model:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: a modification of the input data passes through the base network feature extraction module and the\nSSL module; it is returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'ssl_output'</code>:  the input data passes through the base network feature extraction module and the SSL module; it\nis returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'contrastive'</code>:  the input data and its modification pass through the base network feature extraction module and\nthe SSL module; an (input results, modification results) tuple is returned as SSL output,</li>\n<li><code>'contrastive_2layers'</code>: the input data and its modification pass through the base network feature extraction module; \nthe output of the second feature extraction layer for the modified data goes through an SSL module and then, \noptionally, that result and the first-level unmodified features pass another transformation; \nan (input results, modified results) tuple is returned as SSL output,</li>\n</ul>\n", "default_value": "&#x27;contrastive&#x27;"}, "dlc2action.ssl.contrastive.PairwiseSSL.pars": {"fullname": "dlc2action.ssl.contrastive.PairwiseSSL.pars", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseSSL.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"fullname": "dlc2action.ssl.contrastive.PairwiseSSL.transformation", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseSSL.transformation", "kind": "function", "doc": "<p>Empty transformation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"fullname": "dlc2action.ssl.contrastive.PairwiseSSL.loss", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseSSL.loss", "kind": "function", "doc": "<p>Triplet or circle loss</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"fullname": "dlc2action.ssl.contrastive.PairwiseSSL.construct_module", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseSSL.construct_module", "kind": "function", "doc": "<p>Clip-wise feature TCN extractor</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"fullname": "dlc2action.ssl.contrastive.PairwiseMaskedSSL", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseMaskedSSL", "kind": "class", "doc": "<p>A pairwise SSL class with triplet or circle loss</p>\n\n<p>The SSL input and target are left empty (the SSL input is generated as an augmentation of the\ninput sample at runtime).</p>\n", "bases": "PairwiseSSL"}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"fullname": "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseMaskedSSL.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_f_maps : torch.Size\n    shape of feature extractor output\nlen_segment : int\n    length of segment in feature extractor output\nssl_features : int, default 128\n    final number of features per clip\nmargin : float, default 0\n    the margin parameter of triplet or circle loss\ndistance : {'cosine', 'euclidean'}\n    the distance calculation method for triplet or circle loss\nloss : {'triplet', 'circle'}\n    the loss function name\ngamma : float, default 1\n    the gamma parameter of circle loss</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">margin</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">distance</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cosine&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">loss</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;triplet&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">num_masked</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span>)</span>"}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"fullname": "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseMaskedSSL.type", "kind": "variable", "doc": "<p>The <code>type</code> parameter defines interaction with the model:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: a modification of the input data passes through the base network feature extraction module and the\nSSL module; it is returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'ssl_output'</code>:  the input data passes through the base network feature extraction module and the SSL module; it\nis returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'contrastive'</code>:  the input data and its modification pass through the base network feature extraction module and\nthe SSL module; an (input results, modification results) tuple is returned as SSL output,</li>\n<li><code>'contrastive_2layers'</code>: the input data and its modification pass through the base network feature extraction module; \nthe output of the second feature extraction layer for the modified data goes through an SSL module and then, \noptionally, that result and the first-level unmodified features pass another transformation; \nan (input results, modified results) tuple is returned as SSL output,</li>\n</ul>\n", "default_value": "&#x27;contrastive_2layers&#x27;"}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked": {"fullname": "dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseMaskedSSL.num_masked", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.start": {"fullname": "dlc2action.ssl.contrastive.PairwiseMaskedSSL.start", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseMaskedSSL.start", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.end": {"fullname": "dlc2action.ssl.contrastive.PairwiseMaskedSSL.end", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseMaskedSSL.end", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.pars": {"fullname": "dlc2action.ssl.contrastive.PairwiseMaskedSSL.pars", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseMaskedSSL.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"fullname": "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseMaskedSSL.transformation", "kind": "function", "doc": "<p>Empty transformation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"fullname": "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module", "modulename": "dlc2action.ssl.contrastive", "qualname": "PairwiseMaskedSSL.construct_module", "kind": "function", "doc": "<p>Clip-wise feature TCN extractor</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"fullname": "dlc2action.ssl.contrastive.ContrastiveRegressionSSL", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveRegressionSSL", "kind": "class", "doc": "<p>A base class for all SSL constructors</p>\n\n<p>An SSL method is defined by three things: a <em>transformation</em> that maps a sample into SSL input and output,\na neural net <em>module</em> that takes features as input and predicts SSL target, a <em>type</em> and a <em>loss function</em>.</p>\n", "bases": "dlc2action.ssl.base_ssl.SSLConstructor"}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"fullname": "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveRegressionSSL.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">num_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">num_ssl_layers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">distance</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cosine&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">break_factor</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"fullname": "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveRegressionSSL.type", "kind": "variable", "doc": "<p>The <code>type</code> parameter defines interaction with the model:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: a modification of the input data passes through the base network feature extraction module and the\nSSL module; it is returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'ssl_output'</code>:  the input data passes through the base network feature extraction module and the SSL module; it\nis returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'contrastive'</code>:  the input data and its modification pass through the base network feature extraction module and\nthe SSL module; an (input results, modification results) tuple is returned as SSL output,</li>\n<li><code>'contrastive_2layers'</code>: the input data and its modification pass through the base network feature extraction module; \nthe output of the second feature extraction layer for the modified data goes through an SSL module and then, \noptionally, that result and the first-level unmodified features pass another transformation; \nan (input results, modified results) tuple is returned as SSL output,</li>\n</ul>\n", "default_value": "&#x27;contrastive&#x27;"}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function": {"fullname": "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveRegressionSSL.loss_function", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.pars": {"fullname": "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.pars", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveRegressionSSL.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"fullname": "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveRegressionSSL.loss", "kind": "function", "doc": "<p>NT-Xent loss</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"fullname": "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveRegressionSSL.transformation", "kind": "function", "doc": "<p>Empty transformation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"fullname": "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module", "modulename": "dlc2action.ssl.contrastive", "qualname": "ContrastiveRegressionSSL.construct_module", "kind": "function", "doc": "<p>Clip-wise feature TCN extractor</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked": {"fullname": "dlc2action.ssl.masked", "modulename": "dlc2action.ssl.masked", "kind": "module", "doc": "<p>Implementations of <code>dlc2action.ssl.base_ssl.SSLConstructor</code> that predict masked input features</p>\n"}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL", "kind": "class", "doc": "<p>A base masked features SSL class</p>\n\n<p>Mask some of the input features randomly and predict the initial data.</p>\n", "bases": "dlc2action.ssl.base_ssl.SSLConstructor, abc.ABC"}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>frac_masked : float\n    fraction of features to real_lens</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">frac_masked</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span></span>)</span>"}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL.type", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL.type", "kind": "variable", "doc": "<p>The <code>type</code> parameter defines interaction with the model:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: a modification of the input data passes through the base network feature extraction module and the\nSSL module; it is returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'ssl_output'</code>:  the input data passes through the base network feature extraction module and the SSL module; it\nis returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'contrastive'</code>:  the input data and its modification pass through the base network feature extraction module and\nthe SSL module; an (input results, modification results) tuple is returned as SSL output,</li>\n<li><code>'contrastive_2layers'</code>: the input data and its modification pass through the base network feature extraction module; \nthe output of the second feature extraction layer for the modified data goes through an SSL module and then, \noptionally, that result and the first-level unmodified features pass another transformation; \nan (input results, modified results) tuple is returned as SSL output,</li>\n</ul>\n", "default_value": "&#x27;ssl_input&#x27;"}, "dlc2action.ssl.masked.MaskedFeaturesSSL.mse": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL.mse", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL.mse", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.masked.MaskedFeaturesSSL.frac_masked": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL.frac_masked", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL.frac_masked", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL.transformation", "kind": "function", "doc": "<p>Mask some of the features randomly</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL.loss", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL.loss", "kind": "function", "doc": "<p>MSE loss</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL.construct_module", "kind": "function", "doc": "<p>Construct the SSL prediction module using the parameters specified at initialization</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL_FC", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL_FC", "kind": "class", "doc": "<p>A fully connected masked features SSL class</p>\n\n<p>Mask some of the input features randomly and predict the initial data.</p>\n", "bases": "MaskedFeaturesSSL"}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL_FC.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>dims : torch.Size\n    the shape of features in model input\nnum_f_maps : torch.Size\n    shape of feature extraction output\nfrac_masked : float, default 0.1\n    fraction of features to real_lens\nnum_ssl_layers : int, default 5\n    number of layers in the SSL module\nnum_ssl_f_maps : int, default 16\n    number of feature maps in the SSL module</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dims</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">frac_masked</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">num_ssl_layers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">num_ssl_f_maps</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span></span>)</span>"}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL_FC.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL_FC.construct_module", "kind": "function", "doc": "<p>A fully connected module</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL_TCN", "kind": "class", "doc": "<p>A TCN masked features SSL class</p>\n\n<p>Mask some of the input features randomly and predict the initial data.</p>\n", "bases": "MaskedFeaturesSSL"}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL_TCN.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>dims : torch.Size\n    the shape of features in model input\nnum_f_maps : torch.Size\n    shape of feature extraction output\nfrac_masked : float, default 0.1\n    fraction of features to real_lens\nnum_ssl_layers : int, default 5\n    number of layers in the SSL module</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dims</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">frac_masked</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">num_ssl_layers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span></span>)</span>"}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL_TCN.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"fullname": "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFeaturesSSL_TCN.construct_module", "kind": "function", "doc": "<p>A TCN module</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL", "kind": "class", "doc": "<p>A base masked joints SSL class</p>\n\n<p>Mask some of the joints randomly and predict the initial data.</p>\n", "bases": "dlc2action.ssl.base_ssl.SSLConstructor, abc.ABC"}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL.__init__", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>frac_masked : float, default 0.1\n    fraction of features to real_lens</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">frac_masked</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span></span>)</span>"}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL.type", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL.type", "kind": "variable", "doc": "<p>The <code>type</code> parameter defines interaction with the model:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: a modification of the input data passes through the base network feature extraction module and the\nSSL module; it is returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'ssl_output'</code>:  the input data passes through the base network feature extraction module and the SSL module; it\nis returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'contrastive'</code>:  the input data and its modification pass through the base network feature extraction module and\nthe SSL module; an (input results, modification results) tuple is returned as SSL output,</li>\n<li><code>'contrastive_2layers'</code>: the input data and its modification pass through the base network feature extraction module; \nthe output of the second feature extraction layer for the modified data goes through an SSL module and then, \noptionally, that result and the first-level unmodified features pass another transformation; \nan (input results, modified results) tuple is returned as SSL output,</li>\n</ul>\n", "default_value": "&#x27;ssl_input&#x27;"}, "dlc2action.ssl.masked.MaskedKinematicSSL.mse": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL.mse", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL.mse", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.masked.MaskedKinematicSSL.frac_masked": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL.frac_masked", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL.frac_masked", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL.transformation", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL.transformation", "kind": "function", "doc": "<p>Mask joints randomly</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL.loss", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL.loss", "kind": "function", "doc": "<p>MSE loss</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL.construct_module", "kind": "function", "doc": "<p>Construct the SSL prediction module using the parameters specified at initialization</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL_FC", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL_FC", "kind": "class", "doc": "<p>A base masked joints SSL class</p>\n\n<p>Mask some of the joints randomly and predict the initial data.</p>\n", "bases": "MaskedKinematicSSL"}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL_FC.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>dims : torch.Size\n    the number of features in model input\nnum_f_maps : torch.Size\n    shape of feature extraction output\nfrac_masked : float, default 0.1\n    fraction of joints to real_lens\nnum_ssl_layers : int, default 5\n    number of layers in the SSL module\nnum_ssl_f_maps : int, default 16\n    number of feature maps in the SSL module</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dims</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">frac_masked</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">num_ssl_layers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">num_ssl_f_maps</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span></span>)</span>"}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL_FC.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL_FC.construct_module", "kind": "function", "doc": "<p>A fully connected module</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL_TCN", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL_TCN", "kind": "class", "doc": "<p>A base masked joints SSL class</p>\n\n<p>Mask some of the joints randomly and predict the initial data.</p>\n", "bases": "MaskedKinematicSSL"}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL_TCN.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>dims : torch.Size\n    the shape of features in model input\nnum_f_maps : torch.Size\n    shape of feature extraction output\nfrac_masked : float, default 0.1\n    fraction of joints to real_lens\nnum_ssl_layers : int, default 5\n    number of layers in the SSL module</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dims</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">frac_masked</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">num_ssl_layers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span></span>)</span>"}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL_TCN.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"fullname": "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedKinematicSSL_TCN.construct_module", "kind": "function", "doc": "<p>A TCN module</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedFramesSSL": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL", "kind": "class", "doc": "<p>Generates the functions necessary to build a masked features SSL: real_lens some of the input features randomly\nand predict the initial data</p>\n", "bases": "dlc2action.ssl.base_ssl.SSLConstructor, abc.ABC"}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL.__init__", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>frac_masked : float, default 0.1\n    fraction of frames to real_lens</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">frac_masked</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span></span>)</span>"}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL.type", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL.type", "kind": "variable", "doc": "<p>The <code>type</code> parameter defines interaction with the model:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: a modification of the input data passes through the base network feature extraction module and the\nSSL module; it is returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'ssl_output'</code>:  the input data passes through the base network feature extraction module and the SSL module; it\nis returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'contrastive'</code>:  the input data and its modification pass through the base network feature extraction module and\nthe SSL module; an (input results, modification results) tuple is returned as SSL output,</li>\n<li><code>'contrastive_2layers'</code>: the input data and its modification pass through the base network feature extraction module; \nthe output of the second feature extraction layer for the modified data goes through an SSL module and then, \noptionally, that result and the first-level unmodified features pass another transformation; \nan (input results, modified results) tuple is returned as SSL output,</li>\n</ul>\n", "default_value": "&#x27;ssl_input&#x27;"}, "dlc2action.ssl.masked.MaskedFramesSSL.frac_masked": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL.frac_masked", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL.frac_masked", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.masked.MaskedFramesSSL.mse": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL.mse", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL.mse", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL.transformation", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL.transformation", "kind": "function", "doc": "<p>Mask some of the frames randomly</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL.loss", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL.loss", "kind": "function", "doc": "<p>MSE loss</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL.construct_module", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL.construct_module", "kind": "function", "doc": "<p>Construct the SSL prediction module using the parameters specified at initialization</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL_FC", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL_FC", "kind": "class", "doc": "<p>Generates the functions necessary to build a masked features SSL: real_lens some of the input features randomly\nand predict the initial data</p>\n", "bases": "MaskedFramesSSL"}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL_FC.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>dims : torch.Size\n    the shape of features in model input\nnum_f_maps : torch.Size\n    shape of feature extraction output\nfrac_masked : float, default 0.1\n    fraction of frames to real_lens\nnum_ssl_layers : int, default 5\n    number of layers in the SSL module\nnum_ssl_f_maps : int, default 16\n    number of feature maps in the SSL module</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dims</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">frac_masked</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">num_ssl_layers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">num_ssl_f_maps</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span></span>)</span>"}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL_FC.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL_FC.construct_module", "kind": "function", "doc": "<p>A fully connected module</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL_TCN", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL_TCN", "kind": "class", "doc": "<p>Generates the functions necessary to build a masked features SSL: real_lens some of the input features randomly\nand predict the initial data</p>\n", "bases": "MaskedFramesSSL"}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL_TCN.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>dims : torch.Size\n    the number of features in model input\nnum_f_maps : torch.Size\n    shape of feature extraction output\nfrac_masked : float, default 0.1\n    fraction of frames to real_lens\nnum_ssl_layers : int, default 5\n    number of layers in the SSL module</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dims</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">frac_masked</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">num_ssl_layers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span></span>)</span>"}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL_TCN.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"fullname": "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module", "modulename": "dlc2action.ssl.masked", "qualname": "MaskedFramesSSL_TCN.construct_module", "kind": "function", "doc": "<p>A TCN module</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.modules": {"fullname": "dlc2action.ssl.modules", "modulename": "dlc2action.ssl.modules", "kind": "module", "doc": "<p>Network modules used by implementations of <code>dlc2action.ssl.base_ssl.SSLConstructor</code></p>\n"}, "dlc2action.ssl.segment_order": {"fullname": "dlc2action.ssl.segment_order", "modulename": "dlc2action.ssl.segment_order", "kind": "module", "doc": "<p></p>\n"}, "dlc2action.ssl.segment_order.ReverseSSL": {"fullname": "dlc2action.ssl.segment_order.ReverseSSL", "modulename": "dlc2action.ssl.segment_order", "qualname": "ReverseSSL", "kind": "class", "doc": "<p>A flip detection SSL</p>\n\n<p>Reverse some of the segments and predict the flip with a binary classifier.</p>\n", "bases": "dlc2action.ssl.base_ssl.SSLConstructor, abc.ABC"}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"fullname": "dlc2action.ssl.segment_order.ReverseSSL.__init__", "modulename": "dlc2action.ssl.segment_order", "qualname": "ReverseSSL.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_f_maps : torch.Size\n    the number of input feature maps\nlen_segment : int\n    the length of the input segments</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>, </span><span class=\"param\"><span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"fullname": "dlc2action.ssl.segment_order.ReverseSSL.type", "modulename": "dlc2action.ssl.segment_order", "qualname": "ReverseSSL.type", "kind": "variable", "doc": "<p>The <code>type</code> parameter defines interaction with the model:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: a modification of the input data passes through the base network feature extraction module and the\nSSL module; it is returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'ssl_output'</code>:  the input data passes through the base network feature extraction module and the SSL module; it\nis returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'contrastive'</code>:  the input data and its modification pass through the base network feature extraction module and\nthe SSL module; an (input results, modification results) tuple is returned as SSL output,</li>\n<li><code>'contrastive_2layers'</code>: the input data and its modification pass through the base network feature extraction module; \nthe output of the second feature extraction layer for the modified data goes through an SSL module and then, \noptionally, that result and the first-level unmodified features pass another transformation; \nan (input results, modified results) tuple is returned as SSL output,</li>\n</ul>\n", "default_value": "&#x27;ssl_input&#x27;"}, "dlc2action.ssl.segment_order.ReverseSSL.ce": {"fullname": "dlc2action.ssl.segment_order.ReverseSSL.ce", "modulename": "dlc2action.ssl.segment_order", "qualname": "ReverseSSL.ce", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.segment_order.ReverseSSL.pars": {"fullname": "dlc2action.ssl.segment_order.ReverseSSL.pars", "modulename": "dlc2action.ssl.segment_order", "qualname": "ReverseSSL.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"fullname": "dlc2action.ssl.segment_order.ReverseSSL.transformation", "modulename": "dlc2action.ssl.segment_order", "qualname": "ReverseSSL.transformation", "kind": "function", "doc": "<p>Do the flip</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"fullname": "dlc2action.ssl.segment_order.ReverseSSL.loss", "modulename": "dlc2action.ssl.segment_order", "qualname": "ReverseSSL.loss", "kind": "function", "doc": "<p>Cross-entropy loss</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"fullname": "dlc2action.ssl.segment_order.ReverseSSL.construct_module", "modulename": "dlc2action.ssl.segment_order", "qualname": "ReverseSSL.construct_module", "kind": "function", "doc": "<p>Construct the SSL prediction module using the parameters specified at initialization</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.segment_order.OrderSSL": {"fullname": "dlc2action.ssl.segment_order.OrderSSL", "modulename": "dlc2action.ssl.segment_order", "qualname": "OrderSSL", "kind": "class", "doc": "<p>An order prediction SSL</p>\n\n<p>Cut out segments from the features, permute them and predict the order.</p>\n", "bases": "dlc2action.ssl.base_ssl.SSLConstructor, abc.ABC"}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"fullname": "dlc2action.ssl.segment_order.OrderSSL.__init__", "modulename": "dlc2action.ssl.segment_order", "qualname": "OrderSSL.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>num_f_maps : torch.Size\n    the number of the input feature maps\nlen_segment : int\n    the length of the input segments\nnum_segments : int, default 3\n    the number of segments to permute\nssl_features : int, default 32\n    the number of features per permuted segment\nskip_frames : int, default 10\n    the number of frames to cut from each permuted segment</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">num_segments</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">skip_frames</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span>)</span>"}, "dlc2action.ssl.segment_order.OrderSSL.type": {"fullname": "dlc2action.ssl.segment_order.OrderSSL.type", "modulename": "dlc2action.ssl.segment_order", "qualname": "OrderSSL.type", "kind": "variable", "doc": "<p>The <code>type</code> parameter defines interaction with the model:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: a modification of the input data passes through the base network feature extraction module and the\nSSL module; it is returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'ssl_output'</code>:  the input data passes through the base network feature extraction module and the SSL module; it\nis returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'contrastive'</code>:  the input data and its modification pass through the base network feature extraction module and\nthe SSL module; an (input results, modification results) tuple is returned as SSL output,</li>\n<li><code>'contrastive_2layers'</code>: the input data and its modification pass through the base network feature extraction module; \nthe output of the second feature extraction layer for the modified data goes through an SSL module and then, \noptionally, that result and the first-level unmodified features pass another transformation; \nan (input results, modified results) tuple is returned as SSL output,</li>\n</ul>\n", "default_value": "&#x27;ssl_target&#x27;"}, "dlc2action.ssl.segment_order.OrderSSL.ce": {"fullname": "dlc2action.ssl.segment_order.OrderSSL.ce", "modulename": "dlc2action.ssl.segment_order", "qualname": "OrderSSL.ce", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.segment_order.OrderSSL.orders": {"fullname": "dlc2action.ssl.segment_order.OrderSSL.orders", "modulename": "dlc2action.ssl.segment_order", "qualname": "OrderSSL.orders", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.segment_order.OrderSSL.len_segment": {"fullname": "dlc2action.ssl.segment_order.OrderSSL.len_segment", "modulename": "dlc2action.ssl.segment_order", "qualname": "OrderSSL.len_segment", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.segment_order.OrderSSL.num_segments": {"fullname": "dlc2action.ssl.segment_order.OrderSSL.num_segments", "modulename": "dlc2action.ssl.segment_order", "qualname": "OrderSSL.num_segments", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"fullname": "dlc2action.ssl.segment_order.OrderSSL.skip_frames", "modulename": "dlc2action.ssl.segment_order", "qualname": "OrderSSL.skip_frames", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.segment_order.OrderSSL.pars": {"fullname": "dlc2action.ssl.segment_order.OrderSSL.pars", "modulename": "dlc2action.ssl.segment_order", "qualname": "OrderSSL.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"fullname": "dlc2action.ssl.segment_order.OrderSSL.transformation", "modulename": "dlc2action.ssl.segment_order", "qualname": "OrderSSL.transformation", "kind": "function", "doc": "<p>Empty transformation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"fullname": "dlc2action.ssl.segment_order.OrderSSL.loss", "modulename": "dlc2action.ssl.segment_order", "qualname": "OrderSSL.loss", "kind": "function", "doc": "<p>Cross-entropy loss</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"fullname": "dlc2action.ssl.segment_order.OrderSSL.construct_module", "modulename": "dlc2action.ssl.segment_order", "qualname": "OrderSSL.construct_module", "kind": "function", "doc": "<p>Construct the SSL prediction module using the parameters specified at initialization</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.tcc": {"fullname": "dlc2action.ssl.tcc", "modulename": "dlc2action.ssl.tcc", "kind": "module", "doc": "<p></p>\n"}, "dlc2action.ssl.tcc.TCCSSL": {"fullname": "dlc2action.ssl.tcc.TCCSSL", "modulename": "dlc2action.ssl.tcc", "qualname": "TCCSSL", "kind": "class", "doc": "<p>A contrastive SSL class with an NT-Xent loss</p>\n\n<p>The SSL input and target are left empty (the SSL input is generated as an augmentation of the\ninput sample at runtime).</p>\n", "bases": "dlc2action.ssl.base_ssl.SSLConstructor"}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"fullname": "dlc2action.ssl.tcc.TCCSSL.__init__", "modulename": "dlc2action.ssl.tcc", "qualname": "TCCSSL.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_f_maps</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Size</span>,</span><span class=\"param\">\t<span class=\"n\">len_segment</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">projection_head_f_maps</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">loss_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;regression_mse_var&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">variance_lambda</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">normalize_indices</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">normalize_embeddings</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">similarity_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;l2&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">num_cycles</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">cycle_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">label_smoothing</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span></span>)</span>"}, "dlc2action.ssl.tcc.TCCSSL.type": {"fullname": "dlc2action.ssl.tcc.TCCSSL.type", "modulename": "dlc2action.ssl.tcc", "qualname": "TCCSSL.type", "kind": "variable", "doc": "<p>The <code>type</code> parameter defines interaction with the model:</p>\n\n<ul>\n<li><code>'ssl_input'</code>: a modification of the input data passes through the base network feature extraction module and the\nSSL module; it is returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'ssl_output'</code>:  the input data passes through the base network feature extraction module and the SSL module; it\nis returned as SSL output and compared to SSL target (or, if it is None, to the input data),</li>\n<li><code>'contrastive'</code>:  the input data and its modification pass through the base network feature extraction module and\nthe SSL module; an (input results, modification results) tuple is returned as SSL output,</li>\n<li><code>'contrastive_2layers'</code>: the input data and its modification pass through the base network feature extraction module; \nthe output of the second feature extraction layer for the modified data goes through an SSL module and then, \noptionally, that result and the first-level unmodified features pass another transformation; \nan (input results, modified results) tuple is returned as SSL output,</li>\n</ul>\n", "default_value": "&#x27;ssl_target&#x27;"}, "dlc2action.ssl.tcc.TCCSSL.len_segment": {"fullname": "dlc2action.ssl.tcc.TCCSSL.len_segment", "modulename": "dlc2action.ssl.tcc", "qualname": "TCCSSL.len_segment", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.tcc.TCCSSL.loss_function": {"fullname": "dlc2action.ssl.tcc.TCCSSL.loss_function", "modulename": "dlc2action.ssl.tcc", "qualname": "TCCSSL.loss_function", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.tcc.TCCSSL.pars": {"fullname": "dlc2action.ssl.tcc.TCCSSL.pars", "modulename": "dlc2action.ssl.tcc", "qualname": "TCCSSL.pars", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"fullname": "dlc2action.ssl.tcc.TCCSSL.transformation", "modulename": "dlc2action.ssl.tcc", "qualname": "TCCSSL.transformation", "kind": "function", "doc": "<p>Empty transformation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample_data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.tcc.TCCSSL.loss": {"fullname": "dlc2action.ssl.tcc.TCCSSL.loss", "modulename": "dlc2action.ssl.tcc", "qualname": "TCCSSL.loss", "kind": "function", "doc": "<p>Calculate the SSL loss</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>predicted : torch.Tensor\n    output of the SSL module\ntarget : torch.Tensor\n    augmented and stacked SSL_target</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>loss : float\n    the loss value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"fullname": "dlc2action.ssl.tcc.TCCSSL.construct_module", "modulename": "dlc2action.ssl.tcc", "qualname": "TCCSSL.construct_module", "kind": "function", "doc": "<p>Construct the SSL module</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>ssl_module : torch.nn.Module\n    a neural net module that takes features extracted by a model's feature extractor as input and\n    returns SSL output</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.task": {"fullname": "dlc2action.task", "modulename": "dlc2action.task", "kind": "module", "doc": "<h2 id=\"training-and-inference\">Training and inference</h2>\n\n<p><code>dlc2action.task.universal_task.Task</code> is the class that performs training and inference while\n'dlc2action.task.task_dispatcher.TaskDispatcher<code>creates and updates</code>dlc2action.task.universal_task.Task` instances\nin accordance with task parameter dictionaries.</p>\n"}, "dlc2action.task.task_dispatcher": {"fullname": "dlc2action.task.task_dispatcher", "modulename": "dlc2action.task.task_dispatcher", "kind": "module", "doc": "<p>Class that provides an interface for <code>dlc2action.task.universal_task.Task</code></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher", "kind": "class", "doc": "<p>A class that manages the interactions between config dictionaries and a Task</p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.__init__", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>parameters : dict\n    a dictionary of task parameters</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span>)</span>"}, "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.class_weights", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.general_parameters", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.data_parameters", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.model_parameters", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.training_parameters", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.loss_parameters", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.metric_parameters", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.ssl_parameters", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.aug_parameters", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.feature_parameters", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.blanks": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.blanks", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.blanks", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.task": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.task", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.task", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.complete_function_parameters", "kind": "function", "doc": "<p>Complete a parameter dictionary with values from other dictionaries if required by a function</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>parameters : dict\n    the function parameters dictionary\nfunction : callable\n    the function to be inspected\ngeneral_dicts : list\n    a list of dictionaries where the missing values will be pulled from</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parameters</span>, </span><span class=\"param\"><span class=\"n\">function</span>, </span><span class=\"param\"><span class=\"n\">general_dicts</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.complete_dataset_parameters", "kind": "function", "doc": "<p>Complete a parameter dictionary with values from other dictionaries if required by a dataset</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>parameters : dict\n    the function parameters dictionary\ngeneral_dict : dict\n    the dictionary where the missing values will be pulled from\ndata_type : str\n    the input type of the dataset\nannotation_type : str\n    the annotation type of the dataset</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>parameters : dict\n    the updated parameter dictionary</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">general_dict</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">data_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.check", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.check", "kind": "function", "doc": "<p>Check whether there is a non-<code>None</code> value under the name key in the parameters dictionary</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>parameters : dict\n    the dictionary to check\nname : str\n    the key to check</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>result : bool\n    True if a non-<code>None</code> value exists</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.get", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.get", "kind": "function", "doc": "<p>Get the value under the name key or the default if it is <code>None</code> or does not exist</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>parameters : dict\n    the dictionary to check\nname : str\n    the key to check\ndefault\n    the default value to return</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>value\n    the resulting value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">default</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.make_dataloader", "kind": "function", "doc": "<p>Make a torch dataloader from a dataset</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataset : dlc2action.data.dataset.BehaviorDataset\n    the dataset\nbatch_size : int\n    the batch size</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dataloader : DataLoader\n    the dataloader (or <code>None</code> if the length of the dataset is 0)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">shuffle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.update_task", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.update_task", "kind": "function", "doc": "<p>Update the <code>dlc2action.task.universal_task.Task</code> instance given the parameter updates</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>parameters : dict\n    the dictionary of parameter updates</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.train", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.train", "kind": "function", "doc": "<p>Train the task and return a log of epoch-average loss and metric</p>\n\n<p>You can use the autostop parameters to finish training when the parameters are not improving. It will be\nstopped if the average value of <code>autostop_metric</code> over the last <code>autostop_interval</code> epochs is smaller than\nthe average over the previous <code>autostop_interval</code> epochs + <code>autostop_threshold</code>. For example, if the\ncurrent epoch is 120 and <code>autostop_interval</code> is 50, the averages over epochs 70-120 and 20-70 will be compared.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>trial : Trial\n    an <code>optuna</code> trial (for hyperparameter searches)\noptimized_metric : str\n    the name of the metric being optimized (for hyperparameter searches)\nto_ram : bool, default False\n    if <code>True</code>, the dataset will be loaded in RAM (this speeds up the calculations but can lead to crashes\n    if the dataset is too large)\nautostop_interval : int, default 50\n    the number of epochs to average the autostop metric over\nautostop_threshold : float, default 0.001\n    the autostop difference threshold\nautostop_metric : str, optional\n    the autostop metric (can be any one of the tracked metrics of <code>'loss'</code>)\nmain_task_on : bool, default True\n    if <code>False</code>, the main task (action segmentation) will not be used in training\nssl_on : bool, default True\n    if <code>False</code>, the SSL task will not be used in training</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>loss_log: list\n    a list of float loss function values for each epoch\nmetrics_log: dict\n    a dictionary of metric value logs (first-level keys are 'train' and 'val', second-level keys are metric\n    names, values are lists of function values)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">_trial</span><span class=\"o\">.</span><span class=\"n\">Trial</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">optimized_metric</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">autostop_metric</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">autostop_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">autostop_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">loading_bar</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.save_model", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.save_model", "kind": "function", "doc": "<p>Save the model of the <code>dlc2action.task.universal_task.Task</code> instance</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>save_path : str\n    the path to the saved file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.evaluate", "kind": "function", "doc": "<p>Evaluate the Task model</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data : torch.utils.data.DataLoader | dlc2action.data.dataset.BehaviorDataset, optional\n    the data to evaluate on (if not provided, evaluate on the Task validation dataset)\naugment_n : int, default 0\n    the number of augmentations to average results over\nverbose : bool, default True\n    if True, the process is reported to standard output</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>loss : float\n    the average value of the loss function\nssl_loss : float\n    the average value of the SSL loss function\nmetric : dict\n    a dictionary of average values of metric functions</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span><span class=\"p\">,</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.evaluate_prediction", "kind": "function", "doc": "<p>Compute metrics for a prediction</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>prediction : torch.Tensor\n    the prediction\ndata : torch.utils.data.DataLoader | dlc2action.data.dataset.BehaviorDataset, optional\n    the data the prediction was made for (if not provided, take the validation dataset)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>loss : float\n    the average value of the loss function\nmetric : dict\n    a dictionary of average values of metric functions</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">prediction</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span><span class=\"p\">,</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.predict", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.predict", "kind": "function", "doc": "<p>Make a prediction with the Task model</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data : torch.utils.data.DataLoader | dlc2action.data.dataset.BehaviorDataset, optional\n    the data to evaluate on (if not provided, evaluate on the Task validation dataset)\nraw_output : bool, default False\n    if <code>True</code>, the raw predicted probabilities are returned\napply_primary_function : bool, default True\n    if <code>True</code>, the primary predict function is applied (to map the model output into a shape corresponding to\n    the input)\naugment_n : int, default 0\n    the number of augmentations to average results over</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>prediction : torch.Tensor\n    a prediction for the input data</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span><span class=\"p\">,</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">raw_output</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">apply_primary_function</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">embedding</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.dataset", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.dataset", "kind": "function", "doc": "<p>Get a dataset</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>mode : {'train', 'val', 'test'}\n    the dataset to get</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dataset : dlc2action.data.dataset.BehaviorDataset\n    the dataset</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;train&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.generate_full_length_prediction", "kind": "function", "doc": "<p>Compile a prediction for the original input sequences</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataset : dlc2action.data.dataset.BehaviorDataset | str, optional\n    the dataset to generate a prediction for (if <code>None</code>, generate for the <code>dlc2action.task.universal_task.Task</code>\n    instance validation dataset)\naugment_n : int, default 10\n    the number of augmentations to average results over</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>prediction : dict\n    a nested dictionary where first level keys are video ids, second level keys are clip ids and values\n    are prediction tensors</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.generate_submission", "kind": "function", "doc": "<p>Generate a MABe-22 style submission dictionary</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>frame_number_map_file : str\n    path to the frame number map file\ndataset : BehaviorDataset, optional\n    the dataset to generate a prediction for (if <code>None</code>, generate for the validation dataset)\naugment_n : int, default 10\n    the number of augmentations to average results over</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>submission : dict\n    a dictionary with frame number mapping and embeddings</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">frame_number_map_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.behaviors_dict", "kind": "function", "doc": "<p>Get a behavior dictionary</p>\n\n<p>Keys are label indices and values are label names.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>behaviors_dict : dict\n    behavior dictionary</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.count_classes", "kind": "function", "doc": "<p>Get a dictionary of class counts in different modes</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bouts : bool, default False\n    if <code>True</code>, instead of frame counts segment counts are returned</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>class_counts : dict\n    a dictionary where first-level keys are \"train\", \"val\" and \"test\", second-level keys are\n    class names and values are class counts (in frames)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">bouts</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.visualize_results", "kind": "function", "doc": "<p>Visualize random predictions</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>save_path : str, optional\n    the path where the plot will be saved\nadd_legend : bool, default True\n    if True, legend will be added to the plot\nground_truth : bool, default True\n    if True, ground truth will be added to the plot\ncolormap : str, default 'Accent'\n    the <code>matplotlib</code> colormap to use\nhide_axes : bool, default True\n    if <code>True</code>, the axes will be hidden on the plot\nmin_classes : int, default 1\n    the minimum number of classes in a displayed interval\nwidth : float, default 10\n    the width of the plot\nwhole_video : bool, default False\n    if <code>True</code>, whole videos are plotted instead of segments\ntransparent : bool, default False\n    if <code>True</code>, the background on the plot is transparent\ndataset : BehaviorDataset | DataLoader | str | None, optional\n    the dataset to make the prediction for (if not provided, the validation dataset is used)\ndrop_classes : set, optional\n    a set of class names to not be displayed\nsearch_classes : set, optional\n    if given, only intervals where at least one of the classes is in ground truth will be shown</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">add_legend</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ground_truth</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">colormap</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;viridis&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hide_axes</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">min_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">whole_video</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">transparent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">drop_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">search_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">smooth_interval_prediction</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.generate_uncertainty_score", "kind": "function", "doc": "<p>Generate frame-wise scores for active learning</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>classes : list\n    a list of class names or indices; their confidence scores will be computed separately and stacked\naugment_n : int, default 0\n    the number of augmentations to average over\nmethod : {\"least_confidence\", \"entropy\"}\n    the method used to calculate the scores from the probability predictions (<code>\"least_confidence\"</code>: <code>1 - p_i</code> if\n    <code>p_i &gt; 0.5</code> or <code>p_i</code> if <code>p_i &lt; 0.5</code>; <code>\"entropy\"</code>: <code>- p_i * log(p_i) - (1 - p_i) * log(1 - p_i)</code>)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>score_dicts : dict\n    a nested dictionary where first level keys are video ids, second level keys are clip ids and values\n    are score tensors</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">classes</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;least_confidence&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">behaviors_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.generate_bald_score", "kind": "function", "doc": "<p>Generate frame-wise Bayesian Active Learning by Disagreement scores for active learning</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>classes : list\n    a list of class names or indices; their confidence scores will be computed separately and stacked\naugment_n : int, default 0\n    the number of augmentations to average over\nnum_models : int, default 10\n    the number of dropout masks to apply\nkernel_size : int, default 11\n    the size of the smoothing gaussian kernel</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>score_dicts : dict\n    a nested dictionary where first level keys are video ids, second level keys are clip ids and values\n    are score tensors</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">classes</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_models</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">11</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.get_normalization_stats", "kind": "function", "doc": "<p>Get the pre-computed normalization stats</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>normalization_stats : dict\n    a dictionary of means and stds</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"fullname": "dlc2action.task.task_dispatcher.TaskDispatcher.exists", "modulename": "dlc2action.task.task_dispatcher", "qualname": "TaskDispatcher.exists", "kind": "function", "doc": "<p>Check whether the task has a train/test/validation subset</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>mode : {\"train\", \"val\", \"test\"}\n    the name of the subset to check for</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>exists : bool\n    <code>True</code> if the subset exists</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mode</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task": {"fullname": "dlc2action.task.universal_task", "modulename": "dlc2action.task.universal_task", "kind": "module", "doc": "<p>Training and inference</p>\n"}, "dlc2action.task.universal_task.MyDataParallel": {"fullname": "dlc2action.task.universal_task.MyDataParallel", "modulename": "dlc2action.task.universal_task", "qualname": "MyDataParallel", "kind": "class", "doc": "<p>Implements data parallelism at the module level.</p>\n\n<p>This container parallelizes the application of the given <code>module</code> by\nsplitting the input across the specified devices by chunking in the batch\ndimension (other objects will be copied once per device). In the forward\npass, the module is replicated on each device, and each replica handles a\nportion of the input. During the backwards pass, gradients from each replica\nare summed into the original module.</p>\n\n<p>The batch size should be larger than the number of GPUs used.</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>It is recommended to use <code>~torch.nn.parallel.DistributedDataParallel</code>,\ninstead of this class, to do multi-GPU training, even if there is only a single\nnode. See: :ref:<code>cuda-nn-ddp-instead</code> and :ref:<code>ddp</code>.</p>\n\n</div>\n\n<p>Arbitrary positional and keyword inputs are allowed to be passed into\nDataParallel but some types are specially handled. tensors will be\n<strong>scattered</strong> on dim specified (default 0). tuple, list and dict types will\nbe shallow copied. The other types will be shared among different threads\nand can be corrupted if written to in the model's forward pass.</p>\n\n<p>The parallelized <code>module</code> must have its parameters and buffers on\n<code>device_ids[0]</code> before running this <code>~torch.nn.DataParallel</code>\nmodule.</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>In each forward, <code>module</code> is <strong>replicated</strong> on each device, so any\nupdates to the running module in <code>forward</code> will be lost. For example,\nif <code>module</code> has a counter attribute that is incremented in each\n<code>forward</code>, it will always stay at the initial value because the update\nis done on the replicas which are destroyed after <code>forward</code>. However,\n<code>~torch.nn.DataParallel</code> guarantees that the replica on\n<code>device[0]</code> will have its parameters and buffers sharing storage with\nthe base parallelized <code>module</code>. So <strong>in-place</strong> updates to the\nparameters or buffers on <code>device[0]</code> will be recorded. E.g.,\n<code>~torch.nn.BatchNorm2d</code> and <code>~torch.nn.utils.spectral_norm()</code>\nrely on this behavior to update the buffers.</p>\n\n</div>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>Forward and backward hooks defined on <code>module</code> and its submodules\nwill be invoked <code>len(device_ids)</code> times, each with inputs located on\na particular device. Particularly, the hooks are only guaranteed to be\nexecuted in correct order with respect to operations on corresponding\ndevices. For example, it is not guaranteed that hooks set via\n<code>~torch.nn.Module.register_forward_pre_hook()</code> be executed before\n<code>all</code> <code>len(device_ids)</code> <code>~torch.nn.Module.forward()</code> calls, but\nthat each such hook be executed before the corresponding\n<code>~torch.nn.Module.forward()</code> call of that device.</p>\n\n</div>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>When <code>module</code> returns a scalar (i.e., 0-dimensional tensor) in\n<code>forward()</code>, this wrapper will return a vector of length equal to\nnumber of devices used in data parallelism, containing the result from\neach device.</p>\n\n</div>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>There is a subtlety in using the\n<code>pack sequence -&gt; recurrent network -&gt; unpack sequence</code> pattern in a\n<code>~torch.nn.Module</code> wrapped in <code>~torch.nn.DataParallel</code>.\nSee :ref:<code>pack-rnn-unpack-with-data-parallelism</code> section in FAQ for\ndetails.</p>\n\n</div>\n\n<p>Args:\n    module (Module): module to be parallelized\n    device_ids (list of int or torch.device): CUDA devices (default: all devices)\n    output_device (int or torch.device): device location of output (default: device_ids[0])</p>\n\n<p>Attributes:\n    module (Module): the module to be parallelized</p>\n\n<p>Example::</p>\n\n<pre><code>&gt;&gt;&gt; # xdoctest: +SKIP\n&gt;&gt;&gt; net = torch.nn.DataParallel(model, device_ids=[0, 1, 2])\n&gt;&gt;&gt; output = net(input_var)  # input_var can be on any device, including CPU\n</code></pre>\n", "bases": "torch.nn.parallel.data_parallel.DataParallel"}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"fullname": "dlc2action.task.universal_task.MyDataParallel.__init__", "modulename": "dlc2action.task.universal_task", "qualname": "MyDataParallel.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.task.universal_task.MyDataParallel.process_labels": {"fullname": "dlc2action.task.universal_task.MyDataParallel.process_labels", "modulename": "dlc2action.task.universal_task", "qualname": "MyDataParallel.process_labels", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"fullname": "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor", "modulename": "dlc2action.task.universal_task", "qualname": "MyDataParallel.freeze_feature_extractor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"fullname": "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor", "modulename": "dlc2action.task.universal_task", "qualname": "MyDataParallel.unfreeze_feature_extractor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"fullname": "dlc2action.task.universal_task.MyDataParallel.transform_labels", "modulename": "dlc2action.task.universal_task", "qualname": "MyDataParallel.transform_labels", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">device</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.MyDataParallel.logit_scale": {"fullname": "dlc2action.task.universal_task.MyDataParallel.logit_scale", "modulename": "dlc2action.task.universal_task", "qualname": "MyDataParallel.logit_scale", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"fullname": "dlc2action.task.universal_task.MyDataParallel.main_task_off", "modulename": "dlc2action.task.universal_task", "qualname": "MyDataParallel.main_task_off", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"fullname": "dlc2action.task.universal_task.MyDataParallel.state_dict", "modulename": "dlc2action.task.universal_task", "qualname": "MyDataParallel.state_dict", "kind": "function", "doc": "<p>Returns a dictionary containing references to the whole state of the module.</p>\n\n<p>Both parameters and persistent buffers (e.g. running averages) are\nincluded. Keys are corresponding parameter and buffer names.\nParameters and buffers set to <code>None</code> are not included.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>The returned object is a shallow copy. It contains references\nto the module's parameters and buffers.</p>\n\n</div>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>Currently <code>state_dict()</code> also accepts positional arguments for\n<code>destination</code>, <code>prefix</code> and <code>keep_vars</code> in order. However,\nthis is being deprecated and keyword arguments will be enforced in\nfuture releases.</p>\n\n</div>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>Please avoid the use of argument <code>destination</code> as it is not\ndesigned for end-users.</p>\n\n</div>\n\n<p>Args:\n    destination (dict, optional): If provided, the state of module will\n        be updated into the dict and the same object is returned.\n        Otherwise, an <code>OrderedDict</code> will be created and returned.\n        Default: <code>None</code>.\n    prefix (str, optional): a prefix added to parameter and buffer\n        names to compose the keys in state_dict. Default: <code>''</code>.\n    keep_vars (bool, optional): by default the <code>~torch.Tensor</code> s\n        returned in the state dict are detached from autograd. If it's\n        set to <code>True</code>, detaching will not be performed.\n        Default: <code>False</code>.</p>\n\n<p>Returns:\n    dict:\n        a dictionary containing a whole state of the module</p>\n\n<p>Example::</p>\n\n<pre><code>&gt;&gt;&gt; # xdoctest: +SKIP(\"undefined vars\")\n&gt;&gt;&gt; module.state_dict().keys()\n['bias', 'weight']\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"fullname": "dlc2action.task.universal_task.MyDataParallel.ssl_on", "modulename": "dlc2action.task.universal_task", "qualname": "MyDataParallel.ssl_on", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"fullname": "dlc2action.task.universal_task.MyDataParallel.ssl_off", "modulename": "dlc2action.task.universal_task", "qualname": "MyDataParallel.ssl_off", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"fullname": "dlc2action.task.universal_task.MyDataParallel.extract_features", "modulename": "dlc2action.task.universal_task", "qualname": "MyDataParallel.extract_features", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task": {"fullname": "dlc2action.task.universal_task.Task", "modulename": "dlc2action.task.universal_task", "qualname": "Task", "kind": "class", "doc": "<p>A universal trainer class that performs training, evaluation and prediction for all types of tasks and data</p>\n"}, "dlc2action.task.universal_task.Task.__init__": {"fullname": "dlc2action.task.universal_task.Task.__init__", "modulename": "dlc2action.task.universal_task", "qualname": "Task.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>train_dataloader : torch.utils.data.DataLoader\n    a training dataloader\nmodel : dlc2action.model.base_model.Model\n    a model\nloss : callable\n    a loss function\nnum_epochs : int, default 0\n    the number of epochs\ntransformer : dlc2action.transformer.base_transformer.Transformer, optional\n    a transformer\nssl_losses : list, optional\n    a list of SSL losses\nssl_weights : list, optional\n    a list of SSL weights (if not provided initializes to 1)\nlr : float, default 1e-3\n    learning rate\nmetrics : dict, optional\n    a list of metric functions\nval_dataloader : torch.utils.data.DataLoader, optional\n    a validation dataloader\noptimizer : torch.optim.Optimizer, optional\n    an optimizer (<code>Adam</code> by default)\ndevice : str, default 'cuda'\n    the device to train the model on\nverbose : bool, default True\n    if <code>True</code>, the process is described in standard output\nlog_file : str, optional\n    the path to a text file where the process will be logged\naugment_train : {1, 0}\n    number of augmentations to apply at training\naugment_val : int, default 0\n    number of augmentations to apply at validation\nvalidation_interval : int, default 1\n    every time this number of epochs passes, validation metrics are computed\npredict_function : callable, optional\n    a function that maps probabilities to class predictions (if not provided, a default is generated)\nprimary_predict_function : callable, optional\n    a function that maps model output to probabilities (if not provided, initialized as identity)\nexclusive : bool, default True\n    set to False for multi-label classification\nignore_tags : bool, default False\n    if <code>True</code>, samples with different meta tags will be mixed in batches\nthreshold : float, default 0.5\n    the threshold used for multi-label classification default prediction function\nmodel_save_path : str, optional\n    the path to the folder where model checkpoints will be saved (checkpoints will not be saved if the path\n    is not provided)\nmodel_save_epochs : int, default 5\n    the interval for saving the model checkpoints (the last epoch is always saved)\npseudolabel : bool, default False\n    if True, the pseudolabeling procedure will be applied\npseudolabel_start : int, default 100\n    pseudolabeling starts after this epoch\ncorrection_interval : int, default 1\n    after this number of epochs, if the pseudolabeling is on, the model is trained on the labeled data and\n    new pseudolabels are generated\npseudolabel_alpha_f : float, default 3\n    the maximum value of pseudolabeling alpha\nalpha_growth_stop : int, default 600\n    pseudolabeling alpha stops growing after this epoch</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">train_dataloader</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">base_model</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">loss</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">],</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">num_epochs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">transformer</span><span class=\"p\">:</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">transformer</span><span class=\"o\">.</span><span class=\"n\">base_transformer</span><span class=\"o\">.</span><span class=\"n\">Transformer</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_losses</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_weights</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lr</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">val_dataloader</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">test_dataloader</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">Optimizer</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cuda&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">log_file</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">augment_train</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">augment_val</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">validation_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">predict_function</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">],</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">primary_predict_function</span><span class=\"p\">:</span> <span class=\"n\">Callable</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclusive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_tags</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">model_save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model_save_epochs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">pseudolabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pseudolabel_start</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">correction_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">pseudolabel_alpha_f</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">alpha_growth_stop</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">600</span>,</span><span class=\"param\">\t<span class=\"n\">parallel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">skip_metrics</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.task.universal_task.Task.train_dataloader": {"fullname": "dlc2action.task.universal_task.Task.train_dataloader", "modulename": "dlc2action.task.universal_task", "qualname": "Task.train_dataloader", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.val_dataloader": {"fullname": "dlc2action.task.universal_task.Task.val_dataloader", "modulename": "dlc2action.task.universal_task", "qualname": "Task.val_dataloader", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.test_dataloader": {"fullname": "dlc2action.task.universal_task.Task.test_dataloader", "modulename": "dlc2action.task.universal_task", "qualname": "Task.test_dataloader", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.transformer": {"fullname": "dlc2action.task.universal_task.Task.transformer", "modulename": "dlc2action.task.universal_task", "qualname": "Task.transformer", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.num_epochs": {"fullname": "dlc2action.task.universal_task.Task.num_epochs", "modulename": "dlc2action.task.universal_task", "qualname": "Task.num_epochs", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.skip_metrics": {"fullname": "dlc2action.task.universal_task.Task.skip_metrics", "modulename": "dlc2action.task.universal_task", "qualname": "Task.skip_metrics", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.verbose": {"fullname": "dlc2action.task.universal_task.Task.verbose", "modulename": "dlc2action.task.universal_task", "qualname": "Task.verbose", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.augment_train": {"fullname": "dlc2action.task.universal_task.Task.augment_train", "modulename": "dlc2action.task.universal_task", "qualname": "Task.augment_train", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.augment_val": {"fullname": "dlc2action.task.universal_task.Task.augment_val", "modulename": "dlc2action.task.universal_task", "qualname": "Task.augment_val", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.ignore_tags": {"fullname": "dlc2action.task.universal_task.Task.ignore_tags", "modulename": "dlc2action.task.universal_task", "qualname": "Task.ignore_tags", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.validation_interval": {"fullname": "dlc2action.task.universal_task.Task.validation_interval", "modulename": "dlc2action.task.universal_task", "qualname": "Task.validation_interval", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.log_file": {"fullname": "dlc2action.task.universal_task.Task.log_file", "modulename": "dlc2action.task.universal_task", "qualname": "Task.log_file", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.loss": {"fullname": "dlc2action.task.universal_task.Task.loss", "modulename": "dlc2action.task.universal_task", "qualname": "Task.loss", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.model_save_path": {"fullname": "dlc2action.task.universal_task.Task.model_save_path", "modulename": "dlc2action.task.universal_task", "qualname": "Task.model_save_path", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.model_save_epochs": {"fullname": "dlc2action.task.universal_task.Task.model_save_epochs", "modulename": "dlc2action.task.universal_task", "qualname": "Task.model_save_epochs", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.epoch": {"fullname": "dlc2action.task.universal_task.Task.epoch", "modulename": "dlc2action.task.universal_task", "qualname": "Task.epoch", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.metrics": {"fullname": "dlc2action.task.universal_task.Task.metrics", "modulename": "dlc2action.task.universal_task", "qualname": "Task.metrics", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.ssl_weights": {"fullname": "dlc2action.task.universal_task.Task.ssl_weights", "modulename": "dlc2action.task.universal_task", "qualname": "Task.ssl_weights", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.optimizer_class": {"fullname": "dlc2action.task.universal_task.Task.optimizer_class", "modulename": "dlc2action.task.universal_task", "qualname": "Task.optimizer_class", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.lr": {"fullname": "dlc2action.task.universal_task.Task.lr", "modulename": "dlc2action.task.universal_task", "qualname": "Task.lr", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.parallel": {"fullname": "dlc2action.task.universal_task.Task.parallel", "modulename": "dlc2action.task.universal_task", "qualname": "Task.parallel", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.primary_predict_function": {"fullname": "dlc2action.task.universal_task.Task.primary_predict_function", "modulename": "dlc2action.task.universal_task", "qualname": "Task.primary_predict_function", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.pseudolabel": {"fullname": "dlc2action.task.universal_task.Task.pseudolabel", "modulename": "dlc2action.task.universal_task", "qualname": "Task.pseudolabel", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.alpha_f": {"fullname": "dlc2action.task.universal_task.Task.alpha_f", "modulename": "dlc2action.task.universal_task", "qualname": "Task.alpha_f", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.T2": {"fullname": "dlc2action.task.universal_task.Task.T2", "modulename": "dlc2action.task.universal_task", "qualname": "Task.T2", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.T1": {"fullname": "dlc2action.task.universal_task.Task.T1", "modulename": "dlc2action.task.universal_task", "qualname": "Task.T1", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.t": {"fullname": "dlc2action.task.universal_task.Task.t", "modulename": "dlc2action.task.universal_task", "qualname": "Task.t", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.decision_thresholds": {"fullname": "dlc2action.task.universal_task.Task.decision_thresholds", "modulename": "dlc2action.task.universal_task", "qualname": "Task.decision_thresholds", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.task.universal_task.Task.save_checkpoint": {"fullname": "dlc2action.task.universal_task.Task.save_checkpoint", "modulename": "dlc2action.task.universal_task", "qualname": "Task.save_checkpoint", "kind": "function", "doc": "<p>Save a general checkpoint</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>checkpoint_path : str\n    the path where the checkpoint will be saved</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">checkpoint_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"fullname": "dlc2action.task.universal_task.Task.load_from_checkpoint", "modulename": "dlc2action.task.universal_task", "qualname": "Task.load_from_checkpoint", "kind": "function", "doc": "<p>Load from a checkpoint</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>checkpoint_path : str\n    the path to the checkpoint\nonly_model : bool, default False\n    if <code>True</code>, only the model state dictionary will be loaded (and not the epoch and the optimizer state\n    dictionary)\nload_strict : bool, default True\n    if <code>True</code>, any inconsistencies in state dictionaries are regarded as errors</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">checkpoint_path</span>,</span><span class=\"param\">\t<span class=\"n\">only_model</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">load_strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.save_model": {"fullname": "dlc2action.task.universal_task.Task.save_model", "modulename": "dlc2action.task.universal_task", "qualname": "Task.save_model", "kind": "function", "doc": "<p>Save the model state dictionary</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>save_path : str\n    the path where the state will be saved</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.train": {"fullname": "dlc2action.task.universal_task.Task.train", "modulename": "dlc2action.task.universal_task", "qualname": "Task.train", "kind": "function", "doc": "<p>Train the task and return a log of epoch-average loss and metric</p>\n\n<p>You can use the autostop parameters to finish training when the parameters are not improving. It will be\nstopped if the average value of <code>autostop_metric</code> over the last <code>autostop_interval</code> epochs is smaller than\nthe average over the previous <code>autostop_interval</code> epochs + <code>autostop_threshold</code>. For example, if the\ncurrent epoch is 120 and <code>autostop_interval</code> is 50, the averages over epochs 70-120 and 20-70 will be compared.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>trial : Trial\n    an <code>optuna</code> trial (for hyperparameter searches)\noptimized_metric : str\n    the name of the metric being optimized (for hyperparameter searches)\nto_ram : bool, default False\n    if <code>True</code>, the dataset will be loaded in RAM (this speeds up the calculations but can lead to crashes\n    if the dataset is too large)\nautostop_interval : int, default 50\n    the number of epochs to average the autostop metric over\nautostop_threshold : float, default 0.001\n    the autostop difference threshold\nautostop_metric : str, optional\n    the autostop metric (can be any one of the tracked metrics of <code>'loss'</code>)\nmain_task_on : bool, default True\n    if <code>False</code>, the main task (action segmentation) will not be used in training\nssl_on : bool, default True\n    if <code>False</code>, the SSL task will not be used in training</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>loss_log: list\n    a list of float loss function values for each epoch\nmetrics_log: dict\n    a dictionary of metric value logs (first-level keys are 'train' and 'val', second-level keys are metric\n    names, values are lists of function values)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">_trial</span><span class=\"o\">.</span><span class=\"n\">Trial</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">optimized_metric</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">to_ram</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">autostop_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">autostop_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">autostop_metric</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">main_task_on</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_on</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">temporal_subsampling_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">loading_bar</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"fullname": "dlc2action.task.universal_task.Task.evaluate_prediction", "modulename": "dlc2action.task.universal_task", "qualname": "Task.evaluate_prediction", "kind": "function", "doc": "<p>Compute metrics for a prediction</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>prediction : torch.Tensor\n    the prediction\ndata : torch.utils.data.DataLoader | dlc2action.data.dataset.BehaviorDataset, optional\n    the data the prediction was made for (if not provided, take the validation dataset)\nbatch_size : int, default 32\n    the batch size</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>loss : float\n    the average value of the loss function\nmetric : dict\n    a dictionary of average values of metric functions</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">prediction</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span><span class=\"p\">,</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.evaluate": {"fullname": "dlc2action.task.universal_task.Task.evaluate", "modulename": "dlc2action.task.universal_task", "qualname": "Task.evaluate", "kind": "function", "doc": "<p>Evaluate the Task model</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data : torch.utils.data.DataLoader | dlc2action.data.dataset.BehaviorDataset, optional\n    the data to evaluate on (if not provided, evaluate on the Task validation dataset)\naugment_n : int, default 0\n    the number of augmentations to average results over\nbatch_size : int, default 32\n    the batch size\nverbose : bool, default True\n    if True, the process is reported to standard output</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>loss : float\n    the average value of the loss function\nssl_loss : float\n    the average value of the SSL loss function\nmetric : dict\n    a dictionary of average values of metric functions</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span><span class=\"p\">,</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.predict": {"fullname": "dlc2action.task.universal_task.Task.predict", "modulename": "dlc2action.task.universal_task", "qualname": "Task.predict", "kind": "function", "doc": "<p>Make a prediction with the Task model</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data : torch.utils.data.DataLoader | dlc2action.data.dataset.BehaviorDataset | str, optional\n    the data to evaluate on (if not provided, evaluate on the Task validation dataset)\nraw_output : bool, default False\n    if <code>True</code>, the raw predicted probabilities are returned\napply_primary_function : bool, default True\n    if <code>True</code>, the primary predict function is applied (to map the model output into a shape corresponding to\n    the input)\naugment_n : int, default 0\n    the number of augmentations to average results over\nbatch_size : int, default 32\n    the batch size\ntrain_mode : bool, default False\n    if <code>True</code>, the model is used in training mode (affects dropout and batch normalization layers)\nto_ram : bool, default False\n    if <code>True</code>, the dataset will be loaded in RAM (this speeds up the calculations but can lead to crashes\n    if the dataset is too large)\nembedding : bool, default False\n    if <code>True</code>, the output of feature extractor is returned, ignoring the prediction module of the model</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>prediction : torch.Tensor\n    a prediction for the input data</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span><span class=\"p\">,</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">raw_output</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">apply_primary_function</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">train_mode</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">to_ram</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">embedding</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.dataset": {"fullname": "dlc2action.task.universal_task.Task.dataset", "modulename": "dlc2action.task.universal_task", "qualname": "Task.dataset", "kind": "function", "doc": "<p>Get a dataset</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>mode : {'train', 'val', 'test}\n    the dataset to get</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dataset : dlc2action.data.dataset.BehaviorDataset\n    the dataset</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;train&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.dataloader": {"fullname": "dlc2action.task.universal_task.Task.dataloader", "modulename": "dlc2action.task.universal_task", "qualname": "Task.dataloader", "kind": "function", "doc": "<p>Get a dataloader</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>mode : {'train', 'val', 'test}\n    the dataset to get</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dataloader : torch.utils.data.DataLoader\n    the dataloader</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;train&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"fullname": "dlc2action.task.universal_task.Task.generate_full_length_prediction", "modulename": "dlc2action.task.universal_task", "qualname": "Task.generate_full_length_prediction", "kind": "function", "doc": "<p>Compile a prediction for the original input sequences</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataset : BehaviorDataset, optional\n    the dataset to generate a prediction for (if <code>None</code>, generate for the validation dataset)\nbatch_size : int, default 32\n    the batch size\naugment_n : int, default 10\n    the number of augmentations to average results over</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>prediction : dict\n    a nested dictionary where first level keys are video ids, second level keys are clip ids and values\n    are prediction tensors</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dataset</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span>, </span><span class=\"param\"><span class=\"n\">augment_n</span><span class=\"o\">=</span><span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.generate_submission": {"fullname": "dlc2action.task.universal_task.Task.generate_submission", "modulename": "dlc2action.task.universal_task", "qualname": "Task.generate_submission", "kind": "function", "doc": "<p>Generate a MABe-22 style submission dictionary</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataset : BehaviorDataset, optional\n    the dataset to generate a prediction for (if <code>None</code>, generate for the validation dataset)\nbatch_size : int, default 32\n    the batch size\naugment_n : int, default 10\n    the number of augmentations to average results over</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>submission : dict\n    a dictionary with frame number mapping and embeddings</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">frame_number_map_file</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"o\">=</span><span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.visualize_results": {"fullname": "dlc2action.task.universal_task.Task.visualize_results", "modulename": "dlc2action.task.universal_task", "qualname": "Task.visualize_results", "kind": "function", "doc": "<p>Visualize random predictions</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>save_path : str, optional\n    the path where the plot will be saved\nadd_legend : bool, default True\n    if <code>True</code>, legend will be added to the plot\nground_truth : bool, default True\n    if <code>True</code>, ground truth will be added to the plot\ncolormap : str, default 'Accent'\n    the <code>matplotlib</code> colormap to use\nhide_axes : bool, default True\n    if <code>True</code>, the axes will be hidden on the plot\nmin_classes : int, default 1\n    the minimum number of classes in a displayed interval\nwidth : float, default 10\n    the width of the plot\nwhole_video : bool, default False\n    if <code>True</code>, whole videos are plotted instead of segments\ntransparent : bool, default False\n    if <code>True</code>, the background on the plot is transparent\ndataset : BehaviorDataset | DataLoader | str | None, optional\n    the dataset to make the prediction for (if not provided, the validation dataset is used)\ndrop_classes : set, optional\n    a set of class names to not be displayed\nsearch_classes : set, optional\n    if given, only intervals where at least one of the classes is in ground truth will be shown</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">add_legend</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ground_truth</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">colormap</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;viridis&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hide_axes</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">min_classes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">whole_video</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">transparent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">BehaviorDataset</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">drop_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">search_classes</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_samples</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">smooth_interval_prediction</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">behavior_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"fullname": "dlc2action.task.universal_task.Task.set_ssl_transformations", "modulename": "dlc2action.task.universal_task", "qualname": "Task.set_ssl_transformations", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ssl_transformations</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"fullname": "dlc2action.task.universal_task.Task.set_ssl_losses", "modulename": "dlc2action.task.universal_task", "qualname": "Task.set_ssl_losses", "kind": "function", "doc": "<p>Set SSL losses</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>ssl_losses : list\n    a list of callable SSL losses</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ssl_losses</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.set_log": {"fullname": "dlc2action.task.universal_task.Task.set_log", "modulename": "dlc2action.task.universal_task", "qualname": "Task.set_log", "kind": "function", "doc": "<p>Set the log file</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>log: str\n    the mew log file path</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">log</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"fullname": "dlc2action.task.universal_task.Task.set_keep_target_none", "modulename": "dlc2action.task.universal_task", "qualname": "Task.set_keep_target_none", "kind": "function", "doc": "<p>Set the keep_target_none parameter of the transformer</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>keep_target_none : list\n    a list of bool values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">keep_target_none</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"fullname": "dlc2action.task.universal_task.Task.set_generate_ssl_input", "modulename": "dlc2action.task.universal_task", "qualname": "Task.set_generate_ssl_input", "kind": "function", "doc": "<p>Set the generate_ssl_input parameter of the transformer</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>generate_ssl_input : list\n    a list of bool values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">generate_ssl_input</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.set_model": {"fullname": "dlc2action.task.universal_task.Task.set_model", "modulename": "dlc2action.task.universal_task", "qualname": "Task.set_model", "kind": "function", "doc": "<p>Set a new model</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>model: Model\n    the new model</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">base_model</span><span class=\"o\">.</span><span class=\"n\">Model</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.set_dataloaders": {"fullname": "dlc2action.task.universal_task.Task.set_dataloaders", "modulename": "dlc2action.task.universal_task", "qualname": "Task.set_dataloaders", "kind": "function", "doc": "<p>Set new dataloaders</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>train_dataloader: torch.utils.data.DataLoader\n    the new train dataloader\nval_dataloader : torch.utils.data.DataLoader\n    the new validation dataloader\ntest_dataloader : torch.utils.data.DataLoader\n    the new test dataloader</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">train_dataloader</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span>,</span><span class=\"param\">\t<span class=\"n\">val_dataloader</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">test_dataloader</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.set_loss": {"fullname": "dlc2action.task.universal_task.Task.set_loss", "modulename": "dlc2action.task.universal_task", "qualname": "Task.set_loss", "kind": "function", "doc": "<p>Set new loss function</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>loss: callable\n    the new loss function</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">loss</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.set_metrics": {"fullname": "dlc2action.task.universal_task.Task.set_metrics", "modulename": "dlc2action.task.universal_task", "qualname": "Task.set_metrics", "kind": "function", "doc": "<p>Set new metric</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>metrics : dict\n    the new metric dictionary</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.set_transformer": {"fullname": "dlc2action.task.universal_task.Task.set_transformer", "modulename": "dlc2action.task.universal_task", "qualname": "Task.set_transformer", "kind": "function", "doc": "<p>Set a new transformer</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>transformer: Transformer\n    the new transformer</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">transformer</span><span class=\"p\">:</span> <span class=\"n\">dlc2action</span><span class=\"o\">.</span><span class=\"n\">transformer</span><span class=\"o\">.</span><span class=\"n\">base_transformer</span><span class=\"o\">.</span><span class=\"n\">Transformer</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.set_predict_functions": {"fullname": "dlc2action.task.universal_task.Task.set_predict_functions", "modulename": "dlc2action.task.universal_task", "qualname": "Task.set_predict_functions", "kind": "function", "doc": "<p>Set new predict functions</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>primary_predict_function : callable\n    the new primary predict function\npredict_function : callable\n    the new predict function</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">primary_predict_function</span><span class=\"p\">:</span> <span class=\"n\">Callable</span>,</span><span class=\"param\">\t<span class=\"n\">predict_function</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.count_classes": {"fullname": "dlc2action.task.universal_task.Task.count_classes", "modulename": "dlc2action.task.universal_task", "qualname": "Task.count_classes", "kind": "function", "doc": "<p>Get a dictionary of class counts in different modes</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bouts : bool, default False\n    if <code>True</code>, instead of frame counts segment counts are returned</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>class_counts : dict\n    a dictionary where first-level keys are \"train\", \"val\" and \"test\", second-level keys are\n    class names and values are class counts (in frames)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">bouts</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.behaviors_dict": {"fullname": "dlc2action.task.universal_task.Task.behaviors_dict", "modulename": "dlc2action.task.universal_task", "qualname": "Task.behaviors_dict", "kind": "function", "doc": "<p>Get a behavior dictionary</p>\n\n<p>Keys are label indices and values are label names.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>behaviors_dict : dict\n    behavior dictionary</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.update_parameters": {"fullname": "dlc2action.task.universal_task.Task.update_parameters", "modulename": "dlc2action.task.universal_task", "qualname": "Task.update_parameters", "kind": "function", "doc": "<p>Update training parameters from a dictionary</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>parameters : dict\n    the update dictionary</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"fullname": "dlc2action.task.universal_task.Task.generate_uncertainty_score", "modulename": "dlc2action.task.universal_task", "qualname": "Task.generate_uncertainty_score", "kind": "function", "doc": "<p>Generate frame-wise scores for active learning</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>classes : list\n    a list of class names or indices; their confidence scores will be computed separately and stacked\naugment_n : int, default 0\n    the number of augmentations to average over\nbatch_size : int, default 32\n    the batch size\nmethod : {\"least_confidence\", \"entropy\"}\n    the method used to calculate the scores from the probability predictions (<code>\"least_confidence\"</code>: <code>1 - p_i</code> if\n    <code>p_i &gt; 0.5</code> or <code>p_i</code> if <code>p_i &lt; 0.5</code>; <code>\"entropy\"</code>: <code>- p_i * log(p_i) - (1 - p_i) * log(1 - p_i)</code>)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>score_dicts : dict\n    a nested dictionary where first level keys are video ids, second level keys are clip ids and values\n    are score tensors</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">classes</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;least_confidence&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">predicted</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">behaviors_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.generate_bald_score": {"fullname": "dlc2action.task.universal_task.Task.generate_bald_score", "modulename": "dlc2action.task.universal_task", "qualname": "Task.generate_bald_score", "kind": "function", "doc": "<p>Generate frame-wise Bayesian Active Learning by Disagreement scores for active learning</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>classes : list\n    a list of class names or indices; their confidence scores will be computed separately and stacked\naugment_n : int, default 0\n    the number of augmentations to average over\nbatch_size : int, default 32\n    the batch size\nnum_models : int, default 10\n    the number of dropout masks to apply\nkernel_size : int, default 11\n    the size of the smoothing gaussian kernel</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>score_dicts : dict\n    a nested dictionary where first level keys are video ids, second level keys are clip ids and values\n    are score tensors</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">classes</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">augment_n</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">num_models</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">11</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"fullname": "dlc2action.task.universal_task.Task.get_normalization_stats", "modulename": "dlc2action.task.universal_task", "qualname": "Task.get_normalization_stats", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.transformer": {"fullname": "dlc2action.transformer", "modulename": "dlc2action.transformer", "kind": "module", "doc": "<h2 id=\"augmentations-and-feature-concatenation\">Augmentations and feature concatenation</h2>\n\n<p>Input data in <code>dlc2action</code> is stored in feature dictionaries right up until being passed to a model.\nThat makes it possible to define universal augmentations and SSL transformations that work on a range of datasets\nnaturally. Those dictionaries are generated by a <em>feature extractor</em> when a <code>dlc2action.data.base_store.InputStore</code>\ninstance is initialised. They are\nthen (optionally) processed by SSL transformations (see <code>dlc2action.ssl) and finally merged into tensors by\n*transformers*.</code>dlc2action.transformer.base_transformer.Transformer` instances\ncan also perform augmentations before the merging.</p>\n"}, "dlc2action.transformer.base_transformer": {"fullname": "dlc2action.transformer.base_transformer", "modulename": "dlc2action.transformer.base_transformer", "kind": "module", "doc": "<p>Abstract parent class for transformers</p>\n"}, "dlc2action.transformer.base_transformer.Transformer": {"fullname": "dlc2action.transformer.base_transformer.Transformer", "modulename": "dlc2action.transformer.base_transformer", "qualname": "Transformer", "kind": "class", "doc": "<p>A base class for all transformers</p>\n\n<p>A transformer should apply augmentations and generate model input and training target tensors.</p>\n\n<p>All augmentation functions need to take <code>(main_input: dict, ssl_inputs: list, ssl_targets: list)</code>\nas input and return an output of the same format. Here <code>main_input</code> is a feature dictionary of the sample\ndata, <code>ssl_inputs</code> is a list of SSL input feature dictionaries and <code>ssl_targets</code> is a list of SSL target\nfeature dictionaries. The same augmentations are applied to all inputs and then <code>None</code> values are replaced\naccording to the rules set by <code>keep_target_none</code> and <code>generate_ssl_input</code> parameters and the feature\ndictionaries are compiled into tensors.</p>\n", "bases": "abc.ABC"}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"fullname": "dlc2action.transformer.base_transformer.Transformer.__init__", "modulename": "dlc2action.transformer.base_transformer", "qualname": "Transformer.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>augmentations : list, optional\n    a list of string names of augmentations to use (if not provided, either no augmentations are applied or\n    (if use_default_augmentations is True) a default list is used\nuse_default_augmentations : bool, default False\n    if True and augmentations are not passed, default augmentations will be applied; otherwise no augmentations\ngenerate_ssl_input : list, optional\n    a list of bool values of the length of the number of SSL modules being used; if the corresponding bool value\n    is <code>True</code>, the ssl input will be generated as a new augmentation of main input (if not provided defaults to\n    <code>False</code> for each module)\nkeep_target_none : list, optional\n    a list of bool values of the length of the number of SSL modules being used; if the corresponding bool value\n    is <code>False</code> and the SSL target is <code>None</code>, the target is set to augmented main input (if not provided defaults\n    to <code>True</code> for each module)\nssl_augmentations : list, optional\n    a list of augmentation names to be applied with generating SSL input (when <code>generate_ssl_input</code> is True)\n    (if not provided, defaults to the main augmentations list)\ngraph_features : bool, default False\n    if <code>True</code>, all features in each frame can be meaningfully reshaped to <code>(#bodyparts, #features)</code>\nbodyparts_order : list, optional\n    a list of bodypart names, optional</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">augmentations</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_default_augmentations</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">generate_ssl_input</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keep_target_none</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_augmentations</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">graph_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">bodyparts_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.transformer.base_transformer.Transformer.model_name": {"fullname": "dlc2action.transformer.base_transformer.Transformer.model_name", "modulename": "dlc2action.transformer.base_transformer", "qualname": "Transformer.model_name", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.base_transformer.Transformer.augmentations": {"fullname": "dlc2action.transformer.base_transformer.Transformer.augmentations", "modulename": "dlc2action.transformer.base_transformer", "qualname": "Transformer.augmentations", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"fullname": "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input", "modulename": "dlc2action.transformer.base_transformer", "qualname": "Transformer.generate_ssl_input", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"fullname": "dlc2action.transformer.base_transformer.Transformer.keep_target_none", "modulename": "dlc2action.transformer.base_transformer", "qualname": "Transformer.keep_target_none", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.base_transformer.Transformer.ssl_augmentations": {"fullname": "dlc2action.transformer.base_transformer.Transformer.ssl_augmentations", "modulename": "dlc2action.transformer.base_transformer", "qualname": "Transformer.ssl_augmentations", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.base_transformer.Transformer.graph_features": {"fullname": "dlc2action.transformer.base_transformer.Transformer.graph_features", "modulename": "dlc2action.transformer.base_transformer", "qualname": "Transformer.graph_features", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"fullname": "dlc2action.transformer.base_transformer.Transformer.num_graph_nodes", "modulename": "dlc2action.transformer.base_transformer", "qualname": "Transformer.num_graph_nodes", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.base_transformer.Transformer.transform": {"fullname": "dlc2action.transformer.base_transformer.Transformer.transform", "modulename": "dlc2action.transformer.base_transformer", "qualname": "Transformer.transform", "kind": "function", "doc": "<p>Apply augmentations and generate tensors from feature dictionaries</p>\n\n<p>The same augmentations are applied to all the inputs (if they have the features known to the transformer).</p>\n\n<p>If <code>generate_ssl_input</code> is set to True for some of the SSL pairs, those SSL inputs will be generated as\nanother augmentation of main_input.\nUnless <code>keep_target_none</code> is set to True, <code>None</code> SSL targets will be replaced with augmented <code>main_input</code>.\nAll features are stacked together to form a tensor of shape <code>(#features, #frames)</code> that can be passed to\na model.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>main_input : dict\n    the feature dictionary of the main input\nssl_inputs : list, optional\n    a list of feature dictionaries of SSL inputs (some or all can be None)\nssl_targets : list, optional\n    a list of feature dictionaries of SSL targets (some or all can be None)\naugment : bool, default True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>main_input : torch.Tensor\n    the augmented tensor of the main input\nssl_inputs : list, optional\n    a list of augmented tensors of SSL inputs (some or all can be None)\nssl_targets : list, optional\n    a list of augmented tensors of SSL targets (some or all can be None)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">main_input</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_inputs</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ssl_targets</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">augment</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">subsample</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span>:</span></span>", "funcdef": "def"}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"fullname": "dlc2action.transformer.base_transformer.EmptyTransformer", "modulename": "dlc2action.transformer.base_transformer", "qualname": "EmptyTransformer", "kind": "class", "doc": "<p>Empty transformer class that does not apply augmentations</p>\n", "bases": "Transformer"}, "dlc2action.transformer.kinematic": {"fullname": "dlc2action.transformer.kinematic", "modulename": "dlc2action.transformer.kinematic", "kind": "module", "doc": "<p>Kinematic transformer</p>\n"}, "dlc2action.transformer.kinematic.KinematicTransformer": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer", "kind": "class", "doc": "<p>A transformer that augments the output of the Kinematic feature extractor</p>\n\n<p>The available augmentations are <code>'rotate'</code>, <code>'mirror'</code>, <code>'shift'</code>, <code>'add_noise'</code> and <code>'zoom'</code></p>\n", "bases": "dlc2action.transformer.base_transformer.Transformer"}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer.__init__", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>augmentations : list, optional\n    list of augmentation names to use (\"rotate\", \"mirror\", \"shift\", \"add_noise\", \"zoom\")\nuse_default_augmentations : bool, default False\n    if <code>True</code> and augmentations are not passed, default augmentations will be applied; otherwise no augmentations\nrotation_limits : list, default [-pi/2, pi/2]\n    list of float rotation angle limits (<code>[low, high]``, or</code>[[low_x, high_x], [low_y, high_y], [low_z, high_z]]`\n    for 3D data)\nmirror_dim : set, default {0}\n    set of integer indices of dimensions that can be mirrored\nnoise_std : float, default 0.05\n    standard deviation of noise\nzoom_limits : list, default [0.5, 1.5]\n    list of float zoom limits ([low, high])\nmasking_probability : float, default 0.1\n    the probability of masking a joint\ndim : int, default 2\n    the dimensionality of the input data\n**kwargs : dict\n    other parameters for the base transformer class</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">augmentations</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_default_augmentations</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">rotation_limits</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mirror_dim</span><span class=\"p\">:</span> <span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">noise_std</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">zoom_limits</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">masking_probability</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">graph_features</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">bodyparts_order</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">canvas_shape</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">move_around_image_center</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "dlc2action.transformer.kinematic.KinematicTransformer.dim": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer.dim", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer.dim", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.kinematic.KinematicTransformer.offset": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer.offset", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer.offset", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.kinematic.KinematicTransformer.scale": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer.scale", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer.scale", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.kinematic.KinematicTransformer.image_center": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer.image_center", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer.image_center", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.kinematic.KinematicTransformer.blank": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer.blank", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer.blank", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer.rotation_limits", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer.n_bodyparts", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer.mirror_dim", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.kinematic.KinematicTransformer.noise_std": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer.noise_std", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer.noise_std", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer.zoom_limits", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.transformer.kinematic.KinematicTransformer.masking_probability": {"fullname": "dlc2action.transformer.kinematic.KinematicTransformer.masking_probability", "modulename": "dlc2action.transformer.kinematic", "qualname": "KinematicTransformer.masking_probability", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.utils": {"fullname": "dlc2action.utils", "modulename": "dlc2action.utils", "kind": "module", "doc": "<h2 id=\"utility-functions\">Utility functions</h2>\n\n<ul>\n<li><code>TensorDict</code> is a convenient data structure for keeping (and indexing) lists of feature dictionaries,</li>\n<li><code>apply_threshold</code>, <code>apply_threshold_hysteresis</code> and <code>apply_threshold_max</code> are utility functions for\n<code>dlc2action.data.dataset.BehaviorDataset.find_valleys</code>,</li>\n<li><code>strip_suffix</code> is used to get rid of suffices if a string (usually filename) ends with one of them,</li>\n<li><code>strip_prefix</code> is used to get rid of prefixes if a string (usually filename) starts with one of them,</li>\n<li><code>rotation_matrix_2d</code> and <code>rotation_matrix_3d</code> are used to generate rotation matrices by\n<code>dlc2action.transformer.base_transformer.Transformer</code> instances</li>\n</ul>\n"}, "dlc2action.utils.TensorDict": {"fullname": "dlc2action.utils.TensorDict", "modulename": "dlc2action.utils", "qualname": "TensorDict", "kind": "class", "doc": "<p>A class that handles indexing in a dictionary of tensors of the same length</p>\n"}, "dlc2action.utils.TensorDict.__init__": {"fullname": "dlc2action.utils.TensorDict.__init__", "modulename": "dlc2action.utils", "qualname": "TensorDict.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>obj : dict | iterable, optional\n    either a dictionary of torch.Tensor instances of the same length or an iterable of dictionaries with\n    the same keys (if not passed, a blank TensorDict is initialized)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Iterable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "dlc2action.utils.TensorDict.append": {"fullname": "dlc2action.utils.TensorDict.append", "modulename": "dlc2action.utils", "qualname": "TensorDict.append", "kind": "function", "doc": "<p>Append an element</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>element : dict\n    a dictionary</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">element</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.utils.TensorDict.remove": {"fullname": "dlc2action.utils.TensorDict.remove", "modulename": "dlc2action.utils", "qualname": "TensorDict.remove", "kind": "function", "doc": "<p>Remove indexed elements</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>indices : list\n    the indices to remove</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dlc2action.utils.apply_threshold": {"fullname": "dlc2action.utils.apply_threshold", "modulename": "dlc2action.utils", "qualname": "apply_threshold", "kind": "function", "doc": "<p>Apply a hard threshold to a tensor and return indices of the intervals that passed</p>\n\n<p>If <code>error_mask</code> is not <code>None</code>, the elements marked <code>False</code> are treated as if they did not pass the threshold.\nIf <code>min_frames</code> is not 0, the intervals are additionally filtered by length.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>tensor : torch.Tensor\n    the tensor to apply the threshold to\nthreshold : float\n    the threshold\nerror_mask : torch.Tensor, optional\n    a boolean real_lens to apply to the results\nmin_frames : int, default 0\n    the minimum number of frames in the resulting intervals (shorter intervals are discarded)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>indices_start : list\n    a list of indices of the first frames of the chosen intervals\nindices_end : list\n    a list of indices of the last frames of the chosen intervals</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">low</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">error_mask</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">smooth_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">masked_intervals</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.utils.apply_threshold_hysteresis": {"fullname": "dlc2action.utils.apply_threshold_hysteresis", "modulename": "dlc2action.utils", "qualname": "apply_threshold_hysteresis", "kind": "function", "doc": "<p>Apply a hysteresis threshold to a tensor and return indices of the intervals that passed</p>\n\n<p>In the chosen intervals all values pass the soft threshold and at least one value passes the hard threshold.\nIf <code>error_mask</code> is not <code>None</code>, the elements marked <code>False</code> are treated as if they did not pass the threshold.\nIf <code>min_frames</code> is not 0, the intervals are additionally filtered by length.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>tensor : torch.Tensor\n    the tensor to apply the threshold to\nsoft_threshold : float\n    the soft threshold\nhard_threshold : float\n    the hard threshold\nerror_mask : torch.Tensor, optional\n    a boolean real_lens to apply to the results\nmin_frames : int, default 0\n    the minimum number of frames in the resulting intervals (shorter intervals are discarded)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>indices_start : list\n    a list of indices of the first frames of the chosen intervals\nindices_end : list\n    a list of indices of the last frames of the chosen intervals</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">soft_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">hard_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">low</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">error_mask</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">smooth_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">masked_intervals</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.utils.apply_threshold_max": {"fullname": "dlc2action.utils.apply_threshold_max", "modulename": "dlc2action.utils", "qualname": "apply_threshold_max", "kind": "function", "doc": "<p>Apply a max hysteresis threshold to a tensor and return indices of the intervals that passed</p>\n\n<p>In the chosen intervals the values at the <code>main_class</code> index are larger than the others everywhere\nand at least one value at the <code>main_class</code> index passes the threshold.\nIf <code>error_mask</code> is not <code>None</code>, the elements marked <code>False</code>are treated as if they did not pass the threshold.\nIf min_frames is not 0, the intervals are additionally filtered by length.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>tensor : torch.Tensor\n    the tensor to apply the threshold to (of shape <code>(#classes, #frames)</code>)\nthreshold : float\n    the threshold\nmain_class : int\n    the class that conditions the soft threshold\nerror_mask : torch.Tensor, optional\n    a boolean real_lens to apply to the results\nmin_frames : int, default 0\n    the minimum number of frames in the resulting intervals (shorter intervals are discarded)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>indices_start : list\n    a list of indices of the first frames of the chosen intervals (along dimension 1 of input tensor)\nindices_end : list\n    a list of indices of the last frames of the chosen intervals (along dimension 1 of input tensor)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">main_class</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">error_mask</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_frames</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">smooth_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">masked_intervals</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.utils.strip_suffix": {"fullname": "dlc2action.utils.strip_suffix", "modulename": "dlc2action.utils", "qualname": "strip_suffix", "kind": "function", "doc": "<p>Strip a suffix from a string if it is contained in a list</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>text : str\n    the main string\nsuffix : iterable\n    the list of suffices to be stripped</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>result : str\n    the stripped string</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Iterable</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.utils.strip_prefix": {"fullname": "dlc2action.utils.strip_prefix", "modulename": "dlc2action.utils", "qualname": "strip_prefix", "kind": "function", "doc": "<p>Strip a prefix from a string if it is contained in a list</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>text : str\n    the main string\nprefix : iterable\n    the list of prefixes to be stripped</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>result : str\n    the stripped string</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Iterable</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.utils.rotation_matrix_2d": {"fullname": "dlc2action.utils.rotation_matrix_2d", "modulename": "dlc2action.utils", "qualname": "rotation_matrix_2d", "kind": "function", "doc": "<p>Create a tensor of 2D rotation matrices from a tensor of angles</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>angles : torch.Tensor\n    a tensor of angles of arbitrary shape <code>(...)</code></p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>rotation_matrices : torch.Tensor\n    a tensor of 2D rotation matrices of shape <code>(..., 2, 2)</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">angles</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "dlc2action.utils.rotation_matrix_3d": {"fullname": "dlc2action.utils.rotation_matrix_3d", "modulename": "dlc2action.utils", "qualname": "rotation_matrix_3d", "kind": "function", "doc": "<p>Create a tensor of 3D rotation matrices from a tensor of angles</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>alpha : torch.Tensor\n    a tensor of rotation angles around the x axis of arbitrary shape <code>(...)</code>\nbeta : torch.Tensor\n    a tensor of rotation angles around the y axis of arbitrary shape <code>(...)</code>\ngamma : torch.Tensor\n    a tensor of rotation angles around the z axis of arbitrary shape <code>(...)</code></p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>rotation_matrices : torch.Tensor\n    a tensor of 3D rotation matrices of shape <code>(..., 3, 3)</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">beta</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">gamma</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.utils.correct_path": {"fullname": "dlc2action.utils.correct_path", "modulename": "dlc2action.utils", "qualname": "correct_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span>, </span><span class=\"param\"><span class=\"n\">project_path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.utils.TensorList": {"fullname": "dlc2action.utils.TensorList", "modulename": "dlc2action.utils", "qualname": "TensorList", "kind": "class", "doc": "<p>A list of tensors that can send each element to a <code>torch</code> device</p>\n", "bases": "builtins.list"}, "dlc2action.utils.TensorList.to_device": {"fullname": "dlc2action.utils.TensorList.to_device", "modulename": "dlc2action.utils", "qualname": "TensorList.to_device", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">device</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "dlc2action.utils.get_intervals": {"fullname": "dlc2action.utils.get_intervals", "modulename": "dlc2action.utils", "qualname": "get_intervals", "kind": "function", "doc": "<p>Get a list of True group beginning and end indices from a boolean tensor</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "dlc2action.utils.smooth": {"fullname": "dlc2action.utils.smooth", "modulename": "dlc2action.utils", "qualname": "smooth", "kind": "function", "doc": "<p>Get rid of jittering in a non-exclusive classification tensor</p>\n\n<p>First, remove intervals of 0 shorter than <code>smooth_interval</code>. Then, remove intervals of 1 shorter than\n<code>smooth_interval</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tensor</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>, </span><span class=\"param\"><span class=\"n\">smooth_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "dlc2action.utils.GaussianSmoothing": {"fullname": "dlc2action.utils.GaussianSmoothing", "modulename": "dlc2action.utils", "qualname": "GaussianSmoothing", "kind": "class", "doc": "<p>Apply gaussian smoothing on a 1d tensor.\nFiltering is performed seperately for each channel\nin the input using a depthwise convolution.\nArguments:\n    channels (int, sequence): Number of channels of the input tensors. Output will\n        have this number of channels as well.\n    kernel_size (int, sequence): Size of the gaussian kernel.\n    sigma (float, sequence): Standard deviation of the gaussian kernel.</p>\n", "bases": "torch.nn.modules.module.Module"}, "dlc2action.utils.GaussianSmoothing.__init__": {"fullname": "dlc2action.utils.GaussianSmoothing.__init__", "modulename": "dlc2action.utils", "qualname": "GaussianSmoothing.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">kernel_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">15</span>, </span><span class=\"param\"><span class=\"n\">sigma</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span></span>)</span>"}, "dlc2action.utils.GaussianSmoothing.kernel_size": {"fullname": "dlc2action.utils.GaussianSmoothing.kernel_size", "modulename": "dlc2action.utils", "qualname": "GaussianSmoothing.kernel_size", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.utils.GaussianSmoothing.kernel": {"fullname": "dlc2action.utils.GaussianSmoothing.kernel", "modulename": "dlc2action.utils", "qualname": "GaussianSmoothing.kernel", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.utils.GaussianSmoothing.forward": {"fullname": "dlc2action.utils.GaussianSmoothing.forward", "modulename": "dlc2action.utils", "qualname": "GaussianSmoothing.forward", "kind": "function", "doc": "<p>Apply gaussian filter to input.\nArguments:\n    input (torch.Tensor): Input to apply gaussian filter on.\nReturns:\n    filtered (torch.Tensor): Filtered output.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "dlc2action.utils.argrelmax": {"fullname": "dlc2action.utils.argrelmax", "modulename": "dlc2action.utils", "qualname": "argrelmax", "kind": "function", "doc": "<p>Calculate arguments of relative maxima.\nprob: np.array. boundary probability maps distributerd in [0, 1]\nprob shape is (T)\nignore the peak whose value is under threshold\nReturn:\n    Index of peaks for each batch</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">prob</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.7</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"fullname": "dlc2action.utils.decide_boundary_prob_with_similarity", "modulename": "dlc2action.utils", "qualname": "decide_boundary_prob_with_similarity", "kind": "function", "doc": "<p>Decide action boundary probabilities based on adjacent frame similarities.\nArgs:\n    x: frame-wise video features (N, C, T)\nReturn:\n    boundary: action boundary probability (N, 1, T)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span>:</span></span>", "funcdef": "def"}, "dlc2action.utils.PostProcessor": {"fullname": "dlc2action.utils.PostProcessor", "modulename": "dlc2action.utils", "qualname": "PostProcessor", "kind": "class", "doc": "<p></p>\n"}, "dlc2action.utils.PostProcessor.__init__": {"fullname": "dlc2action.utils.PostProcessor.__init__", "modulename": "dlc2action.utils", "qualname": "PostProcessor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">boundary_th</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.7</span>,</span><span class=\"param\">\t<span class=\"n\">theta_t</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">15</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">15</span></span>)</span>"}, "dlc2action.utils.PostProcessor.func": {"fullname": "dlc2action.utils.PostProcessor.func", "modulename": "dlc2action.utils", "qualname": "PostProcessor.func", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.utils.PostProcessor.name": {"fullname": "dlc2action.utils.PostProcessor.name", "modulename": "dlc2action.utils", "qualname": "PostProcessor.name", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.utils.PostProcessor.boundary_th": {"fullname": "dlc2action.utils.PostProcessor.boundary_th", "modulename": "dlc2action.utils", "qualname": "PostProcessor.boundary_th", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.utils.PostProcessor.theta_t": {"fullname": "dlc2action.utils.PostProcessor.theta_t", "modulename": "dlc2action.utils", "qualname": "PostProcessor.theta_t", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.utils.PostProcessor.kernel_size": {"fullname": "dlc2action.utils.PostProcessor.kernel_size", "modulename": "dlc2action.utils", "qualname": "PostProcessor.kernel_size", "kind": "variable", "doc": "<p></p>\n"}, "dlc2action.version": {"fullname": "dlc2action.version", "modulename": "dlc2action.version", "kind": "module", "doc": "<p>DLC2Action Toolbox\n\u00a9 A. Mathis Lab</p>\n"}, "dlc2action.version.VERSION": {"fullname": "dlc2action.version.VERSION", "modulename": "dlc2action.version", "qualname": "VERSION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;0.2b3&#x27;"}}, "docInfo": {"dlc2action": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 4274}, "dlc2action.data": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 614}, "dlc2action.data.annotation_store": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 162}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 40}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 23}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 29}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 25}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 16}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 35}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 46}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 37}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 69}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 87}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 52}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 24}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 53}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 27}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 52}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 518, "bases": 0, "doc": 571}, "dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.exclusive": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.overlap": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.visibility": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.mask": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.interactive": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.ram": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.step": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.correction": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 23}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 29}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 25}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 16}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 31}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 46}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 69}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 61}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 89}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 25}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 24}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 53}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 27}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 88}, "dlc2action.data.annotation_store.FileAnnotationStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 18}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 18}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 62}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 263}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 45}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 542, "bases": 0, "doc": 574}, "dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 28}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 467, "bases": 0, "doc": 509}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 64}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 134}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 240, "bases": 0, "doc": 233}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 141, "bases": 0, "doc": 179}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 127}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 524, "bases": 0, "doc": 557}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.CSVAnnotationStore.separator": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.CSVAnnotationStore.fps": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 22}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 450, "bases": 0, "doc": 539}, "dlc2action.data.base_store": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "dlc2action.data.base_store.Store": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 143}, "dlc2action.data.base_store.Store.remove": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 23}, "dlc2action.data.base_store.Store.key_objects": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 29}, "dlc2action.data.base_store.Store.load_from_key_objects": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 25}, "dlc2action.data.base_store.Store.to_ram": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 16}, "dlc2action.data.base_store.Store.get_original_coordinates": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 35}, "dlc2action.data.base_store.Store.create_subsample": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 46}, "dlc2action.data.base_store.Store.get_file_ids": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 37}, "dlc2action.data.base_store.Store.get_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 26}, "dlc2action.data.base_store.Store.new": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 26}, "dlc2action.data.base_store.InputStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 163}, "dlc2action.data.base_store.InputStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 148, "bases": 0, "doc": 152}, "dlc2action.data.base_store.InputStore.get_video_id": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 45}, "dlc2action.data.base_store.InputStore.get_clip_id": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 46}, "dlc2action.data.base_store.InputStore.get_clip_length": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 42}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 61}, "dlc2action.data.base_store.InputStore.get_clip_start": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 49}, "dlc2action.data.base_store.InputStore.get_visibility": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 103}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 41}, "dlc2action.data.base_store.InputStore.get_folder": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 51}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 45}, "dlc2action.data.base_store.InputStore.get_folder_order": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 44}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 37}, "dlc2action.data.base_store.InputStore.get_tag": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 77}, "dlc2action.data.base_store.InputStore.get_indices": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 53}, "dlc2action.data.base_store.InputStore.get_tags": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 23}, "dlc2action.data.base_store.AnnotationStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 162}, "dlc2action.data.base_store.AnnotationStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 89, "bases": 0, "doc": 71}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 15}, "dlc2action.data.base_store.AnnotationStore.get_len": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 69}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 95}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "dlc2action.data.base_store.AnnotationStore.size": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 24}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 53}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 27}, "dlc2action.data.base_store.PoseInputStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 81}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 61}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 60}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 25}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 41}, "dlc2action.data.dataset": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "dlc2action.data.dataset.BehaviorDataset": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 26}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 214, "bases": 0, "doc": 121}, "dlc2action.data.dataset.BehaviorDataset.ssl_transformations": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.input_type": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.annotation_type": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.stats": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.ids": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.tag": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.return_unlabeled": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.input_indices": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.annotation_indices": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.indices": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 23}, "dlc2action.data.dataset.BehaviorDataset.save": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 23}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 7}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 80}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 297, "bases": 0, "doc": 312}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 42}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 42}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 188, "bases": 0, "doc": 437}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 24}, "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 52}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 14}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 25}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 23}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 21}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 35}, "dlc2action.data.dataset.BehaviorDataset.new": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 25}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 26}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 18}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 18}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 66}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 52}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 53}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 53}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 34}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 38}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 158}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 54}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 54}, "dlc2action.data.input_store": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "dlc2action.data.input_store.GeneralInputStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 66}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 502, "bases": 0, "doc": 447}, "dlc2action.data.input_store.GeneralInputStore.data_suffix": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.loaded_max": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.bodyparts": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.visibility": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.normalize": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.centered": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.data_suffices": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.data_prefixes": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.overlap": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.num_cpus": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.transpose": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.ram": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.extractor": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.canvas_center": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.step": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 51}, "dlc2action.data.input_store.GeneralInputStore.remove": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 23}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 29}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 25}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 16}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 35}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 46}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 45}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 46}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 42}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 62}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 49}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 103}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 41}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 162, "bases": 0, "doc": 202}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 48}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 63}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 45}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 61}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 53}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 23}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 65}, "dlc2action.data.input_store.FileInputStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 21}, "dlc2action.data.input_store.SequenceInputStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 20}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 99, "bases": 0, "doc": 129}, "dlc2action.data.input_store.DLCTrackStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 166}, "dlc2action.data.input_store.DLCTrackletStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 166}, "dlc2action.data.input_store.PKUMMDInputStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 27}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 245, "bases": 0, "doc": 232}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.PKUMMDInputStore.interactive": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.CalMS21InputStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 151}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 284, "bases": 0, "doc": 261}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 131, "bases": 0, "doc": 179}, "dlc2action.data.input_store.Numpy3DInputStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 196}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 469, "bases": 0, "doc": 447}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 147}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 284, "bases": 0, "doc": 274}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 103}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 202}, "dlc2action.data.input_store.SIMBAInputStore": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 37}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 427, "bases": 0, "doc": 383}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 136}, "dlc2action.feature_extraction.FeatureExtractor": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 90}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 19}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 17}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 174}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 35}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 13}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 17}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.KinematicExtractor": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 197}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 255, "bases": 0, "doc": 448}, "dlc2action.feature_extraction.KinematicExtractor.keys": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.KinematicExtractor.ignored_clips": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.KinematicExtractor.interactive": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.KinematicExtractor.w": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.KinematicExtractor.distance_pairs": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.KinematicExtractor.angle_pairs": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.KinematicExtractor.area_vertices": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.KinematicExtractor.neighboring_frames": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.KinematicExtractor.zone_vertices": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.KinematicExtractor.zone_bools": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.KinematicExtractor.zone_distances": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 152}, "dlc2action.loss": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 39}, "dlc2action.loss.contrastive": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "dlc2action.loss.contrastive_frame": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.loss.ms_tcn": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 15}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 159, "bases": 0, "doc": 111}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.focal": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.mse": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 5}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 47}, "dlc2action.loss.mse": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "dlc2action.loss.tcc": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "dlc2action.loss.tcc.gen_cycles": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 192}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 3}, "dlc2action.loss.tcc.compute_alignment_loss": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 173, "bases": 0, "doc": 3}, "dlc2action.loss.tcc.regression_loss": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 293}, "dlc2action.metric": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "dlc2action.metric.base_metric": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "dlc2action.metric.base_metric.Metric": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 61}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 35}, "dlc2action.metric.base_metric.Metric.update": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 78}, "dlc2action.metric.base_metric.Metric.reset": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 13}, "dlc2action.metric.base_metric.Metric.calculate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 45}, "dlc2action.metric.metrics": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "dlc2action.metric.metrics.PR_AUC": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 12}, "dlc2action.metric.metrics.PR_AUC.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 140, "bases": 0, "doc": 102}, "dlc2action.metric.metrics.Precision": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "dlc2action.metric.metrics.Precision.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 151, "bases": 0, "doc": 130}, "dlc2action.metric.metrics.SegmentalPrecision": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 9}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 171, "bases": 0, "doc": 151}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 17}, "dlc2action.metric.metrics.Recall": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "dlc2action.metric.metrics.Recall.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 151, "bases": 0, "doc": 130}, "dlc2action.metric.metrics.SegmentalRecall": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 9}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 171, "bases": 0, "doc": 151}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 17}, "dlc2action.metric.metrics.F1": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 4}, "dlc2action.metric.metrics.F1.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 170, "bases": 0, "doc": 130}, "dlc2action.metric.metrics.SegmentalF1": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 10}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 171, "bases": 0, "doc": 151}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 17}, "dlc2action.metric.metrics.Fbeta": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 5}, "dlc2action.metric.metrics.Fbeta.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 165, "bases": 0, "doc": 138}, "dlc2action.metric.metrics.Fbeta.beta2": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.SegmentalFbeta": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 11}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 185, "bases": 0, "doc": 159}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 17}, "dlc2action.metric.metrics.SegmentalFbeta.beta2": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 200}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 268, "bases": 0, "doc": 272}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 200}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 268, "bases": 0, "doc": 272}, "dlc2action.metric.metrics.SemiSegmentalF1": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 16}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 268, "bases": 0, "doc": 272}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 18}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 257, "bases": 0, "doc": 272}, "dlc2action.metric.metrics.Accuracy": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 3}, "dlc2action.metric.metrics.Accuracy.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 15}, "dlc2action.metric.metrics.Accuracy.ignore_index": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.Accuracy.reset": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 13}, "dlc2action.metric.metrics.Accuracy.calculate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 16}, "dlc2action.metric.metrics.Accuracy.update": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 78}, "dlc2action.metric.metrics.Count": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "dlc2action.metric.metrics.Count.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 26}, "dlc2action.metric.metrics.Count.classes": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.Count.exclusive": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.Count.reset": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 13}, "dlc2action.metric.metrics.Count.update": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 78}, "dlc2action.metric.metrics.Count.calculate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 35}, "dlc2action.metric.metrics.EditDistance": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 18}, "dlc2action.metric.metrics.EditDistance.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 34}, "dlc2action.metric.metrics.EditDistance.ignore_index": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.EditDistance.exclusive": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.EditDistance.reset": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 13}, "dlc2action.metric.metrics.EditDistance.update": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 78}, "dlc2action.metric.metrics.EditDistance.calculate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 23}, "dlc2action.metric.metrics.PKU_mAP": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 11}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 35}, "dlc2action.metric.metrics.PKU_mAP.average": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.PKU_mAP.threshold": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.PKU_mAP.exclusive": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.PKU_mAP.classes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.PKU_mAP.match": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.PKU_mAP.reset": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 13}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 45}, "dlc2action.metric.metrics.PKU_mAP.ap": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 3}, "dlc2action.metric.metrics.PKU_mAP.update": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 78}, "dlc2action.model": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 43}, "dlc2action.model.asformer": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "dlc2action.model.asformer.device": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.asformer.ASFormer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 6}, "dlc2action.model.asformer.ASFormer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 109, "bases": 0, "doc": 100}, "dlc2action.model.asformer.ASFormer.num_f_maps": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.asformer.ASFormer.params": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.asformer.ASFormer.params_predictor": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.asformer.ASFormer.features_shape": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 24}, "dlc2action.model.base_model": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "dlc2action.model.base_model.available_ssl_types": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 20, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.base_model.Model": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 24}, "dlc2action.model.base_model.Model.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 118, "bases": 0, "doc": 100}, "dlc2action.model.base_model.Model.process_labels": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.base_model.Model.feature_extractor": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.base_model.Model.feature_extractors": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.base_model.Model.predictor": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.base_model.Model.ssl_active": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.base_model.Model.main_task_active": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.base_model.Model.prompt_function": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.base_model.Model.class_tensors": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "dlc2action.model.base_model.Model.load_state_dict": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 59}, "dlc2action.model.base_model.Model.ssl_off": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 16}, "dlc2action.model.base_model.Model.ssl_on": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 15}, "dlc2action.model.base_model.Model.main_task_on": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 7}, "dlc2action.model.base_model.Model.main_task_off": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 7}, "dlc2action.model.base_model.Model.set_ssl": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 6}, "dlc2action.model.base_model.Model.features_shape": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 24}, "dlc2action.model.base_model.Model.extract_features": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 47}, "dlc2action.model.base_model.Model.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 83, "bases": 0, "doc": 61}, "dlc2action.model.base_model.LoadedModel": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 14}, "dlc2action.model.base_model.LoadedModel.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 30}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.base_model.LoadedModel.ssl_active": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.base_model.LoadedModel.feature_extractor": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "dlc2action.model.c2f_tcn": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "dlc2action.model.c2f_tcn.nonlinearity": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.c2f_tcn.C2F_TCN": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 23}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 92, "bases": 0, "doc": 100}, "dlc2action.model.c2f_tcn.C2F_TCN.params": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 24}, "dlc2action.model.edtcn": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "dlc2action.model.edtcn.EDTCN": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 10}, "dlc2action.model.edtcn.EDTCN.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 93, "bases": 0, "doc": 100}, "dlc2action.model.edtcn.EDTCN.params": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.edtcn.EDTCN.features_shape": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 24}, "dlc2action.model.mlp": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.mlp.MLP": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 6}, "dlc2action.model.mlp.MLP.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 100}, "dlc2action.model.mlp.MLP.params": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.mlp.MLP.features_shape": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 24}, "dlc2action.model.transformer": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.transformer.Transformer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 29}, "dlc2action.model.transformer.Transformer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 118, "bases": 0, "doc": 100}, "dlc2action.model.transformer.Transformer.params": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.model.transformer.Transformer.features_shape": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 24}, "dlc2action.options": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "dlc2action.options.input_stores": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 104, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.annotation_stores": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 101, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.feature_extractors": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 15, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.ssl_constructors": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 156, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.transformers": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 15, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.losses": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.losses_multistage": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.metrics": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 239, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.metrics_minimize": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.metrics_no_direction": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.optimizers": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 28, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.models": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 70, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.blanks": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 38, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.extractor_to_transformer": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 16, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.partition_methods": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 61, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.basic_parameters": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 646, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.options.model_hyperparameters": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 357, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 669}, "dlc2action.project.meta": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "dlc2action.project.meta.Run": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "dlc2action.project.meta.Run.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 41}, "dlc2action.project.meta.Run.name": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.meta.Run.project_path": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.meta.Run.training_time": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 22}, "dlc2action.project.meta.Run.model_file": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 59}, "dlc2action.project.meta.Run.dataset_name": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 21}, "dlc2action.project.meta.Run.split_file": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 21}, "dlc2action.project.meta.Run.log_file": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 21}, "dlc2action.project.meta.Run.split_info": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 29}, "dlc2action.project.meta.Run.same_split_info": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 53}, "dlc2action.project.meta.Run.get_metrics": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 26}, "dlc2action.project.meta.Run.get_metric_log": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 73}, "dlc2action.project.meta.Run.get_epoch_list": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 23}, "dlc2action.project.meta.Run.unfinished": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 32}, "dlc2action.project.meta.Run.get_class_ind": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 36}, "dlc2action.project.meta.Run.get_behaviors_dict": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "dlc2action.project.meta.Run.get_num_classes": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 21}, "dlc2action.project.meta.DecisionThresholds": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "dlc2action.project.meta.DecisionThresholds.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 15}, "dlc2action.project.meta.DecisionThresholds.path": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.meta.DecisionThresholds.data": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 57}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 61}, "dlc2action.project.meta.SavedRuns": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "dlc2action.project.meta.SavedRuns.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 15}, "dlc2action.project.meta.SavedRuns.path": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.meta.SavedRuns.project_path": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.meta.SavedRuns.data": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.meta.SavedRuns.update": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 66}, "dlc2action.project.meta.SavedRuns.get_subset": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 25}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 41}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 37}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 32}, "dlc2action.project.meta.SavedRuns.save_episode": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 70}, "dlc2action.project.meta.SavedRuns.load_parameters": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 37}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 33}, "dlc2action.project.meta.SavedRuns.list_episodes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 90, "bases": 0, "doc": 89}, "dlc2action.project.meta.SavedRuns.rename_episode": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "dlc2action.project.meta.SavedRuns.remove_episode": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 29}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 32}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 40}, "dlc2action.project.meta.SavedRuns.get_runs": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 47}, "dlc2action.project.meta.Searches": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 10}, "dlc2action.project.meta.Searches.save_search": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 120}, "dlc2action.project.meta.Searches.get_best_params_raw": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 49}, "dlc2action.project.meta.Searches.get_best_params": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 85}, "dlc2action.project.meta.Suggestions": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 13}, "dlc2action.project.meta.Suggestions.save_suggestion": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 3}, "dlc2action.project.meta.SavedStores": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "dlc2action.project.meta.SavedStores.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 15}, "dlc2action.project.meta.SavedStores.path": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.meta.SavedStores.data": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.meta.SavedStores.skip_keys": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.meta.SavedStores.clear": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 5}, "dlc2action.project.meta.SavedStores.dataset_names": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 23}, "dlc2action.project.meta.SavedStores.remove": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 23}, "dlc2action.project.meta.SavedStores.remove_dataset": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 22}, "dlc2action.project.meta.SavedStores.find_name": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 57}, "dlc2action.project.meta.SavedStores.save_store": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 30}, "dlc2action.project.meta.SavedStores.check_name_validity": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 37}, "dlc2action.project.project": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 4}, "dlc2action.project.project.Project": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "dlc2action.project.project.Project.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 156, "bases": 0, "doc": 136}, "dlc2action.project.project.Project.project_path": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.project.Project.name": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.project.Project.data_type": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.project.Project.annotation_type": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.project.Project.data_path": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.project.Project.annotation_path": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.project.project.Project.run_episode": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 402, "bases": 0, "doc": 578}, "dlc2action.project.project.Project.run_episodes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 235, "bases": 0, "doc": 393}, "dlc2action.project.project.Project.continue_episode": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 176, "bases": 0, "doc": 196}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 305, "bases": 0, "doc": 419}, "dlc2action.project.project.Project.run_hyperparameter_search": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 253, "bases": 0, "doc": 367}, "dlc2action.project.project.Project.run_prediction": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 251, "bases": 0, "doc": 292}, "dlc2action.project.project.Project.evaluate_prediction": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 134, "bases": 0, "doc": 3}, "dlc2action.project.project.Project.evaluate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 204, "bases": 0, "doc": 206}, "dlc2action.project.project.Project.list_episodes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 109, "bases": 0, "doc": 114}, "dlc2action.project.project.Project.list_predictions": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 109, "bases": 0, "doc": 104}, "dlc2action.project.project.Project.list_searches": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 109, "bases": 0, "doc": 105}, "dlc2action.project.project.Project.get_best_parameters": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "dlc2action.project.project.Project.list_best_parameters": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 65}, "dlc2action.project.project.Project.plot_episodes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 188, "bases": 0, "doc": 172}, "dlc2action.project.project.Project.update_parameters": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 92, "bases": 0, "doc": 85}, "dlc2action.project.project.Project.get_summary": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 85, "bases": 0, "doc": 108}, "dlc2action.project.project.Project.remove_project": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 11}, "dlc2action.project.project.Project.remove_saved_features": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 98}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 81}, "dlc2action.project.project.Project.remove_search": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 23}, "dlc2action.project.project.Project.remove_prediction": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 22}, "dlc2action.project.project.Project.remove_episode": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 29}, "dlc2action.project.project.Project.prune_unfinished": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 85}, "dlc2action.project.project.Project.prediction_path": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 35}, "dlc2action.project.project.Project.print_data_types": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "dlc2action.project.project.Project.print_annotation_types": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "dlc2action.project.project.Project.data_types": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 15}, "dlc2action.project.project.Project.annotation_types": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 15}, "dlc2action.project.project.Project.set_main_parameters": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 48}, "dlc2action.project.project.Project.help": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 30}, "dlc2action.project.project.Project.list_blanks": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 29}, "dlc2action.project.project.Project.list_basic_parameters": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "dlc2action.project.project.Project.count_classes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 91, "bases": 0, "doc": 114}, "dlc2action.project.project.Project.plot_class_distribution": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 111, "bases": 0, "doc": 81}, "dlc2action.project.project.Project.plot_confusion_matrix": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 156, "bases": 0, "doc": 252}, "dlc2action.project.project.Project.plot_predictions": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 394, "bases": 0, "doc": 340}, "dlc2action.project.project.Project.create_metadata_backup": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 9}, "dlc2action.project.project.Project.load_metadata_backup": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 14}, "dlc2action.project.project.Project.get_behavior_dictionary": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 44}, "dlc2action.project.project.Project.import_episodes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 46}, "dlc2action.project.project.Project.export_episodes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 68}, "dlc2action.project.project.Project.get_results_table": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 100}, "dlc2action.project.project.Project.episode_exists": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 35}, "dlc2action.project.project.Project.search_exists": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 35}, "dlc2action.project.project.Project.prediction_exists": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 35}, "dlc2action.project.project.Project.project_name_available": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 3}, "dlc2action.project.project.Project.rename_episode": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 3}, "dlc2action.ssl": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 378}, "dlc2action.ssl.base_ssl": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "dlc2action.ssl.base_ssl.SSLConstructor": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 58}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 209}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 127}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 40}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 37}, "dlc2action.ssl.base_ssl.EmptySSL": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 5}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 4}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 4}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 4}, "dlc2action.ssl.contrastive": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 36}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 54}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 209}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.ContrastiveSSL.pars": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 4}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 5}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 7}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 76}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 90, "bases": 0, "doc": 54}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 209}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.start": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.end": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.pars": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 4}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 5}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 7}, "dlc2action.ssl.contrastive.PairwiseSSL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 36}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 133, "bases": 0, "doc": 88}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 209}, "dlc2action.ssl.contrastive.PairwiseSSL.pars": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 4}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 6}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 7}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 36}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 152, "bases": 0, "doc": 88}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 209}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.start": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.end": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.pars": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 4}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 7}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 58}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 120, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 209}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.pars": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 5}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 4}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 7}, "dlc2action.ssl.masked": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 23}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 15}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 209}, "dlc2action.ssl.masked.MaskedFeaturesSSL.mse": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.masked.MaskedFeaturesSSL.frac_masked": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 8}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 4}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 13}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 24}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 99, "bases": 0, "doc": 70}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 6}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 23}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 54}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 5}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 22}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 18}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 209}, "dlc2action.ssl.masked.MaskedKinematicSSL.mse": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.masked.MaskedKinematicSSL.frac_masked": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 5}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 4}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 13}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 22}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 99, "bases": 0, "doc": 70}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 6}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 22}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 54}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 5}, "dlc2action.ssl.masked.MaskedFramesSSL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 25}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 18}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 209}, "dlc2action.ssl.masked.MaskedFramesSSL.frac_masked": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.masked.MaskedFramesSSL.mse": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 8}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 4}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 13}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 25}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 99, "bases": 0, "doc": 70}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 6}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 25}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 54}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 5}, "dlc2action.ssl.modules": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "dlc2action.ssl.segment_order": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.segment_order.ReverseSSL": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 22}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 27}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 209}, "dlc2action.ssl.segment_order.ReverseSSL.ce": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.segment_order.ReverseSSL.pars": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 5}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 5}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 13}, "dlc2action.ssl.segment_order.OrderSSL": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 21}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 91, "bases": 0, "doc": 69}, "dlc2action.ssl.segment_order.OrderSSL.type": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 209}, "dlc2action.ssl.segment_order.OrderSSL.ce": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.segment_order.OrderSSL.orders": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.segment_order.OrderSSL.len_segment": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.segment_order.OrderSSL.num_segments": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.segment_order.OrderSSL.pars": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 4}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 5}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 13}, "dlc2action.ssl.tcc": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.tcc.TCCSSL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 36}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 238, "bases": 0, "doc": 3}, "dlc2action.ssl.tcc.TCCSSL.type": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 209}, "dlc2action.ssl.tcc.TCCSSL.len_segment": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.tcc.TCCSSL.loss_function": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.tcc.TCCSSL.pars": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 4}, "dlc2action.ssl.tcc.TCCSSL.loss": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 40}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 37}, "dlc2action.task": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 44}, "dlc2action.task.task_dispatcher": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 13}, "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.blanks": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.task": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 52}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 74}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 56}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 56}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 92, "bases": 0, "doc": 52}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 29}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 145, "bases": 0, "doc": 299}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 30}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 123, "bases": 0, "doc": 103}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 71}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 160, "bases": 0, "doc": 114}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 34}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 91}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 93, "bases": 0, "doc": 77}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 29}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 67}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 322, "bases": 0, "doc": 204}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 110, "bases": 0, "doc": 150}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 83, "bases": 0, "doc": 107}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 23}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 45}, "dlc2action.task.universal_task": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "dlc2action.task.universal_task.MyDataParallel": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 690}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 14}, "dlc2action.task.universal_task.MyDataParallel.process_labels": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.MyDataParallel.logit_scale": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 284}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "dlc2action.task.universal_task.Task.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 789, "bases": 0, "doc": 420}, "dlc2action.task.universal_task.Task.train_dataloader": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.val_dataloader": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.test_dataloader": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.transformer": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.num_epochs": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.skip_metrics": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.verbose": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.augment_train": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.augment_val": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.ignore_tags": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.validation_interval": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.log_file": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.loss": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.model_save_path": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.model_save_epochs": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.epoch": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.metrics": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.ssl_weights": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.optimizer_class": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.lr": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.parallel": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.primary_predict_function": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.pseudolabel": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.alpha_f": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.T2": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.T1": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.t": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.decision_thresholds": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.save_checkpoint": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 23}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 66}, "dlc2action.task.universal_task.Task.save_model": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 24}, "dlc2action.task.universal_task.Task.train": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 223, "bases": 0, "doc": 299}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 133, "bases": 0, "doc": 79}, "dlc2action.task.universal_task.Task.evaluate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 142, "bases": 0, "doc": 112}, "dlc2action.task.universal_task.Task.predict": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 224, "bases": 0, "doc": 204}, "dlc2action.task.universal_task.Task.dataset": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 33}, "dlc2action.task.universal_task.Task.dataloader": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 33}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 87}, "dlc2action.task.universal_task.Task.generate_submission": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 73}, "dlc2action.task.universal_task.Task.visualize_results": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 357, "bases": 0, "doc": 208}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 20}, "dlc2action.task.universal_task.Task.set_log": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 18}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 26}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 26}, "dlc2action.task.universal_task.Task.set_model": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 16}, "dlc2action.task.universal_task.Task.set_dataloaders": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 125, "bases": 0, "doc": 42}, "dlc2action.task.universal_task.Task.set_loss": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 17}, "dlc2action.task.universal_task.Task.set_metrics": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 17}, "dlc2action.task.universal_task.Task.set_transformer": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 16}, "dlc2action.task.universal_task.Task.set_predict_functions": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 29}, "dlc2action.task.universal_task.Task.count_classes": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 67}, "dlc2action.task.universal_task.Task.behaviors_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 29}, "dlc2action.task.universal_task.Task.update_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 19}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 129, "bases": 0, "doc": 159}, "dlc2action.task.universal_task.Task.generate_bald_score": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 116}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "dlc2action.transformer": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 102}, "dlc2action.transformer.base_transformer": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "dlc2action.transformer.base_transformer.Transformer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 136}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 151, "bases": 0, "doc": 244}, "dlc2action.transformer.base_transformer.Transformer.model_name": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.base_transformer.Transformer.augmentations": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.base_transformer.Transformer.ssl_augmentations": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.base_transformer.Transformer.graph_features": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.base_transformer.Transformer.transform": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 101, "bases": 0, "doc": 225}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 10}, "dlc2action.transformer.kinematic": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 4}, "dlc2action.transformer.kinematic.KinematicTransformer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 46}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 255, "bases": 0, "doc": 155}, "dlc2action.transformer.kinematic.KinematicTransformer.dim": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.kinematic.KinematicTransformer.offset": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.kinematic.KinematicTransformer.scale": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.kinematic.KinematicTransformer.image_center": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.kinematic.KinematicTransformer.blank": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.kinematic.KinematicTransformer.noise_std": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.transformer.kinematic.KinematicTransformer.masking_probability": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 133}, "dlc2action.utils.TensorDict": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "dlc2action.utils.TensorDict.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 40}, "dlc2action.utils.TensorDict.append": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 15}, "dlc2action.utils.TensorDict.remove": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 17}, "dlc2action.utils.apply_threshold": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 132, "bases": 0, "doc": 154}, "dlc2action.utils.apply_threshold_hysteresis": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 145, "bases": 0, "doc": 182}, "dlc2action.utils.apply_threshold_max": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 126, "bases": 0, "doc": 218}, "dlc2action.utils.strip_suffix": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 47}, "dlc2action.utils.strip_prefix": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 47}, "dlc2action.utils.rotation_matrix_2d": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 58}, "dlc2action.utils.rotation_matrix_3d": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 103}, "dlc2action.utils.correct_path": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "dlc2action.utils.TensorList": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 17}, "dlc2action.utils.TensorList.to_device": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "dlc2action.utils.get_intervals": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 16}, "dlc2action.utils.smooth": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 37}, "dlc2action.utils.GaussianSmoothing": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 65}, "dlc2action.utils.GaussianSmoothing.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 14}, "dlc2action.utils.GaussianSmoothing.kernel_size": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.utils.GaussianSmoothing.kernel": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.utils.GaussianSmoothing.forward": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 26}, "dlc2action.utils.argrelmax": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 36}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 29}, "dlc2action.utils.PostProcessor": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.utils.PostProcessor.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 3}, "dlc2action.utils.PostProcessor.func": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.utils.PostProcessor.name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.utils.PostProcessor.boundary_th": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.utils.PostProcessor.theta_t": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.utils.PostProcessor.kernel_size": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "dlc2action.version": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "dlc2action.version.VERSION": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}}, "length": 876, "save": true}, "index": {"qualname": {"root": {"2": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.rotation_matrix_2d": {"tf": 1}}, "df": 1}}, "3": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 1}}, "docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 74, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}}, "df": 17}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.base_ssl.EmptySSL": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.exclusive": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive": {"tf": 1}, "dlc2action.metric.metrics.Count.exclusive": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.exclusive": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.exclusive": {"tf": 1}}, "df": 5}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.input_store.GeneralInputStore.extractor": {"tf": 1}, "dlc2action.model.base_model.Model.feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.feature_extractor": {"tf": 1}, "dlc2action.options.extractor_to_transformer": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1}}, "df": 8, "s": {"docs": {"dlc2action.model.base_model.Model.feature_extractors": {"tf": 1}, "dlc2action.options.feature_extractors": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.export_episodes": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.end": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.end": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.exclusive": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}}, "df": 7}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.edtcn.EDTCN": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.params": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.task.universal_task.Task.epoch": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.task.universal_task.Task.num_epochs": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_epochs": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.rename_episode": {"tf": 1}}, "df": 10, "s": {"docs": {"dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}}, "df": 7}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}}, "df": 6}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 74}}, "d": {"docs": {"dlc2action.project.meta.Run.get_class_ind": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.ignore_index": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.interactive": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.interactive": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.interactive": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.Task.validation_interval": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}}, "df": 4}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.input_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_indices": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.options.input_stores": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"tf": 1}}, "df": 7, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}}, "df": 16}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}}, "df": 5, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}}, "df": 12}, "x": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.ignore_index": {"tf": 1}, "dlc2action.task.universal_task.Task.ignore_tags": {"tf": 1}}, "df": 4, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.ignored_clips": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.import_episodes": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.image_center": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1}}, "df": 14}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.return_unlabeled": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}}, "df": 5}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.metric.metrics.Recall": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1}, "dlc2action.project.project.Project.rename_episode": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}}, "df": 8}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}}, "df": 7}, "w": {"docs": {"dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.Run.name": {"tf": 1}, "dlc2action.project.meta.Run.project_path": {"tf": 1}, "dlc2action.project.meta.Run.training_time": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 23, "s": {"docs": {"dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 3}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}}, "df": 8, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.keys": {"tf": 1}, "dlc2action.project.meta.SavedStores.skip_keys": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.utils.GaussianSmoothing.kernel_size": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.kernel": {"tf": 1}, "dlc2action.utils.PostProcessor.kernel_size": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.keys": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.ignored_clips": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.interactive": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.w": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.distance_pairs": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.angle_pairs": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.area_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.neighboring_frames": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_bools": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_distances": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 14}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.dim": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.offset": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.scale": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.image_center": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.blank": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.noise_std": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.masking_probability": {"tf": 1}}, "df": 13}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}}, "df": 11}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}}, "df": 6}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"tf": 1}}, "df": 5, "s": {"docs": {"dlc2action.ssl.segment_order.OrderSSL.orders": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.orders": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.len_segment": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.num_segments": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}}, "df": 12}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.overlap": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.overlap": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.offset": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"tf": 1}}, "df": 4}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.universal_task.Task.optimizer_class": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.options.optimizers": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.input_store.GeneralInputStore.loaded_max": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_active": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.feature_extractor": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}}, "df": 6}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.focal": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.mse": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss_function": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}}, "df": 35, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.losses": {"tf": 1}, "dlc2action.options.losses_multistage": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {"dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.task.universal_task.Task.log_file": {"tf": 1}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.MyDataParallel.logit_scale": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.len_segment": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.len_segment": {"tf": 1}}, "df": 9, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.model.base_model.Model.process_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.process_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood": {"tf": 1}}, "df": 4}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}}, "df": 8}}}, "r": {"docs": {"dlc2action.task.universal_task.Task.lr": {"tf": 1}}, "df": 1}}, "f": {"1": {"docs": {"dlc2action.metric.metrics.F1": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}}, "df": 2}, "docs": {"dlc2action.model.asformer.ASFormer.num_f_maps": {"tf": 1}, "dlc2action.task.universal_task.Task.alpha_f": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.neighboring_frames": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"tf": 1}}, "df": 10}}}, "c": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.frac_masked": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.task.universal_task.Task.log_file": {"tf": 1}}, "df": 16, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "s": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.FileInputStore": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}}, "df": 4}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.focal": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore.fps": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.utils.PostProcessor.func": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.base_model.Model.prompt_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss_function": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.primary_predict_function": {"tf": 1}}, "df": 7, "s": {"docs": {"dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1}, "dlc2action.model.base_model.Model.feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.feature_extractors": {"tf": 1}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.feature_extractor": {"tf": 1}, "dlc2action.options.feature_extractors": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1}}, "df": 12, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.graph_features": {"tf": 1}}, "df": 14}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.metric.metrics.Fbeta": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.beta2": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {"dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}}, "df": 12}}, "t": {"1": {"docs": {"dlc2action.task.universal_task.Task.T1": {"tf": 1}}, "df": 1}, "2": {"docs": {"dlc2action.task.universal_task.Task.T2": {"tf": 1}}, "df": 1}, "docs": {"dlc2action.task.universal_task.Task.t": {"tf": 1}, "dlc2action.utils.PostProcessor.theta_t": {"tf": 1}}, "df": 2, "o": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.options.extractor_to_transformer": {"tf": 1}, "dlc2action.utils.TensorList.to_device": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"1": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"tf": 1}}, "df": 2}, "docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_active": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 1}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.val_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.test_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.num_epochs": {"tf": 1}, "dlc2action.task.universal_task.Task.skip_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.verbose": {"tf": 1}, "dlc2action.task.universal_task.Task.augment_train": {"tf": 1}, "dlc2action.task.universal_task.Task.augment_val": {"tf": 1}, "dlc2action.task.universal_task.Task.ignore_tags": {"tf": 1}, "dlc2action.task.universal_task.Task.validation_interval": {"tf": 1}, "dlc2action.task.universal_task.Task.log_file": {"tf": 1}, "dlc2action.task.universal_task.Task.loss": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_path": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_epochs": {"tf": 1}, "dlc2action.task.universal_task.Task.epoch": {"tf": 1}, "dlc2action.task.universal_task.Task.metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.ssl_weights": {"tf": 1}, "dlc2action.task.universal_task.Task.optimizer_class": {"tf": 1}, "dlc2action.task.universal_task.Task.lr": {"tf": 1}, "dlc2action.task.universal_task.Task.parallel": {"tf": 1}, "dlc2action.task.universal_task.Task.primary_predict_function": {"tf": 1}, "dlc2action.task.universal_task.Task.pseudolabel": {"tf": 1}, "dlc2action.task.universal_task.Task.alpha_f": {"tf": 1}, "dlc2action.task.universal_task.Task.T2": {"tf": 1}, "dlc2action.task.universal_task.Task.T1": {"tf": 1}, "dlc2action.task.universal_task.Task.t": {"tf": 1}, "dlc2action.task.universal_task.Task.decision_thresholds": {"tf": 1}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1}}, "df": 67, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.blanks": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}}, "df": 35}}}}}}}}}}}}, "g": {"docs": {"dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.tag": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.task.universal_task.Task.ignore_tags": {"tf": 1}}, "df": 4}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.get_results_table": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}}, "df": 13, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.params": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.options.extractor_to_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.model_name": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.augmentations": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.ssl_augmentations": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.graph_features": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 17, "s": {"docs": {"dlc2action.options.transformers": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore.transpose": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.augment_train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.meta.Run.training_time": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.input_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_type": {"tf": 1}, "dlc2action.project.project.Project.data_type": {"tf": 1}, "dlc2action.project.project.Project.annotation_type": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}}, "df": 16, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1}, "dlc2action.model.base_model.available_ssl_types": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1}, "dlc2action.project.project.Project.print_data_types": {"tf": 1}, "dlc2action.project.project.Project.print_annotation_types": {"tf": 1}, "dlc2action.project.project.Project.data_types": {"tf": 1}, "dlc2action.project.project.Project.annotation_types": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.task.universal_task.Task.test_dataloader": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.model.base_model.Model.class_tensors": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.utils.TensorDict": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.append": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.utils.TensorList": {"tf": 1}, "dlc2action.utils.TensorList.to_device": {"tf": 1}}, "df": 2}}}}}}}}}, "h": {"docs": {"dlc2action.utils.PostProcessor.boundary_th": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.threshold": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 6, "s": {"docs": {"dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.task.universal_task.Task.decision_thresholds": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.utils.PostProcessor.theta_t": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.focal": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.mse": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.params": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}}, "df": 29}, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.len_segment": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss_function": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.pars": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}}, "df": 9}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.Run.training_time": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}}, "df": 88}, "n": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"tf": 1}}, "df": 12}}, "l": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.loaded_max": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.normalize": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.centered": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_prefixes": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.overlap": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.num_cpus": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.transpose": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.extractor": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_center": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.step": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}}, "df": 52}}}}}}}}}}}}}}}}, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.kernel_size": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.kernel": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.transformer.base_transformer.Transformer.graph_features": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"tf": 1}}, "df": 2}}}}}, "c": {"2": {"docs": {}, "df": 0, "f": {"docs": {"dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.params": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}}, "df": 4}}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {"dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.classes": {"tf": 1}, "dlc2action.metric.metrics.Count.exclusive": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 14}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.utils.correct_path": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.correction": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}}, "df": 19, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}}, "df": 8}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.start": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.end": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}}, "df": 10}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.model.base_model.Model.class_tensors": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights": {"tf": 1}, "dlc2action.task.universal_task.Task.optimizer_class": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"tf": 1}, "dlc2action.metric.metrics.Count.classes": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.classes": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 13}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}}, "df": 9, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.ignored_clips": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.meta.SavedStores.clear": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"2": {"1": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}}, "df": 6}}}}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "c": {"docs": {"dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}}, "df": 5}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_center": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.separator": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.fps": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}, "e": {"docs": {"dlc2action.ssl.segment_order.ReverseSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.ce": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.input_store.GeneralInputStore.canvas_center": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.image_center": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.input_store.GeneralInputStore.centered": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.num_cpus": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}}, "df": 2}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}}, "df": 5}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.data_suffices": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}}, "df": 2}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.project.Project.get_summary": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.kernel_size": {"tf": 1}, "dlc2action.utils.PostProcessor.kernel_size": {"tf": 1}}, "df": 5}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}}, "df": 19}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.len_segment": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.len_segment": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}}, "df": 3}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}}, "df": 3}}}}}}, "f": {"1": {"docs": {"dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.beta2": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {"dlc2action.ssl.segment_order.OrderSSL.num_segments": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore.separator": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"1": {"docs": {"dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 5}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.MyDataParallel.logit_scale": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.scale": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.step": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.step": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}}, "df": 13, "s": {"docs": {"dlc2action.options.input_stores": {"tf": 1}, "dlc2action.options.annotation_stores": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.start": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.start": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1}}, "df": 5}, "e": {"docs": {"dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.noise_std": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.model.base_model.available_ssl_types": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_active": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_active": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.options.ssl_constructors": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"tf": 1}, "dlc2action.task.universal_task.Task.ssl_weights": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.ssl_augmentations": {"tf": 1}}, "df": 20, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_path": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_epochs": {"tf": 1}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}}, "df": 12, "d": {"docs": {"dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.project_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.data": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}}, "df": 19}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.path": {"tf": 1}, "dlc2action.project.meta.SavedStores.data": {"tf": 1}, "dlc2action.project.meta.SavedStores.skip_keys": {"tf": 1}, "dlc2action.project.meta.SavedStores.clear": {"tf": 1}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}}, "df": 12}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.Run.same_split_info": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}}, "df": 8}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}}, "df": 3}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.meta.SavedStores.skip_keys": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"tf": 1}, "dlc2action.task.universal_task.Task.skip_metrics": {"tf": 1}}, "df": 3}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.utils.smooth": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}}, "df": 8}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.tag": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.return_unlabeled": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}}, "df": 45}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"2": {"docs": {"dlc2action.metric.metrics.Fbeta.beta2": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.beta2": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts": {"tf": 1}}, "df": 6}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}, "dlc2action.utils.PostProcessor.boundary_th": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.zone_bools": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.blank": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.options.blanks": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.blanks": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.distance_pairs": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.zone_distances": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.metrics_no_direction": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.dim": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.DLCTrackStore": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.asformer.device": {"tf": 1}, "dlc2action.utils.TensorList.to_device": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.universal_task.Task.decision_thresholds": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.path": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.data": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_prefixes": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.data": {"tf": 1}, "dlc2action.project.meta.SavedRuns.data": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedStores.data": {"tf": 1}, "dlc2action.project.project.Project.data_type": {"tf": 1}, "dlc2action.project.project.Project.data_path": {"tf": 1}, "dlc2action.project.project.Project.print_data_types": {"tf": 1}, "dlc2action.project.project.Project.data_types": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters": {"tf": 1}}, "df": 16, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}}, "df": 6, "s": {"docs": {"dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.train_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.val_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.test_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}}, "df": 5, "s": {"docs": {"dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.options.annotation_stores": {"tf": 1}, "dlc2action.project.project.Project.annotation_type": {"tf": 1}, "dlc2action.project.project.Project.annotation_path": {"tf": 1}, "dlc2action.project.project.Project.print_annotation_types": {"tf": 1}, "dlc2action.project.project.Project.annotation_types": {"tf": 1}}, "df": 15, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}}, "df": 10}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.angle_pairs": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.exclusive": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.overlap": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.visibility": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.mask": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.interactive": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.step": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.correction": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}}, "df": 45}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.Model.ssl_active": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_active": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_active": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.metric.metrics.Accuracy": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}}, "df": 6}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.area_vertices": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.utils.argrelmax": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha": {"tf": 1}, "dlc2action.task.universal_task.Task.alpha_f": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 4}, "g": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.Task.augment_train": {"tf": 1}, "dlc2action.task.universal_task.Task.augment_val": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.transformer.base_transformer.Transformer.augmentations": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.ssl_augmentations": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.metrics.PKU_mAP.average": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.available_ssl_types": {"tf": 1}, "dlc2action.project.project.Project.project_name_available": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {"dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.TensorDict.append": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.model.asformer.ASFormer": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.num_f_maps": {"tf": 1}, "dlc2action.model.asformer.ASFormer.params": {"tf": 1}, "dlc2action.model.asformer.ASFormer.params_predictor": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}}, "df": 6}}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.Task.pseudolabel": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1}, "dlc2action.project.meta.Run.project_path": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.project_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedStores.path": {"tf": 1}, "dlc2action.project.project.Project.project_path": {"tf": 1}, "dlc2action.project.project.Project.data_path": {"tf": 1}, "dlc2action.project.project.Project.annotation_path": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_path": {"tf": 1}, "dlc2action.utils.correct_path": {"tf": 1}}, "df": 13, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}}, "df": 22}}}}}, "s": {"docs": {"dlc2action.model.asformer.ASFormer.params": {"tf": 1}, "dlc2action.model.asformer.ASFormer.params_predictor": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.params": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.params": {"tf": 1}, "dlc2action.model.mlp.MLP.params": {"tf": 1}, "dlc2action.model.transformer.Transformer.params": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}}, "df": 8}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.Task.parallel": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.options.partition_methods": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {"dlc2action.ssl.contrastive.ContrastiveSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.pars": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.pars": {"tf": 1}}, "df": 14}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.distance_pairs": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.angle_pairs": {"tf": 1}}, "df": 2}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}}, "df": 7}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.start": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.end": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.average": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.exclusive": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.classes": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}}, "df": 14, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.interactive": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}}, "df": 5}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.utils.PostProcessor": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}, "dlc2action.utils.PostProcessor.func": {"tf": 1}, "dlc2action.utils.PostProcessor.name": {"tf": 1}, "dlc2action.utils.PostProcessor.boundary_th": {"tf": 1}, "dlc2action.utils.PostProcessor.theta_t": {"tf": 1}, "dlc2action.utils.PostProcessor.kernel_size": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "r": {"docs": {"dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.primary_predict_function": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}}, "df": 10, "s": {"docs": {"dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.model.asformer.ASFormer.params_predictor": {"tf": 1}, "dlc2action.model.base_model.Model.predictor": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.data_prefixes": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.metric.metrics.Precision": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.model.base_model.Model.process_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.process_labels": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.model.base_model.Model.prompt_function": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Run.project_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.project_path": {"tf": 1}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.project_path": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.name": {"tf": 1}, "dlc2action.project.project.Project.data_type": {"tf": 1}, "dlc2action.project.project.Project.annotation_type": {"tf": 1}, "dlc2action.project.project.Project.data_path": {"tf": 1}, "dlc2action.project.project.Project.annotation_path": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.print_data_types": {"tf": 1}, "dlc2action.project.project.Project.print_annotation_types": {"tf": 1}, "dlc2action.project.project.Project.data_types": {"tf": 1}, "dlc2action.project.project.Project.annotation_types": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.project.project.Project.project_name_available": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.rename_episode": {"tf": 1}}, "df": 57}}}}, "b": {"docs": {"dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.masking_probability": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.prune_unfinished": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.print_data_types": {"tf": 1}, "dlc2action.project.project.Project.print_annotation_types": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.task.universal_task.Task.primary_predict_function": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 4}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}}, "df": 5}}}, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}}, "df": 5}}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.task.universal_task.Task.val_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.augment_val": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.universal_task.Task.validation_interval": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.area_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_vertices": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.Task.verbose": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.version.VERSION": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.metrics_minimize": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.loaded_max": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.mask": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.frac_masked": {"tf": 1}}, "df": 4, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}}, "df": 16}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}}, "df": 16}}}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}}, "df": 16}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.masking_probability": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.average": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.exclusive": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.classes": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}}, "df": 14, "s": {"docs": {"dlc2action.model.asformer.ASFormer.num_f_maps": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.base_model.Model.main_task_active": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 1}}, "df": 5}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.focal": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.mse": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}}, "df": 13, "e": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.mse": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters": {"tf": 1}}, "df": 7, "s": {"docs": {"dlc2action.options.metrics": {"tf": 1}, "dlc2action.options.metrics_minimize": {"tf": 1}, "dlc2action.options.metrics_no_direction": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.skip_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}}, "df": 8}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.process_labels": {"tf": 1}, "dlc2action.model.base_model.Model.feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.feature_extractors": {"tf": 1}, "dlc2action.model.base_model.Model.predictor": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_active": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_active": {"tf": 1}, "dlc2action.model.base_model.Model.prompt_function": {"tf": 1}, "dlc2action.model.base_model.Model.class_tensors": {"tf": 1}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_path": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_epochs": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.model_name": {"tf": 1}}, "df": 30, "s": {"docs": {"dlc2action.options.models": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}}, "df": 19}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.model.mlp.MLP": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.params": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.losses_multistage": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.process_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.logit_scale": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1}}, "df": 12}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}}, "df": 12}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.return_unlabeled": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}}, "df": 2}}}}}}}}}}}, "n": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {"dlc2action.data.base_store.Store.new": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.neighboring_frames": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1}, "dlc2action.project.meta.Run.name": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.name": {"tf": 1}, "dlc2action.project.project.Project.project_name_available": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.model_name": {"tf": 1}, "dlc2action.utils.PostProcessor.name": {"tf": 1}}, "df": 12, "s": {"docs": {"dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.num_cpus": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"tf": 1}, "dlc2action.model.asformer.ASFormer.num_f_maps": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.num_segments": {"tf": 1}, "dlc2action.task.universal_task.Task.num_epochs": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "y": {"3": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "docs": {}, "df": 0}}}}, "o": {"docs": {"dlc2action.options.metrics_no_direction": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore.normalize": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {"dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.noise_std": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.w": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights": {"tf": 1}, "dlc2action.task.universal_task.Task.ssl_weights": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.zone_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_bools": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_distances": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.project.Project.help": {"tf": 1}}, "df": 1}}}}}}, "fullname": {"root": {"2": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.rotation_matrix_2d": {"tf": 1}}, "df": 1}}, "3": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 1}}, "docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 74, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"2": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.exclusive": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.overlap": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.visibility": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.mask": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.interactive": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.step": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.correction": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.separator": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.fps": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.tag": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.return_unlabeled": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.loaded_max": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.normalize": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.centered": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_prefixes": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.overlap": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.num_cpus": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.transpose": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.extractor": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_center": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.step": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.interactive": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.keys": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.ignored_clips": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.interactive": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.w": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.distance_pairs": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.angle_pairs": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.area_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.neighboring_frames": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_bools": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_distances": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.contrastive": {"tf": 1}, "dlc2action.loss.contrastive_frame": {"tf": 1}, "dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.focal": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.mse": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.loss.mse": {"tf": 1}, "dlc2action.loss.tcc": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.Recall": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.F1": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.Fbeta": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.beta2": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.beta2": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.classes": {"tf": 1}, "dlc2action.metric.metrics.Count.exclusive": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.exclusive": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.average": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.exclusive": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.classes": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.model": {"tf": 1}, "dlc2action.model.asformer": {"tf": 1}, "dlc2action.model.asformer.device": {"tf": 1}, "dlc2action.model.asformer.ASFormer": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.num_f_maps": {"tf": 1}, "dlc2action.model.asformer.ASFormer.params": {"tf": 1}, "dlc2action.model.asformer.ASFormer.params_predictor": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model": {"tf": 1}, "dlc2action.model.base_model.available_ssl_types": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.process_labels": {"tf": 1}, "dlc2action.model.base_model.Model.feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.feature_extractors": {"tf": 1}, "dlc2action.model.base_model.Model.predictor": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_active": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_active": {"tf": 1}, "dlc2action.model.base_model.Model.prompt_function": {"tf": 1}, "dlc2action.model.base_model.Model.class_tensors": {"tf": 1}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_active": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.feature_extractor": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.model.c2f_tcn": {"tf": 1}, "dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.params": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn": {"tf": 1}, "dlc2action.model.edtcn.EDTCN": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.params": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp": {"tf": 1}, "dlc2action.model.mlp.MLP": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.params": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.params": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.options": {"tf": 1}, "dlc2action.options.input_stores": {"tf": 1}, "dlc2action.options.annotation_stores": {"tf": 1}, "dlc2action.options.feature_extractors": {"tf": 1}, "dlc2action.options.ssl_constructors": {"tf": 1}, "dlc2action.options.transformers": {"tf": 1}, "dlc2action.options.losses": {"tf": 1}, "dlc2action.options.losses_multistage": {"tf": 1}, "dlc2action.options.metrics": {"tf": 1}, "dlc2action.options.metrics_minimize": {"tf": 1}, "dlc2action.options.metrics_no_direction": {"tf": 1}, "dlc2action.options.optimizers": {"tf": 1}, "dlc2action.options.models": {"tf": 1}, "dlc2action.options.blanks": {"tf": 1}, "dlc2action.options.extractor_to_transformer": {"tf": 1}, "dlc2action.options.partition_methods": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta": {"tf": 1}, "dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.Run.name": {"tf": 1}, "dlc2action.project.meta.Run.project_path": {"tf": 1}, "dlc2action.project.meta.Run.training_time": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.path": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.data": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.project_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.data": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}, "dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.path": {"tf": 1}, "dlc2action.project.meta.SavedStores.data": {"tf": 1}, "dlc2action.project.meta.SavedStores.skip_keys": {"tf": 1}, "dlc2action.project.meta.SavedStores.clear": {"tf": 1}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project": {"tf": 1}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.project_path": {"tf": 1}, "dlc2action.project.project.Project.name": {"tf": 1}, "dlc2action.project.project.Project.data_type": {"tf": 1}, "dlc2action.project.project.Project.annotation_type": {"tf": 1}, "dlc2action.project.project.Project.data_path": {"tf": 1}, "dlc2action.project.project.Project.annotation_path": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.print_data_types": {"tf": 1}, "dlc2action.project.project.Project.print_annotation_types": {"tf": 1}, "dlc2action.project.project.Project.data_types": {"tf": 1}, "dlc2action.project.project.Project.annotation_types": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.project.project.Project.project_name_available": {"tf": 1}, "dlc2action.project.project.Project.rename_episode": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.start": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.end": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.start": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.end": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.modules": {"tf": 1}, "dlc2action.ssl.segment_order": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.orders": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.len_segment": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.num_segments": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.len_segment": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss_function": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.pars": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task": {"tf": 1}, "dlc2action.task.task_dispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.blanks": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.process_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.logit_scale": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.val_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.test_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.num_epochs": {"tf": 1}, "dlc2action.task.universal_task.Task.skip_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.verbose": {"tf": 1}, "dlc2action.task.universal_task.Task.augment_train": {"tf": 1}, "dlc2action.task.universal_task.Task.augment_val": {"tf": 1}, "dlc2action.task.universal_task.Task.ignore_tags": {"tf": 1}, "dlc2action.task.universal_task.Task.validation_interval": {"tf": 1}, "dlc2action.task.universal_task.Task.log_file": {"tf": 1}, "dlc2action.task.universal_task.Task.loss": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_path": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_epochs": {"tf": 1}, "dlc2action.task.universal_task.Task.epoch": {"tf": 1}, "dlc2action.task.universal_task.Task.metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.ssl_weights": {"tf": 1}, "dlc2action.task.universal_task.Task.optimizer_class": {"tf": 1}, "dlc2action.task.universal_task.Task.lr": {"tf": 1}, "dlc2action.task.universal_task.Task.parallel": {"tf": 1}, "dlc2action.task.universal_task.Task.primary_predict_function": {"tf": 1}, "dlc2action.task.universal_task.Task.pseudolabel": {"tf": 1}, "dlc2action.task.universal_task.Task.alpha_f": {"tf": 1}, "dlc2action.task.universal_task.Task.T2": {"tf": 1}, "dlc2action.task.universal_task.Task.T1": {"tf": 1}, "dlc2action.task.universal_task.Task.t": {"tf": 1}, "dlc2action.task.universal_task.Task.decision_thresholds": {"tf": 1}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.model_name": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.augmentations": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.ssl_augmentations": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.graph_features": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}, "dlc2action.transformer.kinematic": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.dim": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.offset": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.scale": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.image_center": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.blank": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.noise_std": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.masking_probability": {"tf": 1}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.TensorDict": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.append": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}, "dlc2action.utils.correct_path": {"tf": 1}, "dlc2action.utils.TensorList": {"tf": 1}, "dlc2action.utils.TensorList.to_device": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.kernel_size": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.kernel": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}, "dlc2action.utils.PostProcessor": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}, "dlc2action.utils.PostProcessor.func": {"tf": 1}, "dlc2action.utils.PostProcessor.name": {"tf": 1}, "dlc2action.utils.PostProcessor.boundary_th": {"tf": 1}, "dlc2action.utils.PostProcessor.theta_t": {"tf": 1}, "dlc2action.utils.PostProcessor.kernel_size": {"tf": 1}, "dlc2action.version": {"tf": 1}, "dlc2action.version.VERSION": {"tf": 1}}, "df": 876}}}}}}}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.DLCTrackStore": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.exclusive": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.overlap": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.visibility": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.mask": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.interactive": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.step": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.correction": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.separator": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.fps": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.tag": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.return_unlabeled": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffix": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.loaded_max": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.normalize": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.centered": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffices": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.data_prefixes": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.overlap": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.num_cpus": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.transpose": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.extractor": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_center": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.step": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.interactive": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.data": {"tf": 1}, "dlc2action.project.meta.SavedRuns.data": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedStores.data": {"tf": 1}, "dlc2action.project.project.Project.data_type": {"tf": 1}, "dlc2action.project.project.Project.data_path": {"tf": 1}, "dlc2action.project.project.Project.print_data_types": {"tf": 1}, "dlc2action.project.project.Project.data_types": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters": {"tf": 1}}, "df": 263, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.tag": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.return_unlabeled": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}}, "df": 52, "s": {"docs": {"dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.train_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.val_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.test_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}}, "df": 5, "s": {"docs": {"dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.distance_pairs": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.zone_distances": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.task_dispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.blanks": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}}, "df": 36}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.metrics_no_direction": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.dim": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.asformer.device": {"tf": 1}, "dlc2action.utils.TensorList.to_device": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.universal_task.Task.decision_thresholds": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.path": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.data": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.exclusive": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.overlap": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.visibility": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.mask": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.interactive": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.step": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.correction": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.separator": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.fps": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.options.annotation_stores": {"tf": 1}, "dlc2action.project.project.Project.annotation_type": {"tf": 1}, "dlc2action.project.project.Project.annotation_path": {"tf": 1}, "dlc2action.project.project.Project.print_annotation_types": {"tf": 1}, "dlc2action.project.project.Project.annotation_types": {"tf": 1}}, "df": 98, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}}, "df": 10}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.angle_pairs": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.exclusive": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.overlap": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.visibility": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.mask": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.interactive": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.step": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.correction": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}}, "df": 45}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.Model.ssl_active": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_active": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_active": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.metric.metrics.Accuracy": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}}, "df": 6}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.area_vertices": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.utils.argrelmax": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha": {"tf": 1}, "dlc2action.task.universal_task.Task.alpha_f": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 4}, "g": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.Task.augment_train": {"tf": 1}, "dlc2action.task.universal_task.Task.augment_val": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.transformer.base_transformer.Transformer.augmentations": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.ssl_augmentations": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.metrics.PKU_mAP.average": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.available_ssl_types": {"tf": 1}, "dlc2action.project.project.Project.project_name_available": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {"dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.TensorDict.append": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.model.asformer": {"tf": 1}, "dlc2action.model.asformer.device": {"tf": 1}, "dlc2action.model.asformer.ASFormer": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.num_f_maps": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.params": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.params_predictor": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.exclusive": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.overlap": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.visibility": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.mask": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.interactive": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.step": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.correction": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.separator": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.fps": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.remove": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.new": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.loaded_max": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.normalize": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.centered": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_prefixes": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.overlap": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.num_cpus": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.transpose": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.extractor": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_center": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.step": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.interactive": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}}, "df": 208, "s": {"docs": {"dlc2action.options.input_stores": {"tf": 1}, "dlc2action.options.annotation_stores": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.step": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.step": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.start": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.start": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1}}, "df": 5}, "e": {"docs": {"dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.noise_std": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}}, "df": 2}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}}, "df": 5}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.data_suffices": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}}, "df": 2}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.project.Project.get_summary": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.kernel_size": {"tf": 1}, "dlc2action.utils.PostProcessor.kernel_size": {"tf": 1}}, "df": 5}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}}, "df": 19}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"tf": 1}, "dlc2action.ssl.segment_order": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.orders": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.len_segment": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.num_segments": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.len_segment": {"tf": 1}}, "df": 25, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}}, "df": 3}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}}, "df": 3}}}}}}, "f": {"1": {"docs": {"dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.beta2": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {"dlc2action.ssl.segment_order.OrderSSL.num_segments": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore.separator": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"1": {"docs": {"dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 5}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.MyDataParallel.logit_scale": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.scale": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.model.base_model.available_ssl_types": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_active": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_active": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.options.ssl_constructors": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.EmptySSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.start": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.end": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.start": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.end": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.modules": {"tf": 1}, "dlc2action.ssl.segment_order": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.orders": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.len_segment": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.num_segments": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.len_segment": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss_function": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.pars": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"tf": 1}, "dlc2action.task.universal_task.Task.ssl_weights": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.ssl_augmentations": {"tf": 1}}, "df": 155, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_path": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_epochs": {"tf": 1}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}}, "df": 12, "d": {"docs": {"dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.project_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.data": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}}, "df": 19}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.path": {"tf": 1}, "dlc2action.project.meta.SavedStores.data": {"tf": 1}, "dlc2action.project.meta.SavedStores.skip_keys": {"tf": 1}, "dlc2action.project.meta.SavedStores.clear": {"tf": 1}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}}, "df": 12}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.Run.same_split_info": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}}, "df": 8}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}}, "df": 3}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.meta.SavedStores.skip_keys": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"tf": 1}, "dlc2action.task.universal_task.Task.skip_metrics": {"tf": 1}}, "df": 3}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.utils.smooth": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}}, "df": 17}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.base_ssl.EmptySSL": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.exclusive": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive": {"tf": 1}, "dlc2action.metric.metrics.Count.exclusive": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.exclusive": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.exclusive": {"tf": 1}}, "df": 5}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.keys": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.ignored_clips": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.interactive": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.w": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.distance_pairs": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.angle_pairs": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.area_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.neighboring_frames": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_bools": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_distances": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 27}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.input_store.GeneralInputStore.extractor": {"tf": 1}, "dlc2action.model.base_model.Model.feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.feature_extractor": {"tf": 1}, "dlc2action.options.extractor_to_transformer": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1}}, "df": 8, "s": {"docs": {"dlc2action.model.base_model.Model.feature_extractors": {"tf": 1}, "dlc2action.options.feature_extractors": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.export_episodes": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.end": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.end": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.exclusive": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}}, "df": 7}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.edtcn": {"tf": 1}, "dlc2action.model.edtcn.EDTCN": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.params": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1.4142135623730951}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.task.universal_task.Task.epoch": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.task.universal_task.Task.num_epochs": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_epochs": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.rename_episode": {"tf": 1}}, "df": 10, "s": {"docs": {"dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}}, "df": 7}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}}, "df": 6}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 74}}, "d": {"docs": {"dlc2action.project.meta.Run.get_class_ind": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.ignore_index": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.interactive": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.interactive": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.interactive": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.Task.validation_interval": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}}, "df": 4}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.input_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_indices": {"tf": 1}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.loaded_max": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.normalize": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.centered": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_prefixes": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.overlap": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.num_cpus": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.transpose": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.extractor": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_center": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.step": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.interactive": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.options.input_stores": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"tf": 1}}, "df": 84, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}}, "df": 16}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}}, "df": 5, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}}, "df": 12}, "x": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.ignore_index": {"tf": 1}, "dlc2action.task.universal_task.Task.ignore_tags": {"tf": 1}}, "df": 4, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.ignored_clips": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.import_episodes": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.image_center": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1}}, "df": 14}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.return_unlabeled": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}}, "df": 5}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.metric.metrics.Recall": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1}, "dlc2action.project.project.Project.rename_episode": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}}, "df": 8}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}}, "df": 7}, "w": {"docs": {"dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.Run.name": {"tf": 1}, "dlc2action.project.meta.Run.project_path": {"tf": 1}, "dlc2action.project.meta.Run.training_time": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 23, "s": {"docs": {"dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 3}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}}, "df": 8, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.keys": {"tf": 1}, "dlc2action.project.meta.SavedStores.skip_keys": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.utils.GaussianSmoothing.kernel_size": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.kernel": {"tf": 1}, "dlc2action.utils.PostProcessor.kernel_size": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.transformer.kinematic": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.dim": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.offset": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.scale": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.image_center": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.blank": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.noise_std": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.masking_probability": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.keys": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.ignored_clips": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.interactive": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.w": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.distance_pairs": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.angle_pairs": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.area_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.neighboring_frames": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_bools": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_distances": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 14}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.dim": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.offset": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.scale": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.image_center": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.blank": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.noise_std": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.masking_probability": {"tf": 1}}, "df": 13}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}}, "df": 11}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}}, "df": 6}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"tf": 1}, "dlc2action.ssl.segment_order": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.orders": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.len_segment": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.num_segments": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}}, "df": 26, "s": {"docs": {"dlc2action.ssl.segment_order.OrderSSL.orders": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.orders": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.len_segment": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.num_segments": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}}, "df": 12}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.overlap": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.overlap": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.offset": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"tf": 1}}, "df": 4}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options": {"tf": 1}, "dlc2action.options.input_stores": {"tf": 1}, "dlc2action.options.annotation_stores": {"tf": 1}, "dlc2action.options.feature_extractors": {"tf": 1}, "dlc2action.options.ssl_constructors": {"tf": 1}, "dlc2action.options.transformers": {"tf": 1}, "dlc2action.options.losses": {"tf": 1}, "dlc2action.options.losses_multistage": {"tf": 1}, "dlc2action.options.metrics": {"tf": 1}, "dlc2action.options.metrics_minimize": {"tf": 1}, "dlc2action.options.metrics_no_direction": {"tf": 1}, "dlc2action.options.optimizers": {"tf": 1}, "dlc2action.options.models": {"tf": 1}, "dlc2action.options.blanks": {"tf": 1}, "dlc2action.options.extractor_to_transformer": {"tf": 1}, "dlc2action.options.partition_methods": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 18}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.universal_task.Task.optimizer_class": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.options.optimizers": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.input_store.GeneralInputStore.loaded_max": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_active": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.feature_extractor": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}}, "df": 6}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss": {"tf": 1}, "dlc2action.loss.contrastive": {"tf": 1}, "dlc2action.loss.contrastive_frame": {"tf": 1}, "dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.focal": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.mse": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.4142135623730951}, "dlc2action.loss.mse": {"tf": 1}, "dlc2action.loss.tcc": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss_function": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}}, "df": 42, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.losses": {"tf": 1}, "dlc2action.options.losses_multistage": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {"dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.task.universal_task.Task.log_file": {"tf": 1}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.MyDataParallel.logit_scale": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.len_segment": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.len_segment": {"tf": 1}}, "df": 9, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.model.base_model.Model.process_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.process_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood": {"tf": 1}}, "df": 4}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}}, "df": 8}}}, "r": {"docs": {"dlc2action.task.universal_task.Task.lr": {"tf": 1}}, "df": 1}}, "f": {"1": {"docs": {"dlc2action.metric.metrics.F1": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}}, "df": 2}, "docs": {"dlc2action.model.asformer.ASFormer.num_f_maps": {"tf": 1}, "dlc2action.task.universal_task.Task.alpha_f": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"tf": 1}, "dlc2action.loss.contrastive_frame": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.neighboring_frames": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"tf": 1}}, "df": 10}}}, "c": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.frac_masked": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.task.universal_task.Task.log_file": {"tf": 1}}, "df": 16, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "s": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.FileInputStore": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}}, "df": 4}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.focal": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore.fps": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.utils.PostProcessor.func": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.base_model.Model.prompt_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss_function": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.primary_predict_function": {"tf": 1}}, "df": 7, "s": {"docs": {"dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.keys": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.ignored_clips": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.interactive": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.w": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.distance_pairs": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.angle_pairs": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.area_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.neighboring_frames": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_bools": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_distances": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.feature_extractors": {"tf": 1}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.feature_extractor": {"tf": 1}, "dlc2action.options.feature_extractors": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1}}, "df": 38, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.graph_features": {"tf": 1}}, "df": 14}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.metric.metrics.Fbeta": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.beta2": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {"dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}}, "df": 12}}, "t": {"1": {"docs": {"dlc2action.task.universal_task.Task.T1": {"tf": 1}}, "df": 1}, "2": {"docs": {"dlc2action.task.universal_task.Task.T2": {"tf": 1}}, "df": 1}, "docs": {"dlc2action.task.universal_task.Task.t": {"tf": 1}, "dlc2action.utils.PostProcessor.theta_t": {"tf": 1}}, "df": 2, "o": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.options.extractor_to_transformer": {"tf": 1}, "dlc2action.utils.TensorList.to_device": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"1": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"tf": 1}}, "df": 2}, "docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_active": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.task": {"tf": 1}, "dlc2action.task.task_dispatcher": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.blanks": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.task": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.process_labels": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.logit_scale": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train_dataloader": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.val_dataloader": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.test_dataloader": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.transformer": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.num_epochs": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.skip_metrics": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.verbose": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.augment_train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.augment_val": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.ignore_tags": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.validation_interval": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.log_file": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.loss": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.model_save_path": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.model_save_epochs": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.epoch": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.metrics": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.ssl_weights": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.optimizer_class": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.lr": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.parallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.primary_predict_function": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.pseudolabel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.alpha_f": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.T2": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.T1": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.t": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.decision_thresholds": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1.7320508075688772}}, "df": 114, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.blanks": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}}, "df": 35}}}}}}}}}}}}, "g": {"docs": {"dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.tag": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.task.universal_task.Task.ignore_tags": {"tf": 1}}, "df": 4}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.get_results_table": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}}, "df": 13, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.model.transformer": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.params": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1.4142135623730951}, "dlc2action.options.extractor_to_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.model_name": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.augmentations": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.ssl_augmentations": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.graph_features": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.dim": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.offset": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.scale": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.image_center": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.blank": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.noise_std": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.masking_probability": {"tf": 1}}, "df": 35, "s": {"docs": {"dlc2action.options.transformers": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore.transpose": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.augment_train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.meta.Run.training_time": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.input_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_type": {"tf": 1}, "dlc2action.project.project.Project.data_type": {"tf": 1}, "dlc2action.project.project.Project.annotation_type": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}}, "df": 16, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1}, "dlc2action.model.base_model.available_ssl_types": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1}, "dlc2action.project.project.Project.print_data_types": {"tf": 1}, "dlc2action.project.project.Project.print_annotation_types": {"tf": 1}, "dlc2action.project.project.Project.data_types": {"tf": 1}, "dlc2action.project.project.Project.annotation_types": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.task.universal_task.Task.test_dataloader": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.model.base_model.Model.class_tensors": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.utils.TensorDict": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.append": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.utils.TensorList": {"tf": 1}, "dlc2action.utils.TensorList.to_device": {"tf": 1}}, "df": 2}}}}}}}}}, "h": {"docs": {"dlc2action.utils.PostProcessor.boundary_th": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.threshold": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 6, "s": {"docs": {"dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.task.universal_task.Task.decision_thresholds": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.utils.PostProcessor.theta_t": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.focal": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.mse": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn": {"tf": 1}, "dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.params": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}}, "df": 32}, "c": {"docs": {"dlc2action.loss.tcc": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.ssl.tcc": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.len_segment": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss_function": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.pars": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}}, "df": 15, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.len_segment": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss_function": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.pars": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}}, "df": 9}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.Run.training_time": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}}, "df": 88}, "n": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"tf": 1}}, "df": 12}}, "l": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.loaded_max": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.normalize": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.centered": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_suffices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.data_prefixes": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.overlap": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.num_cpus": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.transpose": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.extractor": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_center": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.step": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}}, "df": 52}}}}}}}}}}}}}}}}, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.kernel_size": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.kernel": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.transformer.base_transformer.Transformer.graph_features": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"tf": 1}}, "df": 2}}}}}, "c": {"2": {"docs": {}, "df": 0, "f": {"docs": {"dlc2action.model.c2f_tcn": {"tf": 1}, "dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.params": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1.4142135623730951}}, "df": 6}}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {"dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.classes": {"tf": 1}, "dlc2action.metric.metrics.Count.exclusive": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 14}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.utils.correct_path": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.correction": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.contrastive": {"tf": 1}, "dlc2action.loss.contrastive_frame": {"tf": 1}, "dlc2action.ssl.contrastive": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.start": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.end": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.start": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.end": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}}, "df": 45, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}}, "df": 8}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.start": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.end": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}}, "df": 10}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}}, "df": 19, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.model.base_model.Model.class_tensors": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights": {"tf": 1}, "dlc2action.task.universal_task.Task.optimizer_class": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"tf": 1}, "dlc2action.metric.metrics.Count.classes": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.classes": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 13}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}}, "df": 9, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.ignored_clips": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.meta.SavedStores.clear": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"2": {"1": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}}, "df": 6}}}}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "c": {"docs": {"dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}}, "df": 5}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.canvas_center": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.separator": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.fps": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}, "e": {"docs": {"dlc2action.ssl.segment_order.ReverseSSL.ce": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.ce": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.input_store.GeneralInputStore.canvas_center": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.image_center": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.input_store.GeneralInputStore.centered": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.num_cpus": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}}, "df": 1}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}}, "df": 8}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_type": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.tag": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.return_unlabeled": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.input_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}}, "df": 45}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"2": {"docs": {"dlc2action.metric.metrics.Fbeta.beta2": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.beta2": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.metric.base_metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.model.base_model": {"tf": 1}, "dlc2action.model.base_model.available_ssl_types": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.process_labels": {"tf": 1}, "dlc2action.model.base_model.Model.feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.feature_extractors": {"tf": 1}, "dlc2action.model.base_model.Model.predictor": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_active": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_active": {"tf": 1}, "dlc2action.model.base_model.Model.prompt_function": {"tf": 1}, "dlc2action.model.base_model.Model.class_tensors": {"tf": 1}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_active": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.feature_extractor": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.ssl.base_ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1}, "dlc2action.transformer.base_transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.model_name": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.augmentations": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.ssl_augmentations": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.graph_features": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}}, "df": 99}, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts": {"tf": 1}}, "df": 6}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}, "dlc2action.utils.PostProcessor.boundary_th": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.zone_bools": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.blank": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.options.blanks": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.blanks": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.Task.pseudolabel": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1}, "dlc2action.project.meta.Run.project_path": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.project_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedStores.path": {"tf": 1}, "dlc2action.project.project.Project.project_path": {"tf": 1}, "dlc2action.project.project.Project.data_path": {"tf": 1}, "dlc2action.project.project.Project.annotation_path": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_path": {"tf": 1}, "dlc2action.utils.correct_path": {"tf": 1}}, "df": 13, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}}, "df": 22}}}}}, "s": {"docs": {"dlc2action.model.asformer.ASFormer.params": {"tf": 1}, "dlc2action.model.asformer.ASFormer.params_predictor": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.params": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.params": {"tf": 1}, "dlc2action.model.mlp.MLP.params": {"tf": 1}, "dlc2action.model.transformer.Transformer.params": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}}, "df": 8}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.Task.parallel": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.options.partition_methods": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {"dlc2action.ssl.contrastive.ContrastiveSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.pars": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.pars": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.pars": {"tf": 1}}, "df": 14}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.distance_pairs": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.angle_pairs": {"tf": 1}}, "df": 2}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}}, "df": 7}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.start": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.end": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.pars": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.average": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.exclusive": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.classes": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}}, "df": 14, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.interactive": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}}, "df": 5}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.utils.PostProcessor": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}, "dlc2action.utils.PostProcessor.func": {"tf": 1}, "dlc2action.utils.PostProcessor.name": {"tf": 1}, "dlc2action.utils.PostProcessor.boundary_th": {"tf": 1}, "dlc2action.utils.PostProcessor.theta_t": {"tf": 1}, "dlc2action.utils.PostProcessor.kernel_size": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "r": {"docs": {"dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.primary_predict_function": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}}, "df": 10, "s": {"docs": {"dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.model.asformer.ASFormer.params_predictor": {"tf": 1}, "dlc2action.model.base_model.Model.predictor": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.data_prefixes": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.metric.metrics.Precision": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.model.base_model.Model.process_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.process_labels": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.model.base_model.Model.prompt_function": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.project.meta": {"tf": 1}, "dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.Run.name": {"tf": 1}, "dlc2action.project.meta.Run.project_path": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.training_time": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.path": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.data": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.project_path": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.data": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}, "dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.path": {"tf": 1}, "dlc2action.project.meta.SavedStores.data": {"tf": 1}, "dlc2action.project.meta.SavedStores.skip_keys": {"tf": 1}, "dlc2action.project.meta.SavedStores.clear": {"tf": 1}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.project_path": {"tf": 2}, "dlc2action.project.project.Project.name": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.data_type": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.annotation_type": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.data_path": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.annotation_path": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_searches": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.update_parameters": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_summary": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_project": {"tf": 2}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.prediction_path": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.print_data_types": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.print_annotation_types": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.data_types": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.annotation_types": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.help": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_blanks": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.count_classes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.import_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.episode_exists": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.search_exists": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.project_name_available": {"tf": 2}, "dlc2action.project.project.Project.rename_episode": {"tf": 1.7320508075688772}}, "df": 119}}}}, "b": {"docs": {"dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.masking_probability": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.prune_unfinished": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.print_data_types": {"tf": 1}, "dlc2action.project.project.Project.print_annotation_types": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.task.universal_task.Task.primary_predict_function": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 4}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}}, "df": 5}}}, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}}, "df": 5}}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.task.universal_task.Task.val_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.augment_val": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.universal_task.Task.validation_interval": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.area_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_vertices": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.Task.verbose": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.version": {"tf": 1}, "dlc2action.version.VERSION": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.metrics_minimize": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.loaded_max": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.mask": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked": {"tf": 1}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.frac_masked": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.frac_masked": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.frac_masked": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}}, "df": 50, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}}, "df": 16}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}}, "df": 16}}}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.frac_masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}}, "df": 16}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.masking_probability": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.average": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.exclusive": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.classes": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}}, "df": 14, "s": {"docs": {"dlc2action.model.asformer.ASFormer.num_f_maps": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.base_model.Model.main_task_active": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 1}}, "df": 5}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.focal": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.mse": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.4142135623730951}}, "df": 14, "e": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.mse": {"tf": 1}, "dlc2action.loss.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.mse": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.mse": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.Recall": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.F1": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.Fbeta": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.beta2": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.beta2": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.classes": {"tf": 1}, "dlc2action.metric.metrics.Count.exclusive": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.exclusive": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.average": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.exclusive": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.classes": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters": {"tf": 1}}, "df": 76, "s": {"docs": {"dlc2action.metric.metrics": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.Recall": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.F1": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.Fbeta": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.beta2": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.beta2": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.classes": {"tf": 1}, "dlc2action.metric.metrics.Count.exclusive": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.ignore_index": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.exclusive": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.average": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.threshold": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.exclusive": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.classes": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.options.metrics": {"tf": 1}, "dlc2action.options.metrics_minimize": {"tf": 1}, "dlc2action.options.metrics_no_direction": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.skip_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}}, "df": 75}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {"dlc2action.project.meta": {"tf": 1}, "dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.Run.name": {"tf": 1}, "dlc2action.project.meta.Run.project_path": {"tf": 1}, "dlc2action.project.meta.Run.training_time": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.path": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.data": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.project_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.data": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}, "dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.path": {"tf": 1}, "dlc2action.project.meta.SavedStores.data": {"tf": 1}, "dlc2action.project.meta.SavedStores.skip_keys": {"tf": 1}, "dlc2action.project.meta.SavedStores.clear": {"tf": 1}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}}, "df": 62, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.model": {"tf": 1}, "dlc2action.model.asformer": {"tf": 1}, "dlc2action.model.asformer.device": {"tf": 1}, "dlc2action.model.asformer.ASFormer": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.num_f_maps": {"tf": 1}, "dlc2action.model.asformer.ASFormer.params": {"tf": 1}, "dlc2action.model.asformer.ASFormer.params_predictor": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.available_ssl_types": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.process_labels": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.feature_extractor": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.feature_extractors": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.predictor": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.ssl_active": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.main_task_active": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.prompt_function": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.class_tensors": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.forward": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.LoadedModel": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel.ssl_active": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel.feature_extractor": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn": {"tf": 1}, "dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.params": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn": {"tf": 1}, "dlc2action.model.edtcn.EDTCN": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.params": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp": {"tf": 1}, "dlc2action.model.mlp.MLP": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.params": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.params": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_path": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_epochs": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.model_name": {"tf": 1}}, "df": 68, "s": {"docs": {"dlc2action.options.models": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}}, "df": 19, "s": {"docs": {"dlc2action.ssl.modules": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.model.mlp": {"tf": 1}, "dlc2action.model.mlp.MLP": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.params": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1.4142135623730951}}, "df": 5}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.losses_multistage": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.process_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.logit_scale": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1}}, "df": 12}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}}, "df": 12}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.return_unlabeled": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.process_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.logit_scale": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.val_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.test_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.num_epochs": {"tf": 1}, "dlc2action.task.universal_task.Task.skip_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.verbose": {"tf": 1}, "dlc2action.task.universal_task.Task.augment_train": {"tf": 1}, "dlc2action.task.universal_task.Task.augment_val": {"tf": 1}, "dlc2action.task.universal_task.Task.ignore_tags": {"tf": 1}, "dlc2action.task.universal_task.Task.validation_interval": {"tf": 1}, "dlc2action.task.universal_task.Task.log_file": {"tf": 1}, "dlc2action.task.universal_task.Task.loss": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_path": {"tf": 1}, "dlc2action.task.universal_task.Task.model_save_epochs": {"tf": 1}, "dlc2action.task.universal_task.Task.epoch": {"tf": 1}, "dlc2action.task.universal_task.Task.metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.ssl_weights": {"tf": 1}, "dlc2action.task.universal_task.Task.optimizer_class": {"tf": 1}, "dlc2action.task.universal_task.Task.lr": {"tf": 1}, "dlc2action.task.universal_task.Task.parallel": {"tf": 1}, "dlc2action.task.universal_task.Task.primary_predict_function": {"tf": 1}, "dlc2action.task.universal_task.Task.pseudolabel": {"tf": 1}, "dlc2action.task.universal_task.Task.alpha_f": {"tf": 1}, "dlc2action.task.universal_task.Task.T2": {"tf": 1}, "dlc2action.task.universal_task.Task.T1": {"tf": 1}, "dlc2action.task.universal_task.Task.t": {"tf": 1}, "dlc2action.task.universal_task.Task.decision_thresholds": {"tf": 1}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1}}, "df": 72}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}}, "df": 2}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.utils": {"tf": 1}, "dlc2action.utils.TensorDict": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.append": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}, "dlc2action.utils.correct_path": {"tf": 1}, "dlc2action.utils.TensorList": {"tf": 1}, "dlc2action.utils.TensorList.to_device": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.kernel_size": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.kernel": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}, "dlc2action.utils.PostProcessor": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}, "dlc2action.utils.PostProcessor.func": {"tf": 1}, "dlc2action.utils.PostProcessor.name": {"tf": 1}, "dlc2action.utils.PostProcessor.boundary_th": {"tf": 1}, "dlc2action.utils.PostProcessor.theta_t": {"tf": 1}, "dlc2action.utils.PostProcessor.kernel_size": {"tf": 1}}, "df": 31}}}}}, "n": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {"dlc2action.data.base_store.Store.new": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.neighboring_frames": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1}, "dlc2action.project.meta.Run.name": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.name": {"tf": 1}, "dlc2action.project.project.Project.project_name_available": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.model_name": {"tf": 1}, "dlc2action.utils.PostProcessor.name": {"tf": 1}}, "df": 12, "s": {"docs": {"dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.num_cpus": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"tf": 1}, "dlc2action.model.asformer.ASFormer.num_f_maps": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.num_segments": {"tf": 1}, "dlc2action.task.universal_task.Task.num_epochs": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "y": {"3": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "docs": {}, "df": 0}}}}, "o": {"docs": {"dlc2action.options.metrics_no_direction": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore.normalize": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {"dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.noise_std": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.w": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights": {"tf": 1}, "dlc2action.task.universal_task.Task.ssl_weights": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.zone_vertices": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_bools": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.zone_distances": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.project.Project.help": {"tf": 1}}, "df": 1}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"0": {"1": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2.23606797749979}}, "df": 1}, "5": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2.23606797749979}}, "df": 1}, "docs": {"dlc2action.options.model_hyperparameters": {"tf": 3.872983346207417}, "dlc2action.version.VERSION": {"tf": 1}}, "df": 2}, "1": {"0": {"2": {"4": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}, "2": {"8": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2.23606797749979}}, "df": 1}, "docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}, "docs": {"dlc2action.options.model_hyperparameters": {"tf": 2.6457513110645907}}, "df": 1, "e": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2.23606797749979}}, "df": 1}}, "2": {"5": {"6": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"dlc2action.options.model_hyperparameters": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.model.base_model.available_ssl_types": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}}, "df": 3}}}}}}, "b": {"3": {"docs": {"dlc2action.version.VERSION": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "3": {"2": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1, "d": {"docs": {"dlc2action.options.input_stores": {"tf": 1}}, "df": 1}}, "4": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2}}, "df": 1}, "5": {"1": {"2": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"dlc2action.options.model_hyperparameters": {"tf": 1.4142135623730951}}, "df": 1}, "6": {"4": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}, "7": {"5": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}, "docs": {"dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.device": {"tf": 1}, "dlc2action.model.base_model.available_ssl_types": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}, "dlc2action.options.input_stores": {"tf": 3}, "dlc2action.options.annotation_stores": {"tf": 3}, "dlc2action.options.feature_extractors": {"tf": 1.7320508075688772}, "dlc2action.options.ssl_constructors": {"tf": 3.605551275463989}, "dlc2action.options.transformers": {"tf": 1.7320508075688772}, "dlc2action.options.losses": {"tf": 1.7320508075688772}, "dlc2action.options.losses_multistage": {"tf": 1.4142135623730951}, "dlc2action.options.metrics": {"tf": 4.358898943540674}, "dlc2action.options.metrics_minimize": {"tf": 1.4142135623730951}, "dlc2action.options.metrics_no_direction": {"tf": 1.4142135623730951}, "dlc2action.options.optimizers": {"tf": 2}, "dlc2action.options.models": {"tf": 2.6457513110645907}, "dlc2action.options.blanks": {"tf": 1.4142135623730951}, "dlc2action.options.extractor_to_transformer": {"tf": 2}, "dlc2action.options.partition_methods": {"tf": 2.6457513110645907}, "dlc2action.options.basic_parameters": {"tf": 9.746794344808963}, "dlc2action.options.model_hyperparameters": {"tf": 6.708203932499369}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}, "dlc2action.version.VERSION": {"tf": 1.4142135623730951}}, "df": 37, "n": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore.data_suffix": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.model.base_model.available_ssl_types": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1}, "dlc2action.options.annotation_stores": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {"dlc2action.options.input_stores": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.options.basic_parameters": {"tf": 2.6457513110645907}}, "df": 1, "p": {"docs": {}, "df": 0, "y": {"3": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.input_stores": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "docs": {}, "df": 0}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.partition_methods": {"tf": 1.4142135623730951}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 2, ":": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}}}}}}, "}": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}}}}}}}}}}, "x": {"2": {"7": {"docs": {"dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.device": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.available_ssl_types": {"tf": 3.1622776601683795}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1.4142135623730951}, "dlc2action.options.input_stores": {"tf": 5.291502622129181}, "dlc2action.options.annotation_stores": {"tf": 5.291502622129181}, "dlc2action.options.feature_extractors": {"tf": 2}, "dlc2action.options.ssl_constructors": {"tf": 6.6332495807108}, "dlc2action.options.transformers": {"tf": 2}, "dlc2action.options.losses": {"tf": 2}, "dlc2action.options.losses_multistage": {"tf": 1.4142135623730951}, "dlc2action.options.metrics": {"tf": 8.246211251235321}, "dlc2action.options.metrics_minimize": {"tf": 1.4142135623730951}, "dlc2action.options.metrics_no_direction": {"tf": 1.4142135623730951}, "dlc2action.options.optimizers": {"tf": 2.8284271247461903}, "dlc2action.options.models": {"tf": 4.47213595499958}, "dlc2action.options.blanks": {"tf": 4}, "dlc2action.options.extractor_to_transformer": {"tf": 2.8284271247461903}, "dlc2action.options.partition_methods": {"tf": 5.291502622129181}, "dlc2action.options.basic_parameters": {"tf": 17.320508075688775}, "dlc2action.options.model_hyperparameters": {"tf": 11.224972160321824}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}, "dlc2action.version.VERSION": {"tf": 1.4142135623730951}}, "df": 35}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "t": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 2.449489742783178}}, "df": 7}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.options.input_stores": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.input_stores": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.options.transformers": {"tf": 1}, "dlc2action.options.models": {"tf": 1.7320508075688772}, "dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 4}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2.23606797749979}}, "df": 1}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.asformer.device": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.model.base_model.available_ssl_types": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"dlc2action.options.losses": {"tf": 1.7320508075688772}, "dlc2action.options.losses_multistage": {"tf": 1}, "dlc2action.options.models": {"tf": 1.7320508075688772}, "dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 5, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2.23606797749979}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2.23606797749979}}, "df": 1}}}}}}}}, "o": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.options.optimizers": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1, ":": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.partition_methods": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.options.basic_parameters": {"tf": 4.358898943540674}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}, "dlc2action.options.input_stores": {"tf": 2.6457513110645907}, "dlc2action.options.annotation_stores": {"tf": 2.6457513110645907}, "dlc2action.options.feature_extractors": {"tf": 1}, "dlc2action.options.ssl_constructors": {"tf": 3.3166247903554}, "dlc2action.options.transformers": {"tf": 1}, "dlc2action.options.losses": {"tf": 1}, "dlc2action.options.metrics": {"tf": 4.123105625617661}, "dlc2action.options.optimizers": {"tf": 1.4142135623730951}, "dlc2action.options.models": {"tf": 2.23606797749979}}, "df": 11}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.input_stores": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.losses": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 3.1622776601683795}}, "df": 1}}}}}}}, "g": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2.449489742783178}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.blanks": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}, "c": {"2": {"docs": {}, "df": 0, "f": {"docs": {"dlc2action.options.models": {"tf": 1.7320508075688772}, "dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 3}}, "docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.options.input_stores": {"tf": 2.6457513110645907}, "dlc2action.options.annotation_stores": {"tf": 2.6457513110645907}, "dlc2action.options.feature_extractors": {"tf": 1}, "dlc2action.options.ssl_constructors": {"tf": 3.3166247903554}, "dlc2action.options.transformers": {"tf": 1}, "dlc2action.options.losses": {"tf": 1}, "dlc2action.options.metrics": {"tf": 4.123105625617661}, "dlc2action.options.optimizers": {"tf": 1.4142135623730951}, "dlc2action.options.models": {"tf": 2.23606797749979}}, "df": 10, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.blanks": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 3.7416573867739413}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.model.asformer.device": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.available_ssl_types": {"tf": 1.4142135623730951}, "dlc2action.options.ssl_constructors": {"tf": 2.8284271247461903}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}}, "df": 7, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.metrics": {"tf": 1.4142135623730951}, "dlc2action.options.metrics_no_direction": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"2": {"1": {"docs": {"dlc2action.options.input_stores": {"tf": 1}, "dlc2action.options.annotation_stores": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.input_stores": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.annotation_stores": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 3.4641016151377544}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"dlc2action.options.annotation_stores": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.annotation_stores": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"2": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.options.input_stores": {"tf": 2.6457513110645907}, "dlc2action.options.annotation_stores": {"tf": 2.6457513110645907}, "dlc2action.options.feature_extractors": {"tf": 1}, "dlc2action.options.ssl_constructors": {"tf": 3.3166247903554}, "dlc2action.options.transformers": {"tf": 1}, "dlc2action.options.losses": {"tf": 1}, "dlc2action.options.metrics": {"tf": 4.123105625617661}, "dlc2action.options.models": {"tf": 2.23606797749979}}, "df": 9}}}}}}}, "docs": {"dlc2action.options.input_stores": {"tf": 1.4142135623730951}, "dlc2action.options.annotation_stores": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.input_stores": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.input_stores": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.annotation_stores": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.options.input_stores": {"tf": 2.6457513110645907}, "dlc2action.options.annotation_stores": {"tf": 2.6457513110645907}, "dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.blanks": {"tf": 2.6457513110645907}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.asformer.device": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.metrics": {"tf": 1}, "dlc2action.options.metrics_minimize": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.annotation_stores": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.annotation_stores": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.blanks": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.options.blanks": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.options.metrics": {"tf": 1.4142135623730951}, "dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}}, "df": 2}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.options.input_stores": {"tf": 2.6457513110645907}, "dlc2action.options.annotation_stores": {"tf": 2.6457513110645907}}, "df": 3}}}, "d": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.model.base_model.available_ssl_types": {"tf": 1.4142135623730951}, "dlc2action.options.ssl_constructors": {"tf": 3.3166247903554}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.options.input_stores": {"tf": 1}, "dlc2action.options.annotation_stores": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.input_stores": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.annotation_stores": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}, "dlc2action.options.model_hyperparameters": {"tf": 2.23606797749979}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1.4142135623730951}, "dlc2action.options.blanks": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 2}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.metrics": {"tf": 2}, "dlc2action.options.basic_parameters": {"tf": 2}}, "df": 2, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.metrics": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.metrics": {"tf": 1}}, "df": 1}}}}}}, "f": {"1": {"docs": {"dlc2action.options.metrics": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.options.metrics": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.metrics": {"tf": 2}, "dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}}, "df": 2, "p": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.options.metrics": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.metrics": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.metrics": {"tf": 1}}, "df": 1}}}}}}, "f": {"1": {"docs": {"dlc2action.options.metrics": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.options.optimizers": {"tf": 1.7320508075688772}}, "df": 1}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 2.23606797749979}}, "df": 2}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.options.input_stores": {"tf": 1}, "dlc2action.options.annotation_stores": {"tf": 1}, "dlc2action.options.metrics": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.input_stores": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.annotation_stores": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {"dlc2action.options.metrics": {"tf": 1.7320508075688772}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.metrics": {"tf": 2}, "dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.blanks": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}, "dlc2action.options.input_stores": {"tf": 2.6457513110645907}, "dlc2action.options.annotation_stores": {"tf": 2.6457513110645907}, "dlc2action.options.feature_extractors": {"tf": 1}, "dlc2action.options.ssl_constructors": {"tf": 3.3166247903554}, "dlc2action.options.transformers": {"tf": 1}, "dlc2action.options.losses": {"tf": 1}, "dlc2action.options.metrics": {"tf": 4.123105625617661}, "dlc2action.options.optimizers": {"tf": 1.4142135623730951}, "dlc2action.options.models": {"tf": 2.23606797749979}}, "df": 11}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "f": {"1": {"docs": {"dlc2action.options.metrics": {"tf": 2}, "dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}}, "df": 2}, "docs": {"dlc2action.options.metrics": {"tf": 1.4142135623730951}, "dlc2action.options.basic_parameters": {"tf": 2.449489742783178}, "dlc2action.options.model_hyperparameters": {"tf": 1.4142135623730951}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.model.base_model.Model.process_labels": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 2.449489742783178}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.feature_extractors": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"dlc2action.options.input_stores": {"tf": 1}, "dlc2action.options.ssl_constructors": {"tf": 1}, "dlc2action.options.blanks": {"tf": 1.4142135623730951}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 4}}}}}}}, "c": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1.7320508075688772}}, "df": 1}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}, "c": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}}, "df": 1}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.options.partition_methods": {"tf": 2}}, "df": 1, ":": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1, "}": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.options.metrics": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 3.4641016151377544}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.model.base_model.available_ssl_types": {"tf": 1}, "dlc2action.options.input_stores": {"tf": 2.6457513110645907}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.blanks": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2.23606797749979}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.options.basic_parameters": {"tf": 3.872983346207417}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.options.basic_parameters": {"tf": 2.8284271247461903}}, "df": 1}}}, "r": {"1": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}, "2": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.metrics": {"tf": 2}, "dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.options.partition_methods": {"tf": 1.4142135623730951}}, "df": 1, ":": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.partition_methods": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 2}}}, "m": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.options.input_stores": {"tf": 1}, "dlc2action.options.annotation_stores": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 2.8284271247461903}}, "df": 1, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {"dlc2action.options.metrics": {"tf": 1.4142135623730951}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 2}, "dlc2action.options.model_hyperparameters": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {"dlc2action.options.losses": {"tf": 1.7320508075688772}, "dlc2action.options.losses_multistage": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.options.metrics": {"tf": 4.123105625617661}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.options.metrics": {"tf": 4.123105625617661}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.models": {"tf": 2.23606797749979}, "dlc2action.options.blanks": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 3, "/": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 2.23606797749979}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.options.models": {"tf": 1.7320508075688772}, "dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 1}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.annotation_stores": {"tf": 2.6457513110645907}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.options.metrics": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.options.metrics": {"tf": 2}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 2}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.options.optimizers": {"tf": 1.7320508075688772}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.options.models": {"tf": 1.7320508075688772}, "dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 3}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dlc2action.options.basic_parameters": {"tf": 3.605551275463989}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.annotation_stores": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.feature_extractors": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.metrics": {"tf": 1}, "dlc2action.options.metrics_minimize": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.metrics": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.options.models": {"tf": 1.7320508075688772}, "dlc2action.options.basic_parameters": {"tf": 1}, "dlc2action.options.model_hyperparameters": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.options.feature_extractors": {"tf": 1}, "dlc2action.options.transformers": {"tf": 1.4142135623730951}, "dlc2action.options.extractor_to_transformer": {"tf": 1.4142135623730951}, "dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 4, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.options.feature_extractors": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.options.transformers": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.ssl_constructors": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.options.optimizers": {"tf": 1.4142135623730951}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.options.blanks": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.options.blanks": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.options.extractor_to_transformer": {"tf": 1.4142135623730951}, "dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.options.partition_methods": {"tf": 1}, "dlc2action.options.basic_parameters": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.basic_parameters": {"tf": 3}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "signature": {"root": {"0": {"0": {"1": {"docs": {"dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 6}, "docs": {}, "df": 0}, "5": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.23606797749979}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 2}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}, "dlc2action.utils.smooth": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 66}, "1": {"0": {"0": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 17}, "docs": {"dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 14}, "1": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 2}, "2": {"8": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}}, "df": 18}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 1}, "docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1.4142135623730951}}, "df": 3}, "6": {"docs": {"dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}}, "df": 3}, "docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}}, "df": 33}, "2": {"0": {"docs": {"dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 3}, "docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 16}, "3": {"0": {"0": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 4}, "docs": {"dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 6}, "2": {"docs": {"dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 9}, "9": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 2}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 2}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.F1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 2}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2}, "dlc2action.project.project.Project.import_episodes": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}}, "df": 50}, "docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 4}, "5": {"0": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 2}, "docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}}, "df": 17}, "6": {"0": {"0": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 6}, "docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 6.6332495807108}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 4.47213595499958}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 4.47213595499958}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 4}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 5.656854249492381}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 4.898979485566356}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 4.47213595499958}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 5.291502622129181}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 7.615773105863909}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 4.898979485566356}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 20.322401432901575}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 4.47213595499958}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 4.47213595499958}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 4}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 5.656854249492381}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 4.47213595499958}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 4.47213595499958}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 7.615773105863909}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 4.898979485566356}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 8.06225774829855}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 7.54983443527075}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 20.73644135332772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 19.313207915827967}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 6.48074069840786}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 13.892443989449804}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 10.677078252031311}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 20.42057785666214}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 18.920887928424502}, "dlc2action.data.base_store.Store.remove": {"tf": 4.47213595499958}, "dlc2action.data.base_store.Store.key_objects": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 4.47213595499958}, "dlc2action.data.base_store.Store.to_ram": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 4}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 5.656854249492381}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 4.898979485566356}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.Store.new": {"tf": 3.1622776601683795}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 10.862780491200215}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 4.47213595499958}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 4.47213595499958}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 5.291502622129181}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 5.477225575051661}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 5.291502622129181}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 7.615773105863909}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 4.47213595499958}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 4.47213595499958}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 5}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 4.47213595499958}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 8.54400374531753}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 4.47213595499958}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 7.615773105863909}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 4.898979485566356}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 7}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 6.324555320336759}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 5.291502622129181}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 12.884098726725126}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 4.47213595499958}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 4.898979485566356}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 15.329709716755891}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 4}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 4}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 12.24744871391589}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 4.47213595499958}, "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 3.1622776601683795}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 5.0990195135927845}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 4.47213595499958}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 4.69041575982343}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 5.291502622129181}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 3}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 3}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 5.291502622129181}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 5}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 4.47213595499958}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 5.291502622129181}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 7.54983443527075}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 4.47213595499958}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 5.0990195135927845}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 4.47213595499958}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 19.924858845171276}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 4.47213595499958}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 4.47213595499958}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 3.4641016151377544}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 4.47213595499958}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 3.4641016151377544}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 4}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 5.656854249492381}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 4.47213595499958}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 4.47213595499958}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 5.291502622129181}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 5.477225575051661}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 5.291502622129181}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 7.615773105863909}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 3.4641016151377544}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 11.489125293076057}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 3.4641016151377544}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 6.324555320336759}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 5.291502622129181}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 7}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 4.47213595499958}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 3.4641016151377544}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 5}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 9.055385138137417}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 13.96424004376894}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 15}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 10.295630140987}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 19.235384061671343}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 15.033296378372908}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 7.615773105863909}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 9.055385138137417}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 18.439088914585774}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 4.898979485566356}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 6.48074069840786}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 6.244997998398398}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 14.2828568570857}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 7.810249675906654}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 11.357816691600547}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 4.898979485566356}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 6}, "dlc2action.loss.tcc.gen_cycles": {"tf": 4.69041575982343}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 9}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 11.313708498984761}, "dlc2action.loss.tcc.regression_loss": {"tf": 6.782329983125268}, "dlc2action.metric.base_metric.Metric.update": {"tf": 7.211102550927978}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 3.4641016151377544}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 4.69041575982343}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 10.488088481701515}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 10.954451150103322}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 11.61895003862225}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 10.954451150103322}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 11.61895003862225}, "dlc2action.metric.metrics.F1.__init__": {"tf": 11.61895003862225}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 11.61895003862225}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 11.445523142259598}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 12.083045973594572}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 14.491376746189438}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 14.491376746189438}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 14.491376746189438}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 14.142135623730951}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 3.4641016151377544}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 3.4641016151377544}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 3.4641016151377544}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 7.615773105863909}, "dlc2action.metric.metrics.Count.__init__": {"tf": 5.0990195135927845}, "dlc2action.metric.metrics.Count.reset": {"tf": 3.4641016151377544}, "dlc2action.metric.metrics.Count.update": {"tf": 7.211102550927978}, "dlc2action.metric.metrics.Count.calculate": {"tf": 3.4641016151377544}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 5.916079783099616}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 3.4641016151377544}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 7.211102550927978}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 3.4641016151377544}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 6.782329983125268}, "dlc2action.metric.metrics.PKU_mAP.match": {"tf": 4.69041575982343}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 3.4641016151377544}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 4.69041575982343}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 4.69041575982343}, "dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 5.0990195135927845}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 7.211102550927978}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 8.94427190999916}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 4}, "dlc2action.model.base_model.Model.__init__": {"tf": 9.695359714832659}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 3.4641016151377544}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 3.4641016151377544}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 5.830951894845301}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 3.4641016151377544}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 3.4641016151377544}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 3.4641016151377544}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 3.4641016151377544}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 7.615773105863909}, "dlc2action.model.base_model.Model.features_shape": {"tf": 4}, "dlc2action.model.base_model.Model.extract_features": {"tf": 4.69041575982343}, "dlc2action.model.base_model.Model.forward": {"tf": 8.246211251235321}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 5.830951894845301}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 3.1622776601683795}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 8.246211251235321}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 4.58257569495584}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 8.306623862918075}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 4}, "dlc2action.model.mlp.MLP.__init__": {"tf": 8}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 4}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 9.38083151964686}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 4}, "dlc2action.project.meta.Run.__init__": {"tf": 7.211102550927978}, "dlc2action.project.meta.Run.training_time": {"tf": 3.4641016151377544}, "dlc2action.project.meta.Run.model_file": {"tf": 5.0990195135927845}, "dlc2action.project.meta.Run.dataset_name": {"tf": 3.4641016151377544}, "dlc2action.project.meta.Run.split_file": {"tf": 3.4641016151377544}, "dlc2action.project.meta.Run.log_file": {"tf": 3.4641016151377544}, "dlc2action.project.meta.Run.split_info": {"tf": 3.4641016151377544}, "dlc2action.project.meta.Run.same_split_info": {"tf": 4.47213595499958}, "dlc2action.project.meta.Run.get_metrics": {"tf": 3.4641016151377544}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 5.656854249492381}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 4}, "dlc2action.project.meta.Run.unfinished": {"tf": 3.4641016151377544}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 4.47213595499958}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 3.4641016151377544}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 3.4641016151377544}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 3.4641016151377544}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 7.615773105863909}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 7.3484692283495345}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 4.47213595499958}, "dlc2action.project.meta.SavedRuns.update": {"tf": 9.055385138137417}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 5.656854249492381}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 4.47213595499958}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 4.47213595499958}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 5.291502622129181}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 8.366600265340756}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 4.47213595499958}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 3.4641016151377544}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 8.48528137423857}, "dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 4.242640687119285}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 4.47213595499958}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 3.4641016151377544}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 6.48074069840786}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 4.47213595499958}, "dlc2action.project.meta.Searches.save_search": {"tf": 8.717797887081348}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 4.47213595499958}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 7.211102550927978}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 5.477225575051661}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 2.8284271247461903}, "dlc2action.project.meta.SavedStores.clear": {"tf": 3.4641016151377544}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 3.4641016151377544}, "dlc2action.project.meta.SavedStores.remove": {"tf": 4.47213595499958}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 4.47213595499958}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 4.47213595499958}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 5.291502622129181}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 4.47213595499958}, "dlc2action.project.project.Project.__init__": {"tf": 11.180339887498949}, "dlc2action.project.project.Project.run_episode": {"tf": 17.776388834631177}, "dlc2action.project.project.Project.run_episodes": {"tf": 13.564659966250536}, "dlc2action.project.project.Project.continue_episode": {"tf": 11.74734012447073}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 15.588457268119896}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 14.142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 14.071247279470288}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 10.344080432788601}, "dlc2action.project.project.Project.evaluate": {"tf": 12.609520212918492}, "dlc2action.project.project.Project.list_episodes": {"tf": 9.327379053088816}, "dlc2action.project.project.Project.list_predictions": {"tf": 9.327379053088816}, "dlc2action.project.project.Project.list_searches": {"tf": 9.327379053088816}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 5.656854249492381}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 5.830951894845301}, "dlc2action.project.project.Project.plot_episodes": {"tf": 12.288205727444508}, "dlc2action.project.project.Project.update_parameters": {"tf": 8.54400374531753}, "dlc2action.project.project.Project.get_summary": {"tf": 8.306623862918075}, "dlc2action.project.project.Project.remove_project": {"tf": 5.477225575051661}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 7.615773105863909}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 6.324555320336759}, "dlc2action.project.project.Project.remove_search": {"tf": 4.47213595499958}, "dlc2action.project.project.Project.remove_prediction": {"tf": 4.47213595499958}, "dlc2action.project.project.Project.remove_episode": {"tf": 4.47213595499958}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 5.0990195135927845}, "dlc2action.project.project.Project.prediction_path": {"tf": 4.47213595499958}, "dlc2action.project.project.Project.print_data_types": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.print_annotation_types": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.data_types": {"tf": 3}, "dlc2action.project.project.Project.annotation_types": {"tf": 3}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 6.164414002968976}, "dlc2action.project.project.Project.help": {"tf": 4.898979485566356}, "dlc2action.project.project.Project.list_blanks": {"tf": 4.242640687119285}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.count_classes": {"tf": 8.54400374531753}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 9.38083151964686}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 11.090536506409418}, "dlc2action.project.project.Project.plot_predictions": {"tf": 17.635192088548397}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 3.4641016151377544}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 3.4641016151377544}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 4.47213595499958}, "dlc2action.project.project.Project.import_episodes": {"tf": 7.3484692283495345}, "dlc2action.project.project.Project.export_episodes": {"tf": 6.782329983125268}, "dlc2action.project.project.Project.get_results_table": {"tf": 8.06225774829855}, "dlc2action.project.project.Project.episode_exists": {"tf": 4.47213595499958}, "dlc2action.project.project.Project.search_exists": {"tf": 4.47213595499958}, "dlc2action.project.project.Project.prediction_exists": {"tf": 4.47213595499958}, "dlc2action.project.project.Project.project_name_available": {"tf": 4.69041575982343}, "dlc2action.project.project.Project.rename_episode": {"tf": 5.0990195135927845}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 5.477225575051661}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 6}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 5.291502622129181}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 4.47213595499958}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 6}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 3.4641016151377544}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 7.483314773547883}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 4.47213595499958}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 6}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 8.426149773176359}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 4.47213595499958}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 6}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 10.246950765959598}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 4.47213595499958}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 6}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 10.954451150103322}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 4.47213595499958}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 9.695359714832659}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 6}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 4.47213595499958}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 4.242640687119285}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 4.47213595499958}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 6}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 5.291502622129181}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 8.660254037844387}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 7.483314773547883}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 4.242640687119285}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 4.47213595499958}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 6}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 8.660254037844387}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 7.745966692414834}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 4.242640687119285}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 4.47213595499958}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 6}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 8.660254037844387}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 7.745966692414834}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 5.744562646538029}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 4.898979485566356}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 4.47213595499958}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 6}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 5.291502622129181}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 8.426149773176359}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 4.47213595499958}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 6}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 5.291502622129181}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 13.416407864998739}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 4.47213595499958}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 6}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 5.744562646538029}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 3.4641016151377544}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 4.898979485566356}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 6.6332495807108}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 4.898979485566356}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 5.0990195135927845}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 8.660254037844387}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 4.47213595499958}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 10.770329614269007}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 4.47213595499958}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 10.04987562112089}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 9.16515138991168}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 11.357816691600547}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 6.324555320336759}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 8.06225774829855}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 8.602325267042627}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 3.1622776601683795}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 5.0990195135927845}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 16.06237840420901}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 9.38083151964686}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 8.18535277187245}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 3.4641016151377544}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 4}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 4}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 3.1622776601683795}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 3.1622776601683795}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 3.7416573867739413}, "dlc2action.task.universal_task.MyDataParallel.logit_scale": {"tf": 3.1622776601683795}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 3.1622776601683795}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 4.69041575982343}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"tf": 3.1622776601683795}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"tf": 3.1622776601683795}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 4.69041575982343}, "dlc2action.task.universal_task.Task.__init__": {"tf": 25.03996805109783}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 4.47213595499958}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 6.928203230275509}, "dlc2action.task.universal_task.Task.save_model": {"tf": 4.47213595499958}, "dlc2action.task.universal_task.Task.train": {"tf": 13.2664991614216}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 10.44030650891055}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 10.770329614269007}, "dlc2action.task.universal_task.Task.predict": {"tf": 13.416407864998739}, "dlc2action.task.universal_task.Task.dataset": {"tf": 5.830951894845301}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 6.6332495807108}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 5.830951894845301}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 6.557438524302}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 16.911534525287763}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 3.7416573867739413}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 4.47213595499958}, "dlc2action.task.universal_task.Task.set_log": {"tf": 4.47213595499958}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 4.47213595499958}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 4.47213595499958}, "dlc2action.task.universal_task.Task.set_model": {"tf": 5.656854249492381}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 10}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 4.47213595499958}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 4.47213595499958}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 5.830951894845301}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 5.5677643628300215}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 5.0990195135927845}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 3.4641016151377544}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 4.47213595499958}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 10.14889156509222}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 9.055385138137417}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 4.123105625617661}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 10.862780491200215}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 9.055385138137417}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 14.142135623730951}, "dlc2action.utils.TensorDict.__init__": {"tf": 6}, "dlc2action.utils.TensorDict.append": {"tf": 4.47213595499958}, "dlc2action.utils.TensorDict.remove": {"tf": 4.47213595499958}, "dlc2action.utils.apply_threshold": {"tf": 10.344080432788601}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 10.770329614269007}, "dlc2action.utils.apply_threshold_max": {"tf": 10.04987562112089}, "dlc2action.utils.strip_suffix": {"tf": 5.477225575051661}, "dlc2action.utils.strip_prefix": {"tf": 5.477225575051661}, "dlc2action.utils.rotation_matrix_2d": {"tf": 4.898979485566356}, "dlc2action.utils.rotation_matrix_3d": {"tf": 6.48074069840786}, "dlc2action.utils.correct_path": {"tf": 3.7416573867739413}, "dlc2action.utils.TensorList.to_device": {"tf": 4.69041575982343}, "dlc2action.utils.get_intervals": {"tf": 4.898979485566356}, "dlc2action.utils.smooth": {"tf": 6.164414002968976}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 5.656854249492381}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 5.291502622129181}, "dlc2action.utils.argrelmax": {"tf": 6.244997998398398}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 4.898979485566356}, "dlc2action.utils.PostProcessor.__init__": {"tf": 7.615773105863909}}, "df": 451, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 31}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 17}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {"dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 17}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"dlc2action.utils.TensorDict.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 19}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 13}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1}}, "df": 23}}}}, "m": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 2}, "r": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {"dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 2}}, "e": {"docs": {"dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 3}}}}}}, "l": {"2": {"docs": {"dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.6457513110645907}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.forward": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1.7320508075688772}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.update_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.data_types": {"tf": 1}, "dlc2action.project.project.Project.annotation_types": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2.23606797749979}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 2.23606797749979}, "dlc2action.utils.TensorDict.remove": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 120}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 3}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 4}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.get_summary": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 19, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 8}}}, "s": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 3}}}}}, "w": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}}, "df": 1}}, "r": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 24, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3.872983346207417}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3.872983346207417}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 3.605551275463989}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3.7416573867739413}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3.7416573867739413}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 2.449489742783178}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 3.605551275463989}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 3.605551275463989}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 3.605551275463989}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.8284271247461903}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 2}, "dlc2action.model.base_model.Model.__init__": {"tf": 2.23606797749979}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 2}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 2.23606797749979}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 2.23606797749979}, "dlc2action.model.mlp.MLP.__init__": {"tf": 2.23606797749979}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 2.23606797749979}, "dlc2action.project.meta.Run.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.clear": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_episode": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 2}, "dlc2action.project.project.Project.evaluate": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.update_parameters": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2.449489742783178}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 3.4641016151377544}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2.449489742783178}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 2.449489742783178}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.append": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}}, "df": 188, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1.4142135623730951}}, "df": 7}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 2}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 51, "p": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 12}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 12}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "w": {"docs": {"dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1}, "dlc2action.project.project.Project.rename_episode": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.project.project.Project.project_name_available": {"tf": 1}, "dlc2action.project.project.Project.rename_episode": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 59, "s": {"docs": {"dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}}, "df": 18}}}}, "n": {"docs": {"dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 20}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 19, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 3}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.help": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 33}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 5}}}}}}}}}, "t": {"docs": {"dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 56}}}}, "o": {"docs": {"dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 7, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Count.update": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1.7320508075688772}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 3}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1.7320508075688772}, "dlc2action.utils.TensorList.to_device": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1.4142135623730951}, "dlc2action.utils.smooth": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1.4142135623730951}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1.4142135623730951}}, "df": 89}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Count.update": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.forward": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_max": {"tf": 1.7320508075688772}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1.7320508075688772}, "dlc2action.utils.get_intervals": {"tf": 1.7320508075688772}, "dlc2action.utils.smooth": {"tf": 1.7320508075688772}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1.4142135623730951}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1.4142135623730951}}, "df": 42}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}}, "df": 4}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 4}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}}, "df": 51}, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 2}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2}, "dlc2action.task.universal_task.Task.train": {"tf": 2}}, "df": 3, "s": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"1": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}}, "df": 4}, "docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 8, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}}, "g": {"docs": {"dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}}, "df": 17, "s": {"docs": {"dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}}, "df": 20, "s": {"docs": {"dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {"dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}}, "df": 2}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}}, "df": 7}}}}, "h": {"docs": {"dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 26, "s": {"docs": {"dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 28}}, "e": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}}, "df": 16, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}}, "df": 7}}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.utils.rotation_matrix_2d": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.remove_saved_features": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}}, "df": 4}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 6}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}}, "df": 16}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 3}}}, "l": {"docs": {"dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 5}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 16, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.project.meta.Run.training_time": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}, "dlc2action.project.meta.SavedStores.clear": {"tf": 1}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.project.project.Project.rename_episode": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.logit_scale": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.TensorDict.append": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1}, "dlc2action.utils.TensorList.to_device": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1}}, "df": 334}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 19, "s": {"docs": {"dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 41}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 15, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.4142135623730951}}, "df": 33}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_episode": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_prediction": {"tf": 2}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.project.project.Project.project_name_available": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.rename_episode": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 164, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 7}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}}, "df": 2}, "e": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}}, "df": 7}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 2}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}}, "df": 4}}, "p": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}}, "df": 3}}}, "d": {"docs": {"dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.strip_suffix": {"tf": 1}}, "df": 12}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 3}}}}}}, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}}, "df": 9}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 15, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 13}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}}, "df": 13, "s": {"docs": {"dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 5}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 35}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"0": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1}}, "df": 16}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}}, "df": 17}}}, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.project.meta.Run.training_time": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 2}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.8284271247461903}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 2}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.7320508075688772}, "dlc2action.utils.smooth": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1.7320508075688772}}, "df": 112, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 5}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1}}, "df": 17, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.metric.metrics.F1.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}}, "df": 5}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 11, "s": {"docs": {"dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.project.meta.Run.same_split_info": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 17, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}}, "df": 26}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 7}}}}}}}, "d": {"docs": {"dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 19, "x": {"docs": {"dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}}, "df": 2}, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}}, "df": 9}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.project.project.Project.print_data_types": {"tf": 1}, "dlc2action.project.project.Project.print_annotation_types": {"tf": 1}}, "df": 16}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 35}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 16, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 10}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 6}}}}}}}, "e": {"docs": {"dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 6}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}}, "df": 7}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}}, "df": 3}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}}, "df": 7}}}}}}}}}}, "s": {"docs": {"dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.project.Project.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 4}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"1": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}}, "df": 1}, "2": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}}, "df": 5}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 13}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.import_episodes": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}}, "df": 1}}, "e": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.model.mlp.MLP.__init__": {"tf": 1}}, "df": 1}}}, "w": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 2}, "m": {"docs": {"dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}}, "df": 6}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}}, "df": 46}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 8}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 10, "s": {"docs": {"dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.project.Project.evaluate": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1.7320508075688772}}, "df": 12}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_prediction": {"tf": 2}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}}, "df": 98, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.utils.PostProcessor.__init__": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}}, "df": 4, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 5}}}}}}}}, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 6, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}}, "df": 7}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 13}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 10, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.model.transformer.Transformer.__init__": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.list_blanks": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}}, "df": 1}}}}}, "f": {"1": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}, "docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 19, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}}, "df": 19}, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}}, "df": 17, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 12}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 2}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 2}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}}, "df": 63}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}}, "df": 23, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 9}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.23606797749979}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 75}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}}, "df": 12, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 23}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 6}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}}, "df": 1}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.append": {"tf": 1}}, "df": 124, "s": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "m": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}}, "df": 9}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 7}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 6}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.utils.TensorList.to_device": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 2.23606797749979}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1.7320508075688772}}, "df": 59, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}}, "df": 17}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 3}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 3}}, "df": 12}}}}}}}}}, "l": {"docs": {}, "df": 0, "c": {"2": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}}, "df": 22}}}}}}}, "docs": {}, "df": 0}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.model.mlp.MLP.__init__": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 13}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 13}}}, "d": {"docs": {"dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 14}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 13}}}, "p": {"docs": {"dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}}, "df": 6, "s": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1.4142135623730951}}, "df": 18}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}}, "df": 4}}}, "a": {"docs": {"dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}}, "df": 6}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}}, "df": 20, "s": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 27}}}}, "e": {"docs": {"dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}}, "df": 12, "l": {"docs": {"dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 2}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 8, "s": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 2}}, "s": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.evaluate": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 23}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 10}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.rename_episode": {"tf": 1.4142135623730951}}, "df": 37, "s": {"docs": {"dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 7, "s": {"docs": {"dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}}, "df": 8}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.utils.TensorDict.append": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.project_name_available": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.utils.correct_path": {"tf": 1.4142135623730951}}, "df": 52, "s": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 16}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 6}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}}, "df": 31}}}}}, "s": {"docs": {"dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}}, "df": 21}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 11, "s": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 6}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.model.base_model.Model.__init__": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.project.Project.project_name_available": {"tf": 1}, "dlc2action.utils.correct_path": {"tf": 1}}, "df": 4, "s": {"docs": {"dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}, "dlc2action.project.project.Project.project_name_available": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {"dlc2action.utils.argrelmax": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}}, "df": 5}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.model.transformer.Transformer.__init__": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}}, "df": 6}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.model.transformer.Transformer.__init__": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 5}}}, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "x": {"docs": {"dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 4, "s": {"docs": {"dlc2action.model.base_model.Model.forward": {"tf": 1}}, "df": 1}}}}, "bases": {"root": {"docs": {"dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.Precision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.Recall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.F1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.Fbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}}, "df": 13, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"2": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.metric.metrics.Accuracy": {"tf": 1}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.model.asformer.ASFormer": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.edtcn.EDTCN": {"tf": 1}, "dlc2action.model.mlp.MLP": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}}, "df": 23}}}}}}}, "docs": {}, "df": 0}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.metric.metrics.Accuracy": {"tf": 1}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.model.asformer.ASFormer": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.edtcn.EDTCN": {"tf": 1}, "dlc2action.model.mlp.MLP": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}}, "df": 23}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.utils.TensorList": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1.4142135623730951}}, "df": 10, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.ssl.base_ssl.EmptySSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.4142135623730951}}, "df": 11}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.PoseInputStore": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.dataset.BehaviorDataset": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "+": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.data.dataset.BehaviorDataset": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.Precision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.Recall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.F1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.Fbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 4}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.model.asformer.ASFormer": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1.7320508075688772}, "dlc2action.model.edtcn.EDTCN": {"tf": 1.7320508075688772}, "dlc2action.model.mlp.MLP": {"tf": 1.7320508075688772}, "dlc2action.model.transformer.Transformer": {"tf": 1.7320508075688772}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.metric.metrics.Accuracy": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Count": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.EditDistance": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1.7320508075688772}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}}, "df": 2}}}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.utils.TensorList": {"tf": 1}}, "df": 1}}}}}}, "doc": {"root": {"0": {"0": {"1": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 3}, "7": {"3": {"docs": {"dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, ":": {"0": {"0": {"docs": {}, "df": 0, ":": {"1": {"0": {"docs": {"dlc2action.project.project.Project.list_episodes": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "3": {"0": {"docs": {}, "df": 0, ":": {"0": {"0": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "1": {"4": {"4": {"docs": {"dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"dlc2action": {"tf": 1}}, "df": 1}, "2": {"7": {"4": {"docs": {"dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"6": {"4": {"docs": {"dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}, "docs": {"dlc2action": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.23606797749979}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 3.1622776601683795}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.449489742783178}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 2}, "dlc2action.utils.apply_threshold": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}, "dlc2action.utils.smooth": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 72, "%": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "1": {"0": {"0": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 19}, "docs": {"dlc2action": {"tf": 2.6457513110645907}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 13}, "1": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 2}, "2": {"0": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}}, "df": 3}, "8": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}}, "df": 16}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}}, "df": 1}, "6": {"docs": {"dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}}, "df": 3}, "docs": {"dlc2action": {"tf": 3.605551275463989}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}, "dlc2action.utils.smooth": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 59, "e": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 4}, "d": {"docs": {"dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 1}}, "2": {"0": {"0": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 7}, "2": {"docs": {"dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}}, "df": 3}, "5": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1}}, "df": 2}, "docs": {"dlc2action": {"tf": 3.7416573867739413}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1.4142135623730951}}, "df": 17, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}}, "df": 13}}}}}}, "d": {"docs": {"dlc2action.utils": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1.4142135623730951}}, "df": 2}}, "3": {"0": {"0": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 5}, "docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 6}, "2": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 9}, "5": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "9": {"docs": {"dlc2action": {"tf": 10.392304845413264}}, "df": 1}, "docs": {"dlc2action": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2.23606797749979}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1.4142135623730951}}, "df": 12, "d": {"docs": {"dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1.4142135623730951}}, "df": 4}}, "4": {"2": {"docs": {"dlc2action.data": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"dlc2action": {"tf": 3.1622776601683795}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 6}, "5": {"0": {"0": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}}, "df": 8}, "1": {"2": {"docs": {"dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}}, "df": 39}, "6": {"0": {"0": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}, "docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}}, "df": 1}, "4": {"docs": {"dlc2action": {"tf": 2}}, "df": 1}, "docs": {"dlc2action": {"tf": 2}}, "df": 1}, "7": {"0": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 6}, "8": {"0": {"docs": {"dlc2action": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"dlc2action": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"dlc2action": {"tf": 42.02380277890139}, "dlc2action.data": {"tf": 8.774964387392123}, "dlc2action.data.annotation_store": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 3.7416573867739413}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 3.872983346207417}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 3}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 4.47213595499958}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 6.082762530298219}, "dlc2action.data.annotation_store.ActionSegmentationStore.len_segment": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.exclusive": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.overlap": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.video_order": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.max_frames": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.visibility": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_score": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.vis_min_frac": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.mask": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.use_negatives": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.interactive": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_clips": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.file_paths": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.ignored_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.update_behaviors": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.ram": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.original_coordinates": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.step": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.ann_suffix": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_folder": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_annotated": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.filter_background": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.frame_limit": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.min_frames_action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.error_class": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.correction": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 3.7416573867739413}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 4.358898943540674}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 4.47213595499958}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 3.872983346207417}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 2}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 2}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 3.605551275463989}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 8.12403840463596}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 4.47213595499958}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 6.082762530298219}, "dlc2action.data.annotation_store.BorisAnnotationStore.default_agent_name": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 3.3166247903554}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 5.830951894845301}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 3.605551275463989}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 6.4031242374328485}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 4.242640687119285}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.task_n": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.include_task1": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.treba_files": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 5.196152422706632}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 7}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 5.916079783099616}, "dlc2action.data.annotation_store.CSVAnnotationStore.default_agent_name": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.separator": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.fps": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 5.830951894845301}, "dlc2action.data.base_store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store": {"tf": 3}, "dlc2action.data.base_store.Store.remove": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.Store.key_objects": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 2.8284271247461903}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 2.449489742783178}, "dlc2action.data.base_store.Store.new": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.InputStore": {"tf": 2}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 4}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 3.3166247903554}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 3.605551275463989}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 3.605551275463989}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 4.242640687119285}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 2.8284271247461903}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 4.123105625617661}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 3.872983346207417}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 2.449489742783178}, "dlc2action.data.base_store.AnnotationStore": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 3}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 3.7416573867739413}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 4.47213595499958}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 2.449489742783178}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 2.8284271247461903}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 3}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.PoseInputStore": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 4.123105625617661}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 3.872983346207417}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 3.605551275463989}, "dlc2action.data.dataset": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 2.23606797749979}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.ssl_transformations": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.input_type": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.annotation_type": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.stats": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.ids": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.tag": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.return_unlabeled": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.input_indices": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.annotation_indices": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.indices": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 2.449489742783178}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 2.6457513110645907}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_gt": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 4.242640687119285}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 4.795831523312719}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 3.4641016151377544}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 9.899494936611665}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 2.449489742783178}, "dlc2action.data.dataset.BehaviorDataset.boundary_class_weight": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 3.7416573867739413}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 2.449489742783178}, "dlc2action.data.dataset.BehaviorDataset.bodyparts_order": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 2.6457513110645907}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 2.6457513110645907}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 2.6457513110645907}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 2.6457513110645907}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 2.449489742783178}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 2.8284271247461903}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 2.6457513110645907}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 2.6457513110645907}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 4.47213595499958}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 3}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 3}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 3}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 2.6457513110645907}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 3.605551275463989}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 6.48074069840786}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 2.8284271247461903}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 3.605551275463989}, "dlc2action.data.dataset.BehaviorDataset.get_min_max_frames": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 3.605551275463989}, "dlc2action.data.input_store": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 5.291502622129181}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 6.324555320336759}, "dlc2action.data.input_store.GeneralInputStore.data_suffix": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.loaded_max": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.bodyparts": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.visibility": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.normalize": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.video_order": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.centered": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.feature_extraction": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.len_segment": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.data_suffices": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.data_prefixes": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.feature_suffix": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.convert_int_indices": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.overlap": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.canvas_shape": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.default_agent_name": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.feature_save_path": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.likelihood_threshold": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.num_cpus": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.frame_limit": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.transpose": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.ram": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.min_frames": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.original_coordinates": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.file_paths": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.extractor": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.canvas_center": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.step": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 3.4641016151377544}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 3.3166247903554}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 3.4641016151377544}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 3.605551275463989}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 3.605551275463989}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 3.605551275463989}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 4.242640687119285}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 5.196152422706632}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 3.605551275463989}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 3.872983346207417}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 3.605551275463989}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 4.123105625617661}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 3.872983346207417}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 4.123105625617661}, "dlc2action.data.input_store.FileInputStore": {"tf": 2}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 2}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 4.47213595499958}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 8.18535277187245}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 8.18535277187245}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 3.3166247903554}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 4.47213595499958}, "dlc2action.data.input_store.PKUMMDInputStore.data_suffix": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.PKUMMDInputStore.interactive": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 6.6332495807108}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 5}, "dlc2action.data.input_store.CalMS21InputStore.task_n": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.include_task1": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.treba_files": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 5.196152422706632}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 8.888194417315589}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 6.324555320336759}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 7.681145747868608}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 4.795831523312719}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 4.242640687119285}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 5.196152422706632}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 4.123105625617661}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 5.385164807134504}, "dlc2action.data.input_store.SIMBAInputStore.use_features": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction": {"tf": 5.196152422706632}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 3.605551275463989}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 2}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 5.385164807134504}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 3}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 2}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_bodyparts": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_coords": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_n_frames": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.PoseFeatureExtractor.get_likelihood": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 4.58257569495584}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 9.591663046625438}, "dlc2action.feature_extraction.KinematicExtractor.keys": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.ignored_clips": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.interactive": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.w": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.distance_pairs": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.angle_pairs": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.area_vertices": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.neighboring_frames": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.zone_vertices": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.zone_bools": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.zone_distances": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 5.291502622129181}, "dlc2action.loss": {"tf": 3}, "dlc2action.loss.contrastive": {"tf": 2.23606797749979}, "dlc2action.loss.contrastive_frame": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn": {"tf": 2.449489742783178}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 2}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 3.4641016151377544}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.weights": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.num_classes": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.ignore_index": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.gamma": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.focal": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.alpha": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.exclusive": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.neg_weight": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.mse": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 3.7416573867739413}, "dlc2action.loss.mse": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc": {"tf": 2.449489742783178}, "dlc2action.loss.tcc.gen_cycles": {"tf": 3}, "dlc2action.loss.tcc.compute_stochastic_alignment_loss": {"tf": 1.7320508075688772}, "dlc2action.loss.tcc.compute_alignment_loss": {"tf": 1.7320508075688772}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.7320508075688772}, "dlc2action.metric": {"tf": 2.23606797749979}, "dlc2action.metric.base_metric": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric": {"tf": 2}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 2.6457513110645907}, "dlc2action.metric.base_metric.Metric.update": {"tf": 3.872983346207417}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 3}, "dlc2action.metric.metrics": {"tf": 2}, "dlc2action.metric.metrics.PR_AUC": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 3.7416573867739413}, "dlc2action.metric.metrics.Precision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 3.872983346207417}, "dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 4}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.Recall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 3.872983346207417}, "dlc2action.metric.metrics.SegmentalRecall": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 4}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.F1": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 3.872983346207417}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 4}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.Fbeta": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 4}, "dlc2action.metric.metrics.Fbeta.beta2": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 4.123105625617661}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SegmentalFbeta.beta2": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 6.557438524302}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 5.477225575051661}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 6.557438524302}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 5.477225575051661}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 5.477225575051661}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 5.477225575051661}, "dlc2action.metric.metrics.Accuracy": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 2}, "dlc2action.metric.metrics.Accuracy.ignore_index": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 2.6457513110645907}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 3.872983346207417}, "dlc2action.metric.metrics.Count": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.Count.classes": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Count.exclusive": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Count.reset": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Count.update": {"tf": 3.872983346207417}, "dlc2action.metric.metrics.Count.calculate": {"tf": 2.8284271247461903}, "dlc2action.metric.metrics.EditDistance": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.EditDistance.ignore_index": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.EditDistance.exclusive": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 3.872983346207417}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 2.8284271247461903}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 2.6457513110645907}, "dlc2action.metric.metrics.PKU_mAP.average": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.iou_threshold": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.threshold": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.exclusive": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.classes": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.match": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.calc_pr": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 3}, "dlc2action.metric.metrics.PKU_mAP.ap": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 3.872983346207417}, "dlc2action.model": {"tf": 3.3166247903554}, "dlc2action.model.asformer": {"tf": 2.449489742783178}, "dlc2action.model.asformer.device": {"tf": 1.7320508075688772}, "dlc2action.model.asformer.ASFormer": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 3}, "dlc2action.model.asformer.ASFormer.num_f_maps": {"tf": 1.7320508075688772}, "dlc2action.model.asformer.ASFormer.params": {"tf": 1.7320508075688772}, "dlc2action.model.asformer.ASFormer.params_predictor": {"tf": 1.7320508075688772}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 2.6457513110645907}, "dlc2action.model.base_model": {"tf": 2}, "dlc2action.model.base_model.available_ssl_types": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model": {"tf": 2.23606797749979}, "dlc2action.model.base_model.Model.__init__": {"tf": 3}, "dlc2action.model.base_model.Model.process_labels": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.feature_extractor": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.feature_extractors": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.predictor": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.ssl_active": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.main_task_active": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.prompt_function": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.class_tensors": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 2.8284271247461903}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.features_shape": {"tf": 2.6457513110645907}, "dlc2action.model.base_model.Model.extract_features": {"tf": 3.605551275463989}, "dlc2action.model.base_model.Model.forward": {"tf": 3.872983346207417}, "dlc2action.model.base_model.LoadedModel": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 2.23606797749979}, "dlc2action.model.base_model.LoadedModel.ssl_types": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.LoadedModel.ssl_active": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.LoadedModel.feature_extractor": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1.7320508075688772}, "dlc2action.model.c2f_tcn": {"tf": 2.449489742783178}, "dlc2action.model.c2f_tcn.nonlinearity": {"tf": 1.7320508075688772}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 2.8284271247461903}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 3}, "dlc2action.model.c2f_tcn.C2F_TCN.params": {"tf": 1.7320508075688772}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 2.6457513110645907}, "dlc2action.model.edtcn": {"tf": 2.449489742783178}, "dlc2action.model.edtcn.EDTCN": {"tf": 1.7320508075688772}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 3}, "dlc2action.model.edtcn.EDTCN.params": {"tf": 1.7320508075688772}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 2.6457513110645907}, "dlc2action.model.mlp": {"tf": 1.7320508075688772}, "dlc2action.model.mlp.MLP": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 3}, "dlc2action.model.mlp.MLP.params": {"tf": 1.7320508075688772}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 2.6457513110645907}, "dlc2action.model.transformer": {"tf": 1.7320508075688772}, "dlc2action.model.transformer.Transformer": {"tf": 2.6457513110645907}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 3}, "dlc2action.model.transformer.Transformer.params": {"tf": 1.7320508075688772}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 2.6457513110645907}, "dlc2action.options": {"tf": 1.4142135623730951}, "dlc2action.options.input_stores": {"tf": 1.7320508075688772}, "dlc2action.options.annotation_stores": {"tf": 1.7320508075688772}, "dlc2action.options.feature_extractors": {"tf": 1.7320508075688772}, "dlc2action.options.ssl_constructors": {"tf": 1.7320508075688772}, "dlc2action.options.transformers": {"tf": 1.7320508075688772}, "dlc2action.options.losses": {"tf": 1.7320508075688772}, "dlc2action.options.losses_multistage": {"tf": 1.7320508075688772}, "dlc2action.options.metrics": {"tf": 1.7320508075688772}, "dlc2action.options.metrics_minimize": {"tf": 1.7320508075688772}, "dlc2action.options.metrics_no_direction": {"tf": 1.7320508075688772}, "dlc2action.options.optimizers": {"tf": 1.7320508075688772}, "dlc2action.options.models": {"tf": 1.7320508075688772}, "dlc2action.options.blanks": {"tf": 1.7320508075688772}, "dlc2action.options.extractor_to_transformer": {"tf": 1.7320508075688772}, "dlc2action.options.partition_methods": {"tf": 1.7320508075688772}, "dlc2action.options.basic_parameters": {"tf": 1.7320508075688772}, "dlc2action.options.model_hyperparameters": {"tf": 1.7320508075688772}, "dlc2action.project": {"tf": 12.041594578792296}, "dlc2action.project.meta": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.__init__": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.name": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.project_path": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.training_time": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.model_file": {"tf": 3.7416573867739413}, "dlc2action.project.meta.Run.dataset_name": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.split_file": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.log_file": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.split_info": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.same_split_info": {"tf": 3.4641016151377544}, "dlc2action.project.meta.Run.get_metrics": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 4.123105625617661}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.unfinished": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 3.4641016151377544}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 2.6457513110645907}, "dlc2action.project.meta.DecisionThresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 2.23606797749979}, "dlc2action.project.meta.DecisionThresholds.path": {"tf": 1.7320508075688772}, "dlc2action.project.meta.DecisionThresholds.data": {"tf": 1.7320508075688772}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 3.3166247903554}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 3.872983346207417}, "dlc2action.project.meta.SavedRuns": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 2.23606797749979}, "dlc2action.project.meta.SavedRuns.path": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.project_path": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.data": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.update": {"tf": 3.605551275463989}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 2.6457513110645907}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 3.7416573867739413}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 3.4641016151377544}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 2.8284271247461903}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 3.3166247903554}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 3.4641016151377544}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 2.6457513110645907}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 4}, "dlc2action.project.meta.SavedRuns.rename_episode": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 2.6457513110645907}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 2.6457513110645907}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 3}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 3.872983346207417}, "dlc2action.project.meta.Searches": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 4.898979485566356}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 3.4641016151377544}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 3.7416573867739413}, "dlc2action.project.meta.Suggestions": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Suggestions.save_suggestion": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 2.23606797749979}, "dlc2action.project.meta.SavedStores.path": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.data": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.skip_keys": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.clear": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 2.6457513110645907}, "dlc2action.project.meta.SavedStores.remove": {"tf": 2.6457513110645907}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 2.6457513110645907}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 3.7416573867739413}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 2.8284271247461903}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 3.4641016151377544}, "dlc2action.project.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.__init__": {"tf": 3.3166247903554}, "dlc2action.project.project.Project.project_path": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.name": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.data_type": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.annotation_type": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.data_path": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.annotation_path": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episode": {"tf": 8.306623862918075}, "dlc2action.project.project.Project.run_episodes": {"tf": 5.744562646538029}, "dlc2action.project.project.Project.continue_episode": {"tf": 5.0990195135927845}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 7.681145747868608}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 7.483314773547883}, "dlc2action.project.project.Project.run_prediction": {"tf": 5.830951894845301}, "dlc2action.project.project.Project.evaluate_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 5.0990195135927845}, "dlc2action.project.project.Project.list_episodes": {"tf": 4.898979485566356}, "dlc2action.project.project.Project.list_predictions": {"tf": 4}, "dlc2action.project.project.Project.list_searches": {"tf": 4}, "dlc2action.project.project.Project.get_best_parameters": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 3.605551275463989}, "dlc2action.project.project.Project.plot_episodes": {"tf": 4.795831523312719}, "dlc2action.project.project.Project.update_parameters": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.get_summary": {"tf": 4.47213595499958}, "dlc2action.project.project.Project.remove_project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 3.7416573867739413}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 3.4641016151377544}, "dlc2action.project.project.Project.remove_search": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.remove_prediction": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.remove_episode": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 3.7416573867739413}, "dlc2action.project.project.Project.prediction_path": {"tf": 3.4641016151377544}, "dlc2action.project.project.Project.print_data_types": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.print_annotation_types": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.data_types": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.annotation_types": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 3}, "dlc2action.project.project.Project.help": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.list_blanks": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 4.47213595499958}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 3.605551275463989}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 7}, "dlc2action.project.project.Project.plot_predictions": {"tf": 6.324555320336759}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 3.4641016151377544}, "dlc2action.project.project.Project.import_episodes": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.export_episodes": {"tf": 3.7416573867739413}, "dlc2action.project.project.Project.get_results_table": {"tf": 4.47213595499958}, "dlc2action.project.project.Project.episode_exists": {"tf": 3.7416573867739413}, "dlc2action.project.project.Project.search_exists": {"tf": 3.7416573867739413}, "dlc2action.project.project.Project.prediction_exists": {"tf": 3.7416573867739413}, "dlc2action.project.project.Project.project_name_available": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.rename_episode": {"tf": 1.7320508075688772}, "dlc2action.ssl": {"tf": 8.717797887081348}, "dlc2action.ssl.base_ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 3.605551275463989}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 6}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 4.898979485566356}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 3.605551275463989}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 2.6457513110645907}, "dlc2action.ssl.base_ssl.EmptySSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive": {"tf": 2.8284271247461903}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 2.8284271247461903}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 6}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss_function": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveSSL.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 2.8284271247461903}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 6}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.start": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.end": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss_function": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 3.872983346207417}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 6}, "dlc2action.ssl.contrastive.PairwiseSSL.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 3.872983346207417}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 6}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.num_masked": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.start": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.end": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 3.605551275463989}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 6}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss_function": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked": {"tf": 2}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 6}, "dlc2action.ssl.masked.MaskedFeaturesSSL.mse": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL.frac_masked": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 3}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 2.8284271247461903}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 6}, "dlc2action.ssl.masked.MaskedKinematicSSL.mse": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL.frac_masked": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 3}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 2.8284271247461903}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 6}, "dlc2action.ssl.masked.MaskedFramesSSL.frac_masked": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL.mse": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 3}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 2.8284271247461903}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.modules": {"tf": 2}, "dlc2action.ssl.segment_order": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 2.23606797749979}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 2.449489742783178}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 6}, "dlc2action.ssl.segment_order.ReverseSSL.ce": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.ReverseSSL.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 2.23606797749979}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 3}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 6}, "dlc2action.ssl.segment_order.OrderSSL.ce": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.OrderSSL.orders": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.OrderSSL.len_segment": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.OrderSSL.num_segments": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.OrderSSL.skip_frames": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.OrderSSL.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 2.23606797749979}, "dlc2action.ssl.tcc.TCCSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 6}, "dlc2action.ssl.tcc.TCCSSL.len_segment": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL.loss_function": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL.pars": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 3.605551275463989}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 2.6457513110645907}, "dlc2action.task": {"tf": 2.6457513110645907}, "dlc2action.task.task_dispatcher": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.class_weights": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.general_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.data_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.model_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.training_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.loss_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.metric_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.ssl_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.aug_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.feature_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.blanks": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.task": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 3.872983346207417}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 4.123105625617661}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 3.7416573867739413}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 4}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 6.708203932499369}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 4.123105625617661}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 4}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 4.47213595499958}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 3.7416573867739413}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 4.242640687119285}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 4}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 3.1622776601683795}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 3.872983346207417}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 5.385164807134504}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 6.244997998398398}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 3.872983346207417}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 2.6457513110645907}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 4}, "dlc2action.task.universal_task": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 11.874342087037917}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.process_labels": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.freeze_feature_extractor": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.unfreeze_feature_extractor": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.transform_labels": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.logit_scale": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.main_task_off": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 8.54400374531753}, "dlc2action.task.universal_task.MyDataParallel.ssl_on": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.ssl_off": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.extract_features": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 6.244997998398398}, "dlc2action.task.universal_task.Task.train_dataloader": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.val_dataloader": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.test_dataloader": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.transformer": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.num_epochs": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.skip_metrics": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.verbose": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.augment_train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.augment_val": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.ignore_tags": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.validation_interval": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.log_file": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.loss": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.model_save_path": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.model_save_epochs": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.epoch": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.metrics": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.ssl_weights": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.optimizer_class": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.lr": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.parallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.primary_predict_function": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.pseudolabel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.alpha_f": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.T2": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.T1": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.t": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.decision_thresholds": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 3.605551275463989}, "dlc2action.task.universal_task.Task.save_model": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.train": {"tf": 6.708203932499369}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 4}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 4.242640687119285}, "dlc2action.task.universal_task.Task.predict": {"tf": 5.5677643628300215}, "dlc2action.task.universal_task.Task.dataset": {"tf": 3.605551275463989}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 3.605551275463989}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 4}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 4}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 5.744562646538029}, "dlc2action.task.universal_task.Task.set_ssl_transformations": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.set_log": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.set_model": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 2.8284271247461903}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 2.8284271247461903}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 3.872983346207417}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 3.1622776601683795}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 6.324555320336759}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 4}, "dlc2action.task.universal_task.Task.get_normalization_stats": {"tf": 1.7320508075688772}, "dlc2action.transformer": {"tf": 3.605551275463989}, "dlc2action.transformer.base_transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 4.898979485566356}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 5.385164807134504}, "dlc2action.transformer.base_transformer.Transformer.model_name": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.augmentations": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.generate_ssl_input": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.keep_target_none": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.ssl_augmentations": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.graph_features": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.num_graph_nodes": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 6}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 4.898979485566356}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 4.123105625617661}, "dlc2action.transformer.kinematic.KinematicTransformer.dim": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.offset": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.scale": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.image_center": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.blank": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.rotation_limits": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.n_bodyparts": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.mirror_dim": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.noise_std": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.zoom_limits": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.masking_probability": {"tf": 1.7320508075688772}, "dlc2action.utils": {"tf": 6.324555320336759}, "dlc2action.utils.TensorDict": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorDict.__init__": {"tf": 2.6457513110645907}, "dlc2action.utils.TensorDict.append": {"tf": 2.6457513110645907}, "dlc2action.utils.TensorDict.remove": {"tf": 2.6457513110645907}, "dlc2action.utils.apply_threshold": {"tf": 5.291502622129181}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 5.385164807134504}, "dlc2action.utils.apply_threshold_max": {"tf": 5.916079783099616}, "dlc2action.utils.strip_suffix": {"tf": 3.605551275463989}, "dlc2action.utils.strip_prefix": {"tf": 3.605551275463989}, "dlc2action.utils.rotation_matrix_2d": {"tf": 4.47213595499958}, "dlc2action.utils.rotation_matrix_3d": {"tf": 5.477225575051661}, "dlc2action.utils.correct_path": {"tf": 1.7320508075688772}, "dlc2action.utils.TensorList": {"tf": 2}, "dlc2action.utils.TensorList.to_device": {"tf": 1.7320508075688772}, "dlc2action.utils.get_intervals": {"tf": 1.4142135623730951}, "dlc2action.utils.smooth": {"tf": 3}, "dlc2action.utils.GaussianSmoothing": {"tf": 2.449489742783178}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1.7320508075688772}, "dlc2action.utils.GaussianSmoothing.kernel_size": {"tf": 1.7320508075688772}, "dlc2action.utils.GaussianSmoothing.kernel": {"tf": 1.7320508075688772}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 2.23606797749979}, "dlc2action.utils.argrelmax": {"tf": 1.4142135623730951}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1.7320508075688772}, "dlc2action.utils.PostProcessor": {"tf": 1.7320508075688772}, "dlc2action.utils.PostProcessor.__init__": {"tf": 1.7320508075688772}, "dlc2action.utils.PostProcessor.func": {"tf": 1.7320508075688772}, "dlc2action.utils.PostProcessor.name": {"tf": 1.7320508075688772}, "dlc2action.utils.PostProcessor.boundary_th": {"tf": 1.7320508075688772}, "dlc2action.utils.PostProcessor.theta_t": {"tf": 1.7320508075688772}, "dlc2action.utils.PostProcessor.kernel_size": {"tf": 1.7320508075688772}, "dlc2action.version": {"tf": 1.7320508075688772}, "dlc2action.version.VERSION": {"tf": 1.7320508075688772}}, "df": 876, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"1": {"0": {"0": {"0": {"docs": {"dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 4.358898943540674}, "dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.contrastive": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.model": {"tf": 1.4142135623730951}, "dlc2action.model.base_model": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.ssl": {"tf": 2}, "dlc2action.ssl.contrastive": {"tf": 1}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.modules": {"tf": 1}, "dlc2action.task": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.transformer": {"tf": 2}, "dlc2action.utils": {"tf": 1.4142135623730951}, "dlc2action.version": {"tf": 1}}, "df": 47}}}}}}}, "4": {"0": {"0": {"docs": {"dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.449489742783178}}, "df": 4}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 3}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3.605551275463989}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.8284271247461903}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2.23606797749979}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.8284271247461903}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.8284271247461903}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.8284271247461903}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.8284271247461903}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episode": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.run_episodes": {"tf": 2}, "dlc2action.project.project.Project.continue_episode": {"tf": 2}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 3}, "dlc2action.project.project.Project.run_prediction": {"tf": 2}, "dlc2action.project.project.Project.evaluate": {"tf": 2}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 3.605551275463989}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2.8284271247461903}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2}, "dlc2action.task.universal_task.Task.__init__": {"tf": 4.242640687119285}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.predict": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2.8284271247461903}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 2}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2.449489742783178}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 3}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 115, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.ssl.base_ssl": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 4, "d": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 31}, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}}, "df": 14}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}, "s": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 5}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}}, "df": 12}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.model.edtcn.EDTCN": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 5}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 4.123105625617661}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorList": {"tf": 1}}, "df": 5, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 2.23606797749979}}, "df": 1}, "[": {"0": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.loss": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}}, "df": 2, "d": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 13}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.project.Project.remove_saved_features": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action": {"tf": 3.605551275463989}, "dlc2action.data": {"tf": 3.7416573867739413}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 2}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1.4142135623730951}, "dlc2action.data.dataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 2.23606797749979}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.FileInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 2}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 2.449489742783178}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 2}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 2.23606797749979}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.project": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.update": {"tf": 2}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.evaluate": {"tf": 2}, "dlc2action.project.project.Project.data_types": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 2}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.ssl": {"tf": 2.6457513110645907}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2.6457513110645907}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2.6457513110645907}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2.6457513110645907}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2.6457513110645907}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2.6457513110645907}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2.6457513110645907}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2.6457513110645907}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2.6457513110645907}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2.6457513110645907}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2.6457513110645907}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2.6457513110645907}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2.6457513110645907}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 2}, "dlc2action.task.universal_task.Task.predict": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1.7320508075688772}, "dlc2action.transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils": {"tf": 1.4142135623730951}}, "df": 167, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.dataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 3.1622776601683795}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.project": {"tf": 2.449489742783178}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 2}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 2}, "dlc2action.task.universal_task.Task.dataset": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.utils": {"tf": 1}}, "df": 67, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.project": {"tf": 2.23606797749979}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.clear": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 18}}}}, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 6}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_searches": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 2}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 3}}, "df": 12, "s": {"docs": {"dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 2.23606797749979}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.7320508075688772}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}}, "df": 4}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.append": {"tf": 1}}, "df": 123, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1.4142135623730951}, "dlc2action.options": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.7320508075688772}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}}, "df": 24}}}, "y": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 2.23606797749979}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1.7320508075688772}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.TensorDict": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.append": {"tf": 1}}, "df": 124}}}}}}, "s": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 5}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 19, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.ssl": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.ssl": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 4, "s": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.ssl": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.ssl": {"tf": 1}, "dlc2action.task": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 8}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 5}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.argrelmax": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 2}}}}}}}}}}, "m": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 3}}, "o": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 14, "c": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.7320508075688772}}, "df": 2}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}}, "df": 3}}}}}}}}}}}, "n": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}}, "df": 8, "e": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}}, "df": 4, "n": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.meta.Run.get_metric_log": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 2.8284271247461903}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 2.8284271247461903}}, "df": 9, "s": {"docs": {"dlc2action": {"tf": 4.58257569495584}, "dlc2action.data": {"tf": 3.7416573867739413}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.8284271247461903}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 3}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 2.449489742783178}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 2}, "dlc2action.project": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episode": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_prediction": {"tf": 2}, "dlc2action.project.project.Project.evaluate": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 3}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.ssl": {"tf": 2.449489742783178}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2.449489742783178}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2.449489742783178}, "dlc2action.task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 2.8284271247461903}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.train": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 2}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2.6457513110645907}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.4142135623730951}, "dlc2action.utils": {"tf": 1.7320508075688772}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1.4142135623730951}}, "df": 124, "n": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}}, "df": 1}}, "n": {"docs": {"dlc2action": {"tf": 5.477225575051661}, "dlc2action.data": {"tf": 3.7416573867739413}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2.449489742783178}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.feature_extraction": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 3}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2}, "dlc2action.model.base_model": {"tf": 1}, "dlc2action.project": {"tf": 3.605551275463989}, "dlc2action.project.meta.Run.training_time": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.ssl": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 3.7416573867739413}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 149, "t": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.project.meta.Run.training_time": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 2}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing": {"tf": 1.4142135623730951}}, "df": 116, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}}, "df": 1, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.task.task_dispatcher": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}}, "df": 15, "s": {"docs": {"dlc2action.data.dataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}}, "df": 3}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.23606797749979}}, "df": 8}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 2}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1.4142135623730951}}, "df": 16, "s": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.6457513110645907}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 2.449489742783178}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 2.6457513110645907}, "dlc2action.utils.apply_threshold_max": {"tf": 2.6457513110645907}, "dlc2action.utils.smooth": {"tf": 1.4142135623730951}}, "df": 25}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.7320508075688772}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 23, "s": {"docs": {"dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 3.1622776601683795}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}}, "df": 24}, "r": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}}, "df": 10}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 17, "s": {"docs": {"dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.task": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}}, "df": 14}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 21}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}}, "df": 5}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}}, "df": 3, "d": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}}, "df": 6}, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.transformer": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 2}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 2.449489742783178}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.loss": {"tf": 1}, "dlc2action.model": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.ssl": {"tf": 3.7416573867739413}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 3}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 2.23606797749979}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 3}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 3}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 3}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 3}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 3}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 3}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 3}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 3}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 3}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 3}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 3}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 2}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 2.449489742783178}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2.449489742783178}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2.6457513110645907}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1.7320508075688772}}, "df": 88, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2.449489742783178}}, "df": 5, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 14}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"dlc2action.model": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 2}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}}, "df": 23}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.project": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.task": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task": {"tf": 1}}, "df": 4}}}}}}}, "d": {"0": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}}, "df": 5}, "1": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}}, "df": 8}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 2}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.remove": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 2}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 3.1622776601683795}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold": {"tf": 2.23606797749979}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 2.23606797749979}, "dlc2action.utils.apply_threshold_max": {"tf": 2.23606797749979}, "dlc2action.utils.get_intervals": {"tf": 1}}, "df": 56, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}}, "df": 11}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 35, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.TensorDict": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.TensorDict.remove": {"tf": 1}}, "df": 1}}}}, "{": {"docs": {}, "df": 0, "i": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 2}}, "df": 6, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}}, "df": 7}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 8}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.project": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.export_episodes": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.ssl": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.model.asformer.ASFormer": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.edtcn.EDTCN": {"tf": 1}}, "df": 7, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.metric.metrics": {"tf": 1}, "dlc2action.ssl.contrastive": {"tf": 1}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.modules": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 5}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 4.123105625617661}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 4.123105625617661}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 3.605551275463989}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 2}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 4}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 4}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 2}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.449489742783178}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 3}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 3}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.6457513110645907}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episode": {"tf": 3.4641016151377544}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 3}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_prediction": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.evaluate": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.plot_predictions": {"tf": 3}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.search_exists": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 2.449489742783178}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2.449489742783178}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2.6457513110645907}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.8284271247461903}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 3}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_max": {"tf": 1.7320508075688772}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 177}, "t": {"docs": {"dlc2action": {"tf": 3.7416573867739413}, "dlc2action.data": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.project": {"tf": 2}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.ssl": {"tf": 2}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 46, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}}, "df": 14}}, "d": {"docs": {"dlc2action.data": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 2.23606797749979}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 2.449489742783178}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 2}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 2}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 2}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}}, "df": 37, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 2}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}}, "df": 60, "[": {"0": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 6, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}, "d": {"docs": {"dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}}}}}, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 6}}}}}}}}}, "x": {"docs": {"dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}}, "df": 10}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 30, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 38}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 1}}}}}}}, "j": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 2}}}, "i": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1, "i": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2}}, "df": 10}}}, "a": {"docs": {"dlc2action": {"tf": 6.557438524302}, "dlc2action.data": {"tf": 4.358898943540674}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.base_store.Store": {"tf": 2.23606797749979}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.new": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 2.449489742783178}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.6457513110645907}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 2.23606797749979}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 2}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 3}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 2.449489742783178}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 2}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 2}, "dlc2action.model.base_model.LoadedModel": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 2}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.mlp.MLP": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.transformer.Transformer": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.project": {"tf": 3.1622776601683795}, "dlc2action.project.meta.Run": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 2}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.run_episodes": {"tf": 3.3166247903554}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.run_prediction": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.evaluate": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_searches": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.update_parameters": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_summary": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 2}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.ssl": {"tf": 2.449489742783178}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 2.449489742783178}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 2.23606797749979}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 2.449489742783178}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 2.8284271247461903}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 3.4641016151377544}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 2}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 2.23606797749979}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2.6457513110645907}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2.449489742783178}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils": {"tf": 1.7320508075688772}, "dlc2action.utils.TensorDict": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorDict.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorDict.append": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 2.23606797749979}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 2.23606797749979}, "dlc2action.utils.apply_threshold_max": {"tf": 2.23606797749979}, "dlc2action.utils.strip_suffix": {"tf": 1.7320508075688772}, "dlc2action.utils.strip_prefix": {"tf": 1.7320508075688772}, "dlc2action.utils.rotation_matrix_2d": {"tf": 2}, "dlc2action.utils.rotation_matrix_3d": {"tf": 2.449489742783178}, "dlc2action.utils.TensorList": {"tf": 1.4142135623730951}, "dlc2action.utils.get_intervals": {"tf": 1.4142135623730951}, "dlc2action.utils.smooth": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1.4142135623730951}, "dlc2action.version": {"tf": 1}}, "df": 329, "n": {"docs": {"dlc2action": {"tf": 2.6457513110645907}, "dlc2action.data": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.model.asformer.ASFormer": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.edtcn.EDTCN": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.append": {"tf": 1}}, "df": 96, "d": {"docs": {"dlc2action": {"tf": 7.483314773547883}, "dlc2action.data": {"tf": 4.358898943540674}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store": {"tf": 2.449489742783178}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 2.449489742783178}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 2.449489742783178}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 3.7416573867739413}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 2}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.loss": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.model": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 3.4641016151377544}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 3.3166247903554}, "dlc2action.project.project.Project.run_episodes": {"tf": 3}, "dlc2action.project.project.Project.continue_episode": {"tf": 2}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 2}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.ssl": {"tf": 2.449489742783178}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 3}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 3}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 3}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 3}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 3}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 3}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 3}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 3}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 3}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 3}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 3}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 3}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 3.1622776601683795}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 3}, "dlc2action.task.universal_task.Task": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 2.6457513110645907}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}, "dlc2action.utils.get_intervals": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}}, "df": 208, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 2}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.__init__": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.annotation_types": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1.4142135623730951}}, "df": 46, "s": {"docs": {"dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1.4142135623730951}}, "df": 15}}}}}}}}, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 6, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}}, "df": 7}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 22}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 16}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 2}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1.7320508075688772}, "dlc2action.utils.rotation_matrix_3d": {"tf": 2}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1.4142135623730951}}, "df": 12, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.project": {"tf": 2}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}}, "df": 13}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 12}}}}, "c": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 7}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}}, "df": 2}}, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 4.47213595499958}, "dlc2action.data": {"tf": 3}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3.872983346207417}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3.872983346207417}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 3.605551275463989}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3.872983346207417}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3.7416573867739413}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1.7320508075688772}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.feature_extraction": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.options": {"tf": 1}, "dlc2action.project": {"tf": 3.4641016151377544}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 3}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 2}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.import_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.ssl": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 2}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 2}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.7320508075688772}, "dlc2action.transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_max": {"tf": 2}}, "df": 146, "a": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2}, "dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}}, "df": 4, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 22, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 17}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 8}}}}}}, "s": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}}, "df": 7}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.rotation_matrix_3d": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "t": {"docs": {"dlc2action": {"tf": 3.1622776601683795}, "dlc2action.data": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1.7320508075688772}}, "df": 53, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}}, "df": 2, "l": {"docs": {"dlc2action": {"tf": 3}, "dlc2action.data": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.options": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.SavedStores.clear": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2.449489742783178}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}}, "df": 49, "o": {"docs": {}, "df": 0, "w": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}}, "df": 14}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action": {"tf": 3}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 9}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.Run.__init__": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}}, "df": 11}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}}, "df": 8}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.ssl": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.base_store": {"tf": 1}, "dlc2action.metric.base_metric": {"tf": 1}, "dlc2action.model": {"tf": 1}, "dlc2action.model.base_model": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl": {"tf": 1}, "dlc2action.transformer.base_transformer": {"tf": 1}}, "df": 8}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "d": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.7320508075688772}}, "df": 5, "s": {"docs": {"dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 16, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.project": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.model": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 4}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.loss.tcc": {"tf": 1}, "dlc2action.model.asformer": {"tf": 1}, "dlc2action.model.c2f_tcn": {"tf": 1}, "dlc2action.model.edtcn": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}}, "df": 11}}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 16, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 11, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 3.1622776601683795}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 2.23606797749979}}, "df": 25}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2}}, "df": 5}}, "s": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.model": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 3.4641016151377544}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 3.4641016151377544}, "dlc2action.task.universal_task.Task.train": {"tf": 3.4641016151377544}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store": {"tf": 2}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.loss": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 2}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.ssl": {"tf": 2}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 88, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 3, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}}, "df": 5}, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}}, "df": 15}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}}, "df": 6}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}}, "df": 6}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.model.asformer": {"tf": 1}, "dlc2action.model.asformer.ASFormer": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 2}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 38, "d": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 7}, "s": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}}, "df": 11}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.data_types": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.annotation_types": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.help": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}}, "df": 17}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}, "dlc2action.utils": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_max": {"tf": 1.7320508075688772}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1.4142135623730951}}, "df": 22}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 10}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 2}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.TensorDict.append": {"tf": 1}}, "df": 1}}}}}, "[": {"docs": {}, "df": 0, "i": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 2}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.utils.rotation_matrix_3d": {"tf": 1.7320508075688772}}, "df": 1}}}}, "s": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.7320508075688772}}, "df": 6, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 29, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {"dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}}, "df": 13}}, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 28}}}}}}, "e": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1.4142135623730951}, "dlc2action.loss.contrastive": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.449489742783178}, "dlc2action.model": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1}}, "df": 21, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}}, "df": 2}}}, "t": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 2}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 3.1622776601683795}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 2.449489742783178}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 2.449489742783178}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 3.1622776601683795}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 3.3166247903554}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 2}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.23606797749979}, "dlc2action.ssl": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}}, "df": 77, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action": {"tf": 5.477225575051661}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.project": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 2.449489742783178}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.list_searches": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.update_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 21, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.project": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}}, "df": 8}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 41, "s": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.project.meta.Run.training_time": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}}, "df": 10}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"dlc2action.utils.TensorList": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.project": {"tf": 1}}, "df": 5, "d": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}}, "df": 5}, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 2.6457513110645907}, "dlc2action.loss.tcc.regression_loss": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing": {"tf": 1.7320508075688772}}, "df": 5, "s": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}}, "df": 5}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.Run.__init__": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.set_main_parameters": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.export_episodes": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"dlc2action.ssl": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1.4142135623730951}, "dlc2action.loss.contrastive": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.update": {"tf": 2}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 2}, "dlc2action.metric.metrics.Count.update": {"tf": 2}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 2}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 2}, "dlc2action.model": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 2.6457513110645907}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 2.6457513110645907}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 2}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 2.6457513110645907}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 2.6457513110645907}, "dlc2action.model.mlp.MLP.__init__": {"tf": 2.6457513110645907}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 2.6457513110645907}, "dlc2action.project": {"tf": 1}, "dlc2action.ssl": {"tf": 3.3166247903554}, "dlc2action.ssl.base_ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 2}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 3.4641016151377544}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 2.6457513110645907}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.EmptySSL": {"tf": 1}, "dlc2action.ssl.contrastive": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 3.4641016151377544}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 3.4641016151377544}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 3.4641016151377544}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 3.4641016151377544}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 3.4641016151377544}, "dlc2action.ssl.masked": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 3.4641016151377544}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 2}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 3.4641016151377544}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 2}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 3.4641016151377544}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 2}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.modules": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 3.4641016151377544}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 3.4641016151377544}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 3.4641016151377544}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 2.6457513110645907}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2.8284271247461903}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 3.4641016151377544}}, "df": 96, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive": {"tf": 1}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.modules": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "o": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 6, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2.23606797749979}}, "df": 23, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 35, "s": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.utils": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 2}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}}, "df": 15}, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1.4142135623730951}}, "df": 3}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 12}, "t": {"docs": {"dlc2action.model.transformer.Transformer": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"dlc2action.ssl": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 9}}}}}, "r": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.model_file": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_episode": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1.4142135623730951}, "dlc2action.utils.strip_prefix": {"tf": 1.4142135623730951}}, "df": 137, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.utils": {"tf": 1}}, "df": 29}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.utils": {"tf": 1.4142135623730951}, "dlc2action.utils.strip_suffix": {"tf": 1.7320508075688772}, "dlc2action.utils.strip_prefix": {"tf": 1.7320508075688772}}, "df": 46, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 12}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 10}}, "p": {"docs": {"dlc2action.utils": {"tf": 1.4142135623730951}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.strip_suffix": {"tf": 1.4142135623730951}, "dlc2action.utils.strip_prefix": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data": {"tf": 4.242640687119285}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.base_store": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 2}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 30, "s": {"docs": {"dlc2action.data": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}}, "df": 5}, "d": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.options": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 36}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.project.Project.remove_saved_features": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 5, "s": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1.7320508075688772}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 27, "d": {"docs": {"dlc2action": {"tf": 3}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.project": {"tf": 2.6457513110645907}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 2}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 33, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.TensorDict": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1.4142135623730951}}, "df": 53}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}}, "df": 14, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 45}}}}}, "y": {"docs": {"dlc2action": {"tf": 2}}, "df": 1}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.SavedStores.find_name": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 3}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.split_file": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.split_info": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}}, "df": 2}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 12, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}, "d": {"docs": {"dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 2.6457513110645907}}, "df": 1, "s": {"docs": {"dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"1": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.project": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 19}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1.7320508075688772}}, "df": 10, "s": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2.449489742783178}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}}, "df": 3}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}}, "df": 11}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project": {"tf": 2.449489742783178}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"1": {"docs": {"dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"docs": {"dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}}, "df": 1}, "docs": {"dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2.449489742783178}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 2.449489742783178}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1.4142135623730951}}, "df": 23, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}}, "df": 13}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 16}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"2": {"docs": {}, "df": 0, "f": {"docs": {"dlc2action.model.c2f_tcn": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 2}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.ssl": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}, "r": {"docs": {"dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}}, "df": 2}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 2}, "dlc2action.utils.GaussianSmoothing": {"tf": 1.4142135623730951}}, "df": 39}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}}, "df": 2}}}, "a": {"docs": {"dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 2}, "dlc2action.metric.metrics.F1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.Fbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}}, "df": 18, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2}, "dlc2action.metric.base_metric.Metric": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}}, "df": 57}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.23606797749979}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1.4142135623730951}}, "df": 19}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1.7320508075688772}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1.7320508075688772}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1.7320508075688772}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1.7320508075688772}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1.7320508075688772}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_3d": {"tf": 2}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 45, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 3}, "d": {"docs": {"dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}}, "df": 7}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}}, "df": 4}}, "r": {"docs": {"dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1.4142135623730951}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 3}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.loss.mse": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 2.8284271247461903}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 2.8284271247461903}}, "df": 2, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.model_file": {"tf": 2.23606797749979}, "dlc2action.project.meta.Run.split_file": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.log_file": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update": {"tf": 2}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.__init__": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.run_prediction": {"tf": 2}, "dlc2action.project.project.Project.evaluate": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prediction_path": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}}, "df": 77, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"1": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"2": {"docs": {"dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}, "docs": {}, "df": 0}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}}, "df": 33}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 4}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}}, "df": 46, "s": {"docs": {"dlc2action": {"tf": 6.164414002968976}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 2.23606797749979}, "dlc2action.project.meta.Run.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 2}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 2}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 2.6457513110645907}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 2.23606797749979}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 3.7416573867739413}, "dlc2action.project.project.Project.run_episodes": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 3.4641016151377544}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_searches": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 2}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.append": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 293}}}}}, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}}, "df": 1}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 2}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.base_store": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.metric.base_metric": {"tf": 1}, "dlc2action.model.base_model": {"tf": 1}, "dlc2action.transformer.base_transformer": {"tf": 1}}, "df": 6}}}, "t": {"1": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1.4142135623730951}}, "df": 2}, "2": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}}, "df": 2}, "3": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}}, "df": 2}, "docs": {"dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}}, "df": 6, "s": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 7}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 19, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 42}, "s": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 15}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 2}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}}, "df": 2}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}}, "df": 7}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 10.63014581273465}, "dlc2action.project": {"tf": 3}, "dlc2action.project.meta.Run.model_file": {"tf": 1.4142135623730951}, "dlc2action.project.project": {"tf": 1}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 1.7320508075688772}}, "df": 16, "s": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher": {"tf": 1}}, "df": 2}, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2}}, "df": 18}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}}, "df": 4}, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1}}, "df": 26}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 10}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {"dlc2action.utils.argrelmax": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 8}}}, "y": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.argrelmax": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 7}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 23, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 2.23606797749979}}, "df": 19, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.loss": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.forward": {"tf": 2}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 3}, "dlc2action.project.project.Project.evaluate": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.prediction_path": {"tf": 2}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.prediction_exists": {"tf": 2}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 2}, "dlc2action.task.universal_task.Task.predict": {"tf": 2}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 2}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 49, "s": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}}, "df": 12}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 18}}, "s": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}}, "df": 13}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.Precision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.7320508075688772}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1.4142135623730951}}, "df": 9, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 9}}, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 3, "r": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}, "d": {"docs": {"dlc2action.project.project.Project.prune_unfinished": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "y": {"docs": {"dlc2action.model.edtcn": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.loss.tcc": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 2}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 2}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 2}, "dlc2action.project": {"tf": 1.4142135623730951}}, "df": 7}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 2}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 2}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 2.449489742783178}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 2.449489742783178}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 11, "d": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 10}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}}, "df": 1}}}}, "/": {"2": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 7}}}}}, "e": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 17, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 5}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 2}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.model.transformer.Transformer": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.model.transformer.Transformer": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 9, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 6, "s": {"docs": {"dlc2action.task": {"tf": 1}, "dlc2action.task.universal_task.Task": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.mlp.MLP": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}}, "df": 2, "d": {"docs": {"dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.utils.argrelmax": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.utils.argrelmax": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.plot_episodes": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2.449489742783178}}, "df": 7, "s": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2, "d": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1.4142135623730951}}, "df": 4, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.23606797749979}}, "df": 2}}}, "s": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}}, "df": 2}, "l": {"docs": {"dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}}, "df": 4}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}}, "df": 5}}, "t": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1.4142135623730951}}, "df": 15, "h": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.7320508075688772}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 5}, "dlc2action.data": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2}, "dlc2action.feature_extraction": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2.23606797749979}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 2.23606797749979}, "dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 2}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task": {"tf": 1}, "dlc2action.task.task_dispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorList": {"tf": 1}}, "df": 151}, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1.4142135623730951}}, "df": 28}}, "e": {"docs": {"dlc2action": {"tf": 11.135528725660043}, "dlc2action.data": {"tf": 4.358898943540674}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 3}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 3.3166247903554}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 5.830951894845301}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 3}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 5.830951894845301}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 5.291502622129181}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 4}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 2}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 6.164414002968976}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 5.744562646538029}, "dlc2action.data.base_store": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 2.8284271247461903}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 2.449489742783178}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 2.8284271247461903}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 2.449489742783178}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 3.7416573867739413}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 2}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 2}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore": {"tf": 2.8284271247461903}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 3}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 2.23606797749979}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore": {"tf": 2.23606797749979}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 2.449489742783178}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 2.449489742783178}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 2.449489742783178}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 2.23606797749979}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 5.291502622129181}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 4.69041575982343}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 2.6457513110645907}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 5.656854249492381}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 3.7416573867739413}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 4.123105625617661}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 2}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 2}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 4}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 4.123105625617661}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 3.4641016151377544}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 2.23606797749979}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 5.656854249492381}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 4.47213595499958}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 3.7416573867739413}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 4.123105625617661}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 5.477225575051661}, "dlc2action.feature_extraction": {"tf": 3.605551275463989}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 2}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 3.1622776601683795}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 2.8284271247461903}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 3.605551275463989}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 3}, "dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 2.8284271247461903}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.4142135623730951}, "dlc2action.loss.mse": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2.23606797749979}, "dlc2action.loss.tcc.regression_loss": {"tf": 5.477225575051661}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 2.23606797749979}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.update": {"tf": 2.8284271247461903}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 3}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 4.47213595499958}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 3}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 4.47213595499958}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 4.47213595499958}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 4.47213595499958}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 2.8284271247461903}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count.update": {"tf": 2.8284271247461903}, "dlc2action.metric.metrics.Count.calculate": {"tf": 2}, "dlc2action.metric.metrics.EditDistance": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 2.8284271247461903}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 2.8284271247461903}, "dlc2action.model": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 2.449489742783178}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 2.449489742783178}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 2.449489742783178}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 2.23606797749979}, "dlc2action.model.base_model.Model.forward": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 2.449489742783178}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 2.449489742783178}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 2.449489742783178}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 2.449489742783178}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.project": {"tf": 6.244997998398398}, "dlc2action.project.meta.Run.__init__": {"tf": 2}, "dlc2action.project.meta.Run.training_time": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.model_file": {"tf": 2.23606797749979}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.split_file": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.log_file": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 2.8284271247461903}, "dlc2action.project.meta.Run.unfinished": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 2}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 2.6457513110645907}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 2.6457513110645907}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update": {"tf": 2}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 2.23606797749979}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 2.449489742783178}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 2}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 3.1622776601683795}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 2.23606797749979}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 2.6457513110645907}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 2}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.run_episode": {"tf": 6.782329983125268}, "dlc2action.project.project.Project.run_episodes": {"tf": 5}, "dlc2action.project.project.Project.continue_episode": {"tf": 4}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 5.916079783099616}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 4.898979485566356}, "dlc2action.project.project.Project.run_prediction": {"tf": 5}, "dlc2action.project.project.Project.evaluate": {"tf": 3.605551275463989}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.plot_episodes": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.update_parameters": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.get_summary": {"tf": 3}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 2}, "dlc2action.project.project.Project.remove_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 2}, "dlc2action.project.project.Project.prediction_path": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 2}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 4.242640687119285}, "dlc2action.project.project.Project.plot_predictions": {"tf": 4.795831523312719}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.import_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.export_episodes": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.episode_exists": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.search_exists": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 5.477225575051661}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 4.358898943540674}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 2.23606797749979}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 4.358898943540674}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 3.1622776601683795}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 4.358898943540674}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 4.358898943540674}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 4.358898943540674}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 4.358898943540674}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 4.358898943540674}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 4.358898943540674}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 4.358898943540674}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 4.358898943540674}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 2.6457513110645907}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 4.358898943540674}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 4.358898943540674}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1.7320508075688772}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 2.8284271247461903}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 2.6457513110645907}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 4.58257569495584}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 2.449489742783178}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 4}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 2}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 5.385164807134504}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 3.4641016151377544}, "dlc2action.task.universal_task.Task.__init__": {"tf": 4.242640687119285}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 4.58257569495584}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 2.6457513110645907}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 3.1622776601683795}, "dlc2action.task.universal_task.Task.predict": {"tf": 4.123105625617661}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 2}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 4}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 2.23606797749979}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 2.23606797749979}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 3.1622776601683795}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 3}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 2}, "dlc2action.utils.TensorDict": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorDict.remove": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 3.7416573867739413}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 4.242640687119285}, "dlc2action.utils.apply_threshold_max": {"tf": 4.69041575982343}, "dlc2action.utils.strip_suffix": {"tf": 1.7320508075688772}, "dlc2action.utils.strip_prefix": {"tf": 1.7320508075688772}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1.7320508075688772}, "dlc2action.utils.GaussianSmoothing": {"tf": 2}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 432, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 14, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.7320508075688772}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1}}, "df": 28}, "m": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.utils": {"tf": 1.4142135623730951}}, "df": 11}, "i": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 6}}, "y": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.project": {"tf": 2}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 17}, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 3.4641016151377544}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.7320508075688772}, "dlc2action.loss.tcc.regression_loss": {"tf": 2.6457513110645907}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 57}, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 5}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.project.Project.remove_saved_features": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 3.605551275463989}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 3.1622776601683795}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 3.1622776601683795}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 3.1622776601683795}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.utils": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold": {"tf": 2.23606797749979}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 3}, "dlc2action.utils.apply_threshold_max": {"tf": 2.6457513110645907}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 31, "s": {"docs": {"dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1.7320508075688772}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2.23606797749979}}, "df": 15}}}, "w": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 23, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 3.872983346207417}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2.23606797749979}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.training_time": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.task": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}}, "df": 39, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 4}, "r": {"docs": {"dlc2action.task.universal_task.Task": {"tf": 1}}, "df": 1}}, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.project.meta.Run.split_info": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}}, "df": 5}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.ssl": {"tf": 2.23606797749979}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}}, "df": 23, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.transformer": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.feature_extraction": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 2}, "dlc2action.transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}, "dlc2action.transformer.kinematic": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils": {"tf": 1.7320508075688772}}, "df": 16, "s": {"docs": {"dlc2action.feature_extraction": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}}, "df": 6}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.7320508075688772}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 2}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 2}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 3}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2.8284271247461903}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2.8284271247461903}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2.449489742783178}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}}, "df": 112}, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.7320508075688772}}, "df": 13}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.7320508075688772}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}}, "df": 4}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {"dlc2action": {"tf": 7.745966692414834}, "dlc2action.data": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.base_store.Store": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.remove": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2.8284271247461903}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.feature_extraction": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 2}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.8284271247461903}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 2}, "dlc2action.project.meta.Run.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.model_file": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1.7320508075688772}, "dlc2action.project.meta.DecisionThresholds.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.__init__": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.run_episode": {"tf": 3.3166247903554}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.continue_episode": {"tf": 2}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 3}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.run_prediction": {"tf": 3}, "dlc2action.project.project.Project.evaluate": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_searches": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.update_parameters": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 2}, "dlc2action.project.project.Project.plot_predictions": {"tf": 3.4641016151377544}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.7320508075688772}, "dlc2action.ssl": {"tf": 2.449489742783178}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 3.4641016151377544}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.__init__": {"tf": 3}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.predict": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2.6457513110645907}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2.449489742783178}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils": {"tf": 1.7320508075688772}, "dlc2action.utils.TensorDict.remove": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 2.23606797749979}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 2.23606797749979}, "dlc2action.utils.apply_threshold_max": {"tf": 2.23606797749979}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}, "dlc2action.utils.TensorList": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1.4142135623730951}}, "df": 252, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1.4142135623730951}}, "df": 7}}}, "o": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 8, "l": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.version": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.update": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.Count.update": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 2.23606797749979}, "dlc2action.model": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.forward": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 3.605551275463989}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_3d": {"tf": 2}, "dlc2action.utils.TensorList": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1.4142135623730951}}, "df": 79}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 49, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}}, "df": 5}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 2}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 2}}, "df": 31, "s": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1.7320508075688772}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.data_types": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.annotation_types": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task": {"tf": 1}}, "df": 17}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.7320508075688772}}, "df": 4}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 2}, "dlc2action.project.meta.Run.training_time": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 15, "s": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 3}}}}}, ":": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"1": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}}, "df": 5}, "docs": {"dlc2action": {"tf": 2}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1.7320508075688772}, "dlc2action.model.base_model": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.project": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.ssl": {"tf": 2.23606797749979}, "dlc2action.task": {"tf": 3}, "dlc2action.task.task_dispatcher": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}}, "df": 36, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl": {"tf": 1}, "dlc2action.task.universal_task.Task": {"tf": 1}}, "df": 20}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.task": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}}, "df": 8, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 5}, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}}, "df": 7}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {"dlc2action.data.base_store.InputStore.get_tag": {"tf": 2}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 2}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1.4142135623730951}}, "df": 22, "s": {"docs": {"dlc2action.data.base_store.InputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Count.update": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}}, "df": 24}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 2}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 2}, "dlc2action.metric.metrics.Count.update": {"tf": 2}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 2}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 2}, "dlc2action.ssl": {"tf": 3}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 36, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2.23606797749979}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}, "u": {"docs": {"dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1.4142135623730951}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 4.242640687119285}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 21}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 2}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 2.23606797749979}, "dlc2action.metric.base_metric.Metric.update": {"tf": 3.1622776601683795}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 3.1622776601683795}, "dlc2action.metric.metrics.Count.update": {"tf": 3.1622776601683795}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 3.1622776601683795}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 3.1622776601683795}, "dlc2action.model.base_model.Model.extract_features": {"tf": 2}, "dlc2action.model.base_model.Model.forward": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.7320508075688772}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 2.23606797749979}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 2.23606797749979}, "dlc2action.utils.apply_threshold_max": {"tf": 2.6457513110645907}, "dlc2action.utils.rotation_matrix_2d": {"tf": 2.449489742783178}, "dlc2action.utils.rotation_matrix_3d": {"tf": 3.1622776601683795}, "dlc2action.utils.get_intervals": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1.4142135623730951}}, "df": 41, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.forward": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.7320508075688772}, "dlc2action.utils.TensorDict": {"tf": 1}, "dlc2action.utils.TensorList": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 18}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.loss.tcc": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 2}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "n": {"2": {"docs": {"dlc2action.loss.ms_tcn": {"tf": 1}}, "df": 1}, "3": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.model.c2f_tcn": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.edtcn.EDTCN": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}}, "df": 15}, "c": {"docs": {"dlc2action.loss.tcc": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}}, "df": 10}}, "p": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.7320508075688772}}, "df": 2}}, "m": {"docs": {"dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 11, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"dlc2action.data.dataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"dlc2action": {"tf": 1.7320508075688772}}, "df": 1}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.ssl": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2.449489742783178}, "dlc2action.utils.apply_threshold_max": {"tf": 1.7320508075688772}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 28, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 8, "s": {"docs": {"dlc2action": {"tf": 3}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 17}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 3, "d": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "a": {"docs": {"dlc2action.utils.argrelmax": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}}, "df": 18, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}}, "df": 26}}, "s": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.utils": {"tf": 1.4142135623730951}}, "df": 4}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.utils": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1.7320508075688772}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.7320508075688772}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 4}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.version": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 14}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.model": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2.8284271247461903}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 2}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2.8284271247461903}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2.8284271247461903}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2.8284271247461903}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2.8284271247461903}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2.8284271247461903}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2.8284271247461903}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2.8284271247461903}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2.8284271247461903}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2.8284271247461903}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2.8284271247461903}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2.8284271247461903}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 2}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 4.69041575982343}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1.4142135623730951}}, "df": 58, "s": {"docs": {"dlc2action.model": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.set_ssl": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.project": {"tf": 1}, "dlc2action.ssl.modules": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}}, "df": 13}}}}, "e": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}}, "df": 12, "l": {"docs": {"dlc2action": {"tf": 3.872983346207417}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1.4142135623730951}, "dlc2action.model": {"tf": 1.7320508075688772}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 2}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 2}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 3.4641016151377544}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 2}, "dlc2action.task.universal_task.Task.set_model": {"tf": 2}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 69, "s": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.model": {"tf": 1}, "dlc2action.model.base_model": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 15}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action": {"tf": 2}}, "df": 1}}}}}, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}}, "df": 13}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2}}, "df": 13}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}}, "df": 9}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}}, "df": 4}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "d": {"docs": {"dlc2action.project.project.Project.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.metric.base_metric.Metric": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 2.449489742783178}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 2}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 2}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 3}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1.4142135623730951}}, "df": 39, "s": {"docs": {"dlc2action": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.metric": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1}}, "df": 20}}}}, "a": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.project": {"tf": 2.23606797749979}, "dlc2action.project.meta": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 45, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 5}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}}, "df": 34, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.loss.mse": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}}, "df": 4}, "t": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}}, "df": 6, "d": {"docs": {"dlc2action.transformer": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.transformer": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}}, "df": 3}}, "w": {"docs": {"dlc2action.task.universal_task.Task.set_log": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 3}}}, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}}, "df": 15, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 14}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2, "d": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}}, "df": 13}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}}, "df": 10}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}}, "df": 24, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}}, "df": 7}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.ssl": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}}, "df": 3, "e": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 2.6457513110645907}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}}, "df": 5}}, "l": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 5.477225575051661}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 2}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}}, "df": 17, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}}, "df": 7}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 2}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.ssl": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 6, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}}, "df": 17, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}}, "df": 10}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.Recall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.ssl": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 30, "s": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 2.23606797749979}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 43, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 7}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"dlc2action.feature_extraction": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 7}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 12, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 16, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store": {"tf": 1}}, "df": 1}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}}, "df": 2, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}}, "df": 5}, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}}, "df": 2, "d": {"docs": {"dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.utils.argrelmax": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 44, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.project.meta.Run.training_time": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.data_types": {"tf": 1}, "dlc2action.project.project.Project.annotation_types": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1}}, "df": 208}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 24}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.Store.remove": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.clear": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1.4142135623730951}, "dlc2action.utils.smooth": {"tf": 1.4142135623730951}}, "df": 34, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 3}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"dlc2action.project": {"tf": 2.23606797749979}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 7, ":": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}}, "df": 13}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.transformer": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 4}}, "m": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}}, "df": 13}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"dlc2action.metric.base_metric.Metric": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}}, "df": 8}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils": {"tf": 1.7320508075688772}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1.7320508075688772}, "dlc2action.utils.rotation_matrix_3d": {"tf": 2.449489742783178}}, "df": 4}}}}}}}, "b": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.utils": {"tf": 1.4142135623730951}, "dlc2action.utils.smooth": {"tf": 1}}, "df": 3}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.transformer": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 30, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}}, "df": 4, "s": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 12}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.metric.base_metric.Metric": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.import_episodes": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.import_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1}}, "df": 31}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 14}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1.7320508075688772}}, "df": 5}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}}, "df": 7, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2.23606797749979}}, "df": 38}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}}, "df": 33, "s": {"docs": {"dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1.4142135623730951}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.search_exists": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1.4142135623730951}}, "df": 10}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}}, "df": 8}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1.7320508075688772}}, "df": 1}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.ssl": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 2.449489742783178}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 3}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.utils.TensorList": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 32}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"1": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.SavedStores.find_name": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"1": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 1}, "2": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"dlc2action": {"tf": 7.3484692283495345}, "dlc2action.project": {"tf": 2}, "dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 2}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 3.4641016151377544}, "dlc2action.project.project.Project.run_episodes": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.continue_episode": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.get_summary": {"tf": 2}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.episode_exists": {"tf": 2}}, "df": 48, "s": {"docs": {"dlc2action": {"tf": 4.358898943540674}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 2}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 2}, "dlc2action.project.project.Project.import_episodes": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.export_episodes": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.4142135623730951}}, "df": 18}, "#": {"0": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 2}, "1": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"2": {"5": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"dlc2action": {"tf": 2.6457513110645907}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1.7320508075688772}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}}, "df": 30, "s": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.train": {"tf": 2}}, "df": 14}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 2.449489742783178}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 14, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}}, "df": 31, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}, "s": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.utils": {"tf": 1}}, "df": 3}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.model.edtcn.EDTCN": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 1}, "s": {"docs": {"dlc2action.model.base_model.Model": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.model": {"tf": 1}}, "df": 1}, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.model.transformer.Transformer": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}}, "df": 15}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorDict.append": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorList": {"tf": 1}}, "df": 9, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.remove": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.project.project.Project.remove_saved_features": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.8284271247461903}, "dlc2action.loss.mse": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.transformation": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.transformation": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.transformation": {"tf": 1}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}}, "df": 19}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.metric.metrics.EditDistance": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.edtcn": {"tf": 1}, "dlc2action.model.edtcn.EDTCN": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}}, "df": 30, "d": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.loss.contrastive": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.model.base_model": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 2}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.modules": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.utils": {"tf": 1.7320508075688772}}, "df": 44}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 13}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.utils": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "p": {"docs": {"dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 5, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1.4142135623730951}}, "df": 25, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 11}, "d": {"docs": {"dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 8}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.model.transformer.Transformer": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 15, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 3}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.model.base_model": {"tf": 1}, "dlc2action.task": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 11}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}}, "df": 8}}}, "t": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 2.449489742783178}}, "df": 16}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}}, "df": 13}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1.7320508075688772}}, "df": 11}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.utils": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "b": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {"dlc2action": {"tf": 4.242640687119285}, "dlc2action.data": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.base_store.Store": {"tf": 2}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 2.449489742783178}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 2.449489742783178}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.7320508075688772}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 3}, "dlc2action.project.meta.Run.model_file": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 2}, "dlc2action.project.project.Project.run_episode": {"tf": 3.3166247903554}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 2}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.ssl": {"tf": 3.1622776601683795}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2.449489742783178}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2.449489742783178}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 4}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2.6457513110645907}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 143, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 2}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_summary": {"tf": 1}}, "df": 9}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}}, "df": 27}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}}, "df": 3}}}, "a": {"docs": {"dlc2action.metric.metrics.Fbeta": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 5}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1.4142135623730951}}, "df": 16, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.utils": {"tf": 1}}, "df": 21}}}}}}}, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}}, "df": 11}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}}, "df": 7}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.transformer": {"tf": 1}}, "df": 9}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"dlc2action": {"tf": 3.3166247903554}, "dlc2action.data": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}, "dlc2action.loss.contrastive": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.ssl": {"tf": 2.449489742783178}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.modules": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}}, "df": 75}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}}, "df": 8, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.model": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 10}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}}, "df": 9}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 2}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.7320508075688772}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2.6457513110645907}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 21, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"2": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 2}}, "e": {"docs": {"dlc2action.data": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.metrics": {"tf": 1}, "dlc2action.model": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 2}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2}, "dlc2action.ssl.contrastive": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2}, "dlc2action.ssl.modules": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils": {"tf": 1}}, "df": 41, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 5}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}}, "df": 4}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.7320508075688772}}, "df": 2, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 8}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}}, "df": 8}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2.449489742783178}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 99, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}}, "df": 2}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}}, "df": 6}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1.7320508075688772}}, "df": 3}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 7, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 2.6457513110645907}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.6457513110645907}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}}, "df": 16, "s": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}}, "df": 11}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}}, "df": 10}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action": {"tf": 7.681145747868608}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.project": {"tf": 2}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.ssl": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 11, "r": {"docs": {"dlc2action": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.project": {"tf": 1.4142135623730951}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "c": {"2": {"docs": {}, "df": 0, "f": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}}, "df": 3}}, "docs": {"dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 5.5677643628300215}, "dlc2action.data": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.metric": {"tf": 1}, "dlc2action.project": {"tf": 2.23606797749979}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.ssl": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2.23606797749979}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorList": {"tf": 1}}, "df": 48, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}}, "df": 9}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}}, "df": 7, "s": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1.4142135623730951}}, "df": 5}}}}, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}, "m": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5, "s": {"2": {"1": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 3}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 13, "d": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}}, "df": 11, "s": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 3}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.project.project.Project.remove_saved_features": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.utils": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}}, "df": 8, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 2.6457513110645907}, "dlc2action.project": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 2}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.loss.contrastive": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}}, "df": 19}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 18}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}, "d": {"docs": {"dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.model": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}, "dlc2action.loss.tcc": {"tf": 1}}, "df": 4}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 6}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}}, "df": 7, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": null}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": null}}, "df": 2, "s": {"docs": {"dlc2action.loss.contrastive": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}}, "df": 9}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.feature_extraction": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.model.base_model.Model.extract_features": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.transformer": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}}, "df": 4}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.23606797749979}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}}, "df": 4, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.449489742783178}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 26}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 8}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}}, "df": 2}}, "x": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.ssl": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 16}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}}, "df": 2, "d": {"docs": {"dlc2action.transformer.base_transformer.Transformer": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 2.23606797749979}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 1}}}}, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "j": {"docs": {"dlc2action.loss.ms_tcn": {"tf": 1}}, "df": 1}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"0": {"1": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.loss.tcc": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.model.asformer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.model.c2f_tcn": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"7": {"1": {"3": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.edtcn": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}, "e": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 2.23606797749979}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.count_classes": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 2.23606797749979}}, "df": 7}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}}, "df": 1}, "r": {"docs": {"dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}}, "df": 27, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 15, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.ssl": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action.data": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 2}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 25}}}}}}, "s": {"docs": {"dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 13}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.dataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.base_metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.F1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.6457513110645907}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.6457513110645907}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.6457513110645907}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.6457513110645907}, "dlc2action.metric.metrics.Accuracy.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1.4142135623730951}, "dlc2action.model": {"tf": 1}, "dlc2action.model.base_model": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 2}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 2}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.EmptySSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.task": {"tf": 1}, "dlc2action.task.task_dispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 2}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 2}}, "df": 110, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 2.23606797749979}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 2}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.F1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.project": {"tf": 2}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 43}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.smooth": {"tf": 1}}, "df": 22}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.data": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.base_store.Store": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 2.449489742783178}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 2}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 70, "s": {"docs": {"dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}}, "df": 17}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.project": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 20, "d": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 10}, "s": {"docs": {"dlc2action.task": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 23}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 3}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.episode_exists": {"tf": 1}, "dlc2action.project.project.Project.search_exists": {"tf": 1}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1.4142135623730951}}, "df": 17, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 2}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.project": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}}, "df": 6, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.utils.GaussianSmoothing": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_max": {"tf": 1.7320508075688772}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 11, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}}, "df": 15}, "d": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 3, ":": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "i": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1.7320508075688772}}, "df": 4}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.tcc": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2.6457513110645907}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"dlc2action.loss.tcc.gen_cycles": {"tf": 3.1622776601683795}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 2}}, "df": 5}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.dataset": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 2.23606797749979}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.7320508075688772}, "dlc2action.project.meta": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.options": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}}, "df": 17}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}, "w": {"docs": {"dlc2action": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1.7320508075688772}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 2.6457513110645907}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2}, "dlc2action.utils": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 4}}}}}}}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.7320508075688772}}, "df": 2}}, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.loss.tcc": {"tf": 1}, "dlc2action.model.asformer": {"tf": 1}, "dlc2action.model.c2f_tcn": {"tf": 1}, "dlc2action.model.edtcn": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 33}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 20}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project.project.Project.remove_saved_features": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.project.meta": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.model": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.utils.TensorDict": {"tf": 1}}, "df": 3}, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.7320508075688772}}, "df": 11}}}, ":": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"2": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.dataset": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}}, "df": 43}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.project": {"tf": 2}, "dlc2action.ssl": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}}, "df": 13}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 13}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}}, "df": 1}}, "d": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 3}}, "t": {"docs": {"dlc2action": {"tf": 1.7320508075688772}}, "df": 1}, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 21, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorDict": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 51, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}}, "df": 2}}}}, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 17}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 2.23606797749979}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}}, "df": 17, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 3.605551275463989}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 3.4641016151377544}, "dlc2action.project.project.Project.run_episodes": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_prediction": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.evaluate": {"tf": 2}, "dlc2action.project.project.Project.update_parameters": {"tf": 2}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.4142135623730951}}, "df": 38, "s": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 36}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.loss": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.consistency_loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.7320508075688772}, "dlc2action.loss.mse": {"tf": 1}, "dlc2action.loss.tcc": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 3.3166247903554}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.ssl": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.EmptySSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.loss": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.loss": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 2}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1.7320508075688772}}, "df": 47, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.contrastive": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1.7320508075688772}}, "df": 6}}}, "t": {"docs": {"dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2}}, "t": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 2.23606797749979}}, "df": 3}, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.23606797749979}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.7320508075688772}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 8, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 5}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 3.605551275463989}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.data_types": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.annotation_types": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 3.7416573867739413}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 2.449489742783178}, "dlc2action.model.base_model.Model.__init__": {"tf": 2.449489742783178}, "dlc2action.model.base_model.Model.forward": {"tf": 2}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 2.449489742783178}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 2.449489742783178}, "dlc2action.model.mlp.MLP.__init__": {"tf": 2.449489742783178}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 2.449489742783178}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 2}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 2}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 2}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 2}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_episodes": {"tf": 4.123105625617661}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 2}, "dlc2action.project.project.Project.evaluate": {"tf": 2}, "dlc2action.project.project.Project.list_episodes": {"tf": 2}, "dlc2action.project.project.Project.list_predictions": {"tf": 2}, "dlc2action.project.project.Project.list_searches": {"tf": 2}, "dlc2action.project.project.Project.plot_episodes": {"tf": 3.605551275463989}, "dlc2action.project.project.Project.update_parameters": {"tf": 2}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 2}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 2}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.data_types": {"tf": 1}, "dlc2action.project.project.Project.annotation_types": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_blanks": {"tf": 2}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 2.449489742783178}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 2}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 3.4641016151377544}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2.8284271247461903}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 2.449489742783178}, "dlc2action.utils.TensorDict.remove": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 2}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 2}, "dlc2action.utils.apply_threshold_max": {"tf": 2}, "dlc2action.utils.strip_suffix": {"tf": 1.4142135623730951}, "dlc2action.utils.strip_prefix": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorList": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}}, "df": 141, "s": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.utils": {"tf": 1}}, "df": 14}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}}, "df": 7, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.base_store.PoseInputStore": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 2}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.plot_episodes": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}}, "df": 2}}}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.loss.ms_tcn": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 19}}, "b": {"docs": {"dlc2action.version": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1.4142135623730951}}, "df": 32, "s": {"docs": {"dlc2action.data": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}}, "df": 18}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 16, "/": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 5, "r": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 7}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.model.mlp.MLP": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}}, "df": 14, "s": {"docs": {"dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 7}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}}, "df": 7}, "r": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}, "f": {"1": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.metric.metrics.F1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 6}, "docs": {"dlc2action": {"tf": 2}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Fbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 20, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 5.477225575051661}, "dlc2action.data": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.base_store": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.8284271247461903}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.base_metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.F1.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 3.3166247903554}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 3.3166247903554}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 3.3166247903554}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 3.3166247903554}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.model.base_model": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 2}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 2}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.task.task_dispatcher": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 160, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 6, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 5}}}, "m": {"docs": {"dlc2action.ssl": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}}, "df": 11, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.ssl": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"dlc2action.model": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 3.3166247903554}}, "df": 5}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"2": {"docs": {"dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}}, "df": 1}, "docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.project": {"tf": 2.23606797749979}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 2}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 33, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}}, "df": 17}}}, "s": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action": {"tf": 3}, "dlc2action.data": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 2}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 3.4641016151377544}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 2.449489742783178}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn": {"tf": 1}, "dlc2action.loss.tcc": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.model": {"tf": 1}, "dlc2action.model.asformer": {"tf": 1}, "dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.model.c2f_tcn": {"tf": 1}, "dlc2action.model.edtcn": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.update_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 1}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}}, "df": 99}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 2}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1.4142135623730951}}, "df": 42, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 2}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.449489742783178}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.449489742783178}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 2.23606797749979}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 2.23606797749979}, "dlc2action.utils.apply_threshold_max": {"tf": 2.449489742783178}}, "df": 66}}}, "c": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}}, "df": 23, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}}, "df": 24}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 2}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.log_file": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_log": {"tf": 1.4142135623730951}}, "df": 73, "s": {"docs": {"dlc2action": {"tf": 4.47213595499958}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 2}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.project": {"tf": 3.3166247903554}, "dlc2action.project.meta": {"tf": 1}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.remove_project": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}}, "df": 49}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.utils": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}}, "df": 6}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1.4142135623730951}}, "df": 13}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.utils": {"tf": 1}}, "df": 11}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 5}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1}}, "df": 50}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 2}}, "df": 47, "s": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.utils": {"tf": 1.4142135623730951}}, "df": 23}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 5, "y": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.construct_module": {"tf": 1}}, "df": 8}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 3}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 3.1622776601683795}, "dlc2action.feature_extraction": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1.7320508075688772}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1.7320508075688772}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1.7320508075688772}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1.7320508075688772}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2.23606797749979}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 2.23606797749979}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2.23606797749979}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.transformer": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 2}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.utils": {"tf": 1}}, "df": 87, "s": {"docs": {"dlc2action": {"tf": 2.6457513110645907}, "dlc2action.data": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 2.449489742783178}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 2.449489742783178}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 2.449489742783178}, "dlc2action.feature_extraction": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 2.23606797749979}, "dlc2action.project": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.7320508075688772}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 73}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.23606797749979}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 2}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 72, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.transformation": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 2}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.predict": {"tf": 2}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 83}}}, "q": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}, "p": {"docs": {"dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}}, "df": 2}}, "n": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 4.358898943540674}, "dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}}, "df": 99, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}}, "df": 26, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}}, "df": 4, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}}, "df": 25}}}}}}}, "f": {"docs": {"dlc2action": {"tf": 5.656854249492381}, "dlc2action.data": {"tf": 3.605551275463989}, "dlc2action.data.annotation_store": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3.7416573867739413}, "dlc2action.data.annotation_store.ActionSegmentationStore.remove": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 2}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 2}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3.872983346207417}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 3.605551275463989}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3.4641016151377544}, "dlc2action.data.base_store.Store": {"tf": 2}, "dlc2action.data.base_store.Store.remove": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.new": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 2}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 2}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 2.449489742783178}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 2}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.set_pseudo_labels": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 3}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2.8284271247461903}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 2.449489742783178}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 4.123105625617661}, "dlc2action.data.input_store.GeneralInputStore.remove": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 3.1622776601683795}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 2.449489742783178}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 4.123105625617661}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 3.4641016151377544}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 3.1622776601683795}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 4}, "dlc2action.feature_extraction": {"tf": 2}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 3.1622776601683795}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 3.872983346207417}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 2.23606797749979}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 2}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2.6457513110645907}, "dlc2action.loss.tcc.regression_loss": {"tf": 3.872983346207417}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.base_metric.Metric.reset": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 3.605551275463989}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 3.605551275463989}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 3.605551275463989}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 3.605551275463989}, "dlc2action.metric.metrics.Accuracy.reset": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count": {"tf": 1}, "dlc2action.metric.metrics.Count.__init__": {"tf": 1}, "dlc2action.metric.metrics.Count.reset": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.reset": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.reset": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.model": {"tf": 1}, "dlc2action.model.asformer.ASFormer": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.freeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.unfreeze_feature_extractor": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1.4142135623730951}, "dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 3.3166247903554}, "dlc2action.project.meta.Run.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1.7320508075688772}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 2.23606797749979}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Searches.save_search": {"tf": 2}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 2.6457513110645907}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 3.872983346207417}, "dlc2action.project.project.Project.run_episodes": {"tf": 4.242640687119285}, "dlc2action.project.project.Project.continue_episode": {"tf": 2}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 3}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_prediction": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.evaluate": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.list_episodes": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.list_predictions": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.list_searches": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_episodes": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.update_parameters": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.get_summary": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.remove_search": {"tf": 1}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1}, "dlc2action.project.project.Project.remove_episode": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 2.8284271247461903}, "dlc2action.project.project.Project.plot_predictions": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.create_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.load_metadata_backup": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 2.449489742783178}, "dlc2action.ssl": {"tf": 2.23606797749979}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 2}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.contrastive": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 2.23606797749979}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 2}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 2}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 2.23606797749979}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 2}, "dlc2action.ssl.modules": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 2.23606797749979}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 3}, "dlc2action.task.task_dispatcher.TaskDispatcher.save_model": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 3}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2}, "dlc2action.task.universal_task.Task": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 3}, "dlc2action.task.universal_task.Task.train": {"tf": 3}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.set_ssl_losses": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 2}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 2}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 3.605551275463989}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 3.605551275463989}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 2.8284271247461903}, "dlc2action.utils": {"tf": 2.23606797749979}, "dlc2action.utils.TensorDict": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorDict.__init__": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold": {"tf": 2.8284271247461903}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 2.8284271247461903}, "dlc2action.utils.apply_threshold_max": {"tf": 3.3166247903554}, "dlc2action.utils.strip_suffix": {"tf": 1}, "dlc2action.utils.strip_prefix": {"tf": 1}, "dlc2action.utils.rotation_matrix_2d": {"tf": 2.449489742783178}, "dlc2action.utils.rotation_matrix_3d": {"tf": 3.1622776601683795}, "dlc2action.utils.TensorList": {"tf": 1}, "dlc2action.utils.get_intervals": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1.7320508075688772}, "dlc2action.utils.GaussianSmoothing": {"tf": 2.23606797749979}, "dlc2action.utils.argrelmax": {"tf": 1.4142135623730951}}, "df": 384, "f": {"docs": {"dlc2action.model.base_model.Model.ssl_off": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.model": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2.449489742783178}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2.449489742783178}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1}}, "df": 64}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"dlc2action": {"tf": 2}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 8, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 2}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 24}}}}}}}}, "n": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_on": {"tf": 1}, "dlc2action.model.base_model.Model.main_task_off": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 3.4641016151377544}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 36, "e": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.utils": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 29, "s": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 2}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 38}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.meta.SavedStores": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 7}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.options": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 4, "s": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1.4142135623730951}}, "df": 15}, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3.7416573867739413}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3.7416573867739413}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 3.4641016151377544}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3.605551275463989}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3.7416573867739413}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 3.4641016151377544}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 3.4641016151377544}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 3}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 2.23606797749979}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 3.4641016151377544}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.8284271247461903}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 2}, "dlc2action.model.base_model.Model.__init__": {"tf": 2}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 2}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 2}, "dlc2action.model.mlp.MLP.__init__": {"tf": 2}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 2}, "dlc2action.project.meta.Run.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.__init__": {"tf": 2}, "dlc2action.project.project.Project.run_episode": {"tf": 3}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.evaluate": {"tf": 2}, "dlc2action.project.project.Project.plot_episodes": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.update_parameters": {"tf": 2}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.__init__": {"tf": 3.1622776601683795}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2.449489742783178}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 107, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 13}}}}}}, "m": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}}, "df": 4}, "d": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 5}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 36, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 14, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 6}}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"dlc2action.utils.TensorDict.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.PoseFeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"dlc2action.data": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.base_store": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 39}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "j": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}}, "df": 2, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 2}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.transformation": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}}, "df": 7}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.utils.smooth": {"tf": 1}}, "df": 1}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 4.242640687119285}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 2}}, "y": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.project": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action": {"tf": 1.7320508075688772}}, "df": 1}}, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}}, "df": 12}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 4.58257569495584}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.7320508075688772}, "dlc2action.metric.base_metric.Metric.needs_raw_data": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.segmental": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.segmental": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.PKU_mAP.needs_raw_data": {"tf": 1.4142135623730951}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_on": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.ssl_on": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1.4142135623730951}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 2.6457513110645907}, "dlc2action.project.meta.Run.model_file": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 3.1622776601683795}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1}, "dlc2action.ssl": {"tf": 2.6457513110645907}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 2.23606797749979}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 3.1622776601683795}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 91}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action": {"tf": 4.898979485566356}, "dlc2action.data": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 2.23606797749979}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 2.23606797749979}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 2.449489742783178}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.PoseFeatureExtractor.input_store_class": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.project": {"tf": 3.3166247903554}, "dlc2action.project.meta.Run": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.SavedRuns": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches": {"tf": 1}, "dlc2action.project.meta.Suggestions": {"tf": 1}, "dlc2action.project.meta.SavedStores": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2.6457513110645907}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.project.project.Project.get_results_table": {"tf": 1.7320508075688772}, "dlc2action.ssl": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}, "dlc2action.task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 2}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}, "dlc2action.utils": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}}, "df": 130, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}}, "df": 8}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.construct_module": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 16}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}}, "df": 3}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}}, "df": 24, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.save": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.export_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.save_model": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 81}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 18}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.task": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}}, "df": 10}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.utils.argrelmax": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}}, "df": 2}}, "e": {"docs": {"dlc2action": {"tf": 4}, "dlc2action.data": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 2.449489742783178}}, "df": 7, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.7320508075688772}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 6, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1.7320508075688772}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1}}, "df": 13}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.to_ram": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.to_ram": {"tf": 1}, "dlc2action.data.base_store.Store.to_ram": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.to_ram": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}}, "df": 7}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.feature_extraction.PoseFeatureExtractor": {"tf": 1}, "dlc2action.transformer": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project": {"tf": 1}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.project": {"tf": 1}, "dlc2action.utils": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {"dlc2action.data": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore.load_from_key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.load_from_key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.Store.load_from_key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 3}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.load_from_key_objects": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 3}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.8284271247461903}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1.4142135623730951}}, "df": 37, "s": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.6457513110645907}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.load_state_dict": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}}, "df": 75}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}}, "df": 4, "s": {"docs": {"dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}}, "df": 4}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.help": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 3, "s": {"docs": {"dlc2action.project.project.Project.help": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.utils.GaussianSmoothing": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "n": {"docs": {"dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.filtered_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.filtered_indices": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.transformer.kinematic": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}}, "df": 14}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1.4142135623730951}}, "df": 31, "e": {"docs": {}, "df": 0, "w": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.data": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.create_subsample": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.create_subsample": {"tf": 1}, "dlc2action.data.base_store.Store.new": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_ssl_transformations": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.new": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.create_subsample": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 2.23606797749979}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.set_model": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 2}, "dlc2action.task.universal_task.Task.set_loss": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_metrics": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_transformer": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.set_predict_functions": {"tf": 1.7320508075688772}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}}, "df": 32, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.key_objects": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.key_objects": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.key_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}}, "df": 30}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data": {"tf": 1}, "dlc2action.project.project.Project.list_blanks": {"tf": 1}, "dlc2action.ssl": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}}, "df": 5, "s": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.metric.base_metric.Metric": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 21}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}}, "df": 13}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}}, "df": 7, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 6}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 5, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"dlc2action.ssl": {"tf": 1.7320508075688772}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 2}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 2}, "dlc2action.ssl.modules": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 2}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 2}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 2}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 15}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"1": {"docs": {"dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 4}}}}}, "2": {"docs": {"dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 4}}}}}, "docs": {"dlc2action": {"tf": 3.605551275463989}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.449489742783178}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1.7320508075688772}, "dlc2action.project.meta.DecisionThresholds.save_thresholds": {"tf": 2}, "dlc2action.project.meta.DecisionThresholds.find_thresholds": {"tf": 2}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.check_name_validity": {"tf": 2}, "dlc2action.project.meta.SavedRuns.update_episode_metrics": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedRuns.load_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.remove_episode": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update_episode_results": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Searches.save_search": {"tf": 2.23606797749979}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.remove_dataset": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.save_store": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.check_name_validity": {"tf": 2}, "dlc2action.project.project.Project.__init__": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 3}, "dlc2action.project.project.Project.run_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_prediction": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.update_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prediction_path": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.import_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.episode_exists": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.search_exists": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prediction_exists": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1}}, "df": 72, "s": {"docs": {"dlc2action": {"tf": 2}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.required_objects": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1.7320508075688772}, "dlc2action.project.meta.SavedStores.remove": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 2.449489742783178}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.update_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 2}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 2}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.set_main_parameters": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.export_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.get_results_table": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.7320508075688772}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 75}, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project.project.Project.run_prediction": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "}": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 17}, ":": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}}, "df": 2}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}}, "df": 2}}}}}}}}}}, "#": {"0": {"docs": {"dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.project.project.Project.run_episode": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.project.project.Project.continue_episode": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.transformer": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.loss": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}}, "df": 13, "w": {"docs": {"dlc2action": {"tf": 1.7320508075688772}}, "df": 1}, "t": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 3}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 3.3166247903554}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SegmentalFbeta": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.model.base_model.Model.ssl_off": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 2}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.remove_extra_checkpoints": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.load_from_checkpoint": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 2.23606797749979}, "dlc2action.transformer.base_transformer.EmptyTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1}, "dlc2action.utils.TensorDict.__init__": {"tf": 1}, "dlc2action.utils.apply_threshold": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1.7320508075688772}, "dlc2action.utils.apply_threshold_max": {"tf": 1.7320508075688772}}, "df": 94, "e": {"docs": {"dlc2action": {"tf": 2.23606797749979}, "dlc2action.project.project.Project.prune_unfinished": {"tf": 1}}, "df": 2}}, "n": {"docs": {"dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1.4142135623730951}, "dlc2action.utils.smooth": {"tf": 1}}, "df": 14, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_idx": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tag": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tag": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.project.meta.SavedStores.find_name": {"tf": 1}, "dlc2action.project.project.Project.__init__": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl": {"tf": 2.6457513110645907}, "dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.base_ssl.SSLConstructor.transformation": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1.4142135623730951}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.make_dataloader": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 2.449489742783178}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 71, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}}, "df": 4}}}}}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 2, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}, "d": {"docs": {"dlc2action.metric.metrics.EditDistance": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}}, "df": 2}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.6457513110645907}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}}, "df": 43, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.class_weights": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 2.23606797749979}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 2.23606797749979}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.unfinished": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFeaturesSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL_FC.__init__": {"tf": 1.7320508075688772}, "dlc2action.ssl.masked.MaskedKinematicSSL_TCN.__init__": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.segment_order.ReverseSSL.__init__": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.__init__": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2.23606797749979}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold": {"tf": 1}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1.4142135623730951}}, "df": 91, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}}, "df": 8}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}}, "df": 10}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 11, "y": {"docs": {"dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 2.23606797749979}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 2.8284271247461903}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 2.449489742783178}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}}, "df": 6}}, "n": {"docs": {"dlc2action.loss": {"tf": 1}, "dlc2action.model": {"tf": 1}, "dlc2action.model.asformer.ASFormer.__init__": {"tf": 1}, "dlc2action.model.base_model.Model.__init__": {"tf": 1}, "dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.model.base_model.LoadedModel.__init__": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.__init__": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.__init__": {"tf": 1}, "dlc2action.model.mlp.MLP.__init__": {"tf": 1}, "dlc2action.model.transformer.Transformer.__init__": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.construct_module": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.construct_module": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 3.4641016151377544}, "dlc2action.task.universal_task.MyDataParallel.__init__": {"tf": 1}, "dlc2action.utils.GaussianSmoothing.__init__": {"tf": 1}}, "df": 15}, "t": {"docs": {"dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}}, "df": 8}}, "g": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 29, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action": {"tf": 1.7320508075688772}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.regression_loss": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1.7320508075688772}}, "df": 13}}, "p": {"docs": {"dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_searches": {"tf": 1.4142135623730951}, "dlc2action.utils.get_intervals": {"tf": 1}}, "df": 5, "s": {"docs": {"dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.4142135623730951}}, "df": 2}, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "}": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}}, "df": 2}}}}}}}}}, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.task.universal_task.Task.__init__": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 3}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.size": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_len": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_indices": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.annotation_class": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.size": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_id": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_clip_length_from_coords": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_folder_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_indices": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.get_len": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.annotation_class": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.size": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_coords": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1.7320508075688772}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.behaviors_dict": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.features_shape": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.num_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.len_segment": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_confusion_matrix": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.annotation_class": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_id": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start_end": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_annotation_objects": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_bodyparts": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_coords": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_n_frames": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_indices": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.model.asformer.ASFormer.features_shape": {"tf": 1}, "dlc2action.model.base_model.Model.features_shape": {"tf": 1}, "dlc2action.model.c2f_tcn.C2F_TCN.features_shape": {"tf": 1}, "dlc2action.model.edtcn.EDTCN.features_shape": {"tf": 1}, "dlc2action.model.mlp.MLP.features_shape": {"tf": 1}, "dlc2action.model.transformer.Transformer": {"tf": 1}, "dlc2action.model.transformer.Transformer.features_shape": {"tf": 1}, "dlc2action.project.meta.Run.training_time": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.meta.Run.dataset_name": {"tf": 1}, "dlc2action.project.meta.Run.split_file": {"tf": 1}, "dlc2action.project.meta.Run.log_file": {"tf": 1}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metrics": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1.7320508075688772}, "dlc2action.project.meta.Run.get_epoch_list": {"tf": 1}, "dlc2action.project.meta.Run.get_class_ind": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.Run.get_num_classes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_subset": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_saved_data_path": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_active_datasets": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.unfinished_episodes": {"tf": 1}, "dlc2action.project.meta.SavedRuns.get_runs": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params_raw": {"tf": 1}, "dlc2action.project.meta.Searches.get_best_params": {"tf": 1}, "dlc2action.project.meta.SavedStores.dataset_names": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.list_best_parameters": {"tf": 1}, "dlc2action.project.project.Project.get_summary": {"tf": 1}, "dlc2action.project.project.Project.remove_saved_features": {"tf": 1}, "dlc2action.project.project.Project.prediction_path": {"tf": 1}, "dlc2action.project.project.Project.data_types": {"tf": 1}, "dlc2action.project.project.Project.annotation_types": {"tf": 1}, "dlc2action.project.project.Project.help": {"tf": 1}, "dlc2action.project.project.Project.list_basic_parameters": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.get_normalization_stats": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.utils": {"tf": 1.4142135623730951}, "dlc2action.utils.get_intervals": {"tf": 1}, "dlc2action.utils.smooth": {"tf": 1}}, "df": 119, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.data.dataset.BehaviorDataset.set_indexing_parameters": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_class_distribution": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1}, "dlc2action.task.universal_task.Task.save_checkpoint": {"tf": 1}}, "df": 15, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1}}, "df": 1, "d": {"docs": {"dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action.ssl": {"tf": 1}}, "df": 1}}}}, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1.7320508075688772}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.model.c2f_tcn.C2F_TCN": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.base_store.Store.get_parameters": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1}, "dlc2action.model.base_model.LoadedModel": {"tf": 1}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.ssl": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1.4142135623730951}, "dlc2action.utils": {"tf": 1}}, "df": 23, "s": {"docs": {"dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_FC": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL_TCN": {"tf": 1}}, "df": 9}, "d": {"docs": {"dlc2action.metric.base_metric.Metric.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.ssl": {"tf": 2}, "dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.transform": {"tf": 1}}, "df": 17}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.project": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.project.project.Project.get_results_table": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1}, "dlc2action.loss.tcc.gen_cycles": {"tf": 1}, "dlc2action.loss.tcc.regression_loss": {"tf": 1}, "dlc2action.project": {"tf": 1.4142135623730951}}, "df": 6, "o": {"docs": {}, "df": 0, "d": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.ssl.base_ssl.SSLConstructor.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.type": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFeaturesSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedKinematicSSL.type": {"tf": 1}, "dlc2action.ssl.masked.MaskedFramesSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.ReverseSSL.type": {"tf": 1}, "dlc2action.ssl.segment_order.OrderSSL.type": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.type": {"tf": 1}}, "df": 12}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.metric.base_metric.Metric.update": {"tf": 1}, "dlc2action.metric.metrics.PR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.F1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalF1.__init__": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPR_AUC.__init__": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.update": {"tf": 1}, "dlc2action.metric.metrics.Count.update": {"tf": 1}, "dlc2action.metric.metrics.EditDistance.update": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.update": {"tf": 1}, "dlc2action.project.meta.Run.model_file": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.update_task": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 27}}}}, "t": {"docs": {"dlc2action": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.continue_episode": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.list_predictions": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.list_searches": {"tf": 1.7320508075688772}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 3.3166247903554}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 2.449489742783178}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}}, "df": 13}, "u": {"docs": {}, "df": 0, "i": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}, "d": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"dlc2action.loss.ms_tcn.MS_TCN_Loss.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.ssl.contrastive.PairwiseMaskedSSL.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.utils.GaussianSmoothing": {"tf": 1.7320508075688772}, "dlc2action.utils.GaussianSmoothing.forward": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"1": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}, "dlc2action.project": {"tf": 1}}, "df": 13, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"1": {"0": {"0": {"0": {"docs": {"dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "2": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1}, "dlc2action.project": {"tf": 1}}, "df": 11, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"4": {"0": {"0": {"docs": {"dlc2action.data.input_store.GeneralInputStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "9": {"docs": {"dlc2action.data.annotation_store.SIMBAAnnotationStore": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore": {"tf": 1}}, "df": 2}, "docs": {"dlc2action.data": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.EmptyAnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.FileAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 2}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.449489742783178}, "dlc2action.data.base_store.Store": {"tf": 2.23606797749979}, "dlc2action.data.base_store.Store.get_original_coordinates": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore": {"tf": 2.449489742783178}, "dlc2action.data.base_store.InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_video_id": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_clip_length": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_clip_start": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.InputStore.get_folder": {"tf": 2}, "dlc2action.data.base_store.InputStore.get_video_id_order": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.AnnotationStore": {"tf": 2.449489742783178}, "dlc2action.data.base_store.AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_len": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.get_folder": {"tf": 2}, "dlc2action.data.input_store.GeneralInputStore.get_original_coordinates": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_video_id": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_clip_length": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_clip_start": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.FileInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.PKUMMDInputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.data.input_store.LoadedFeaturesInputStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 2}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 2.23606797749979}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 2}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 71, "s": {"docs": {"dlc2action.data": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.EmptyAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.SequenceAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.get_file_ids": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.Store": {"tf": 1}, "dlc2action.data.base_store.Store.get_file_ids": {"tf": 1}, "dlc2action.data.base_store.InputStore": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore": {"tf": 1}, "dlc2action.data.input_store.SequenceInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 2}, "dlc2action.data.input_store.CalMS21InputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 25, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 2.6457513110645907}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 2.23606797749979}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 2}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 2}}, "df": 9}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.base_store.InputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_visibility": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_visibility": {"tf": 1}}, "df": 8}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore.get_file_ids": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}}, "df": 5}}}, "a": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"dlc2action": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 2}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dlc2action.data": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 2}, "dlc2action.metric.base_metric.Metric": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"dlc2action": {"tf": 1}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 2.6457513110645907}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.plot_confusion_matrix": {"tf": 1}, "dlc2action.project.project.Project.plot_predictions": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.dataset": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.exists": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.train": {"tf": 1}, "dlc2action.task.universal_task.Task.dataset": {"tf": 1}, "dlc2action.task.universal_task.Task.dataloader": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}}, "df": 23, "u": {"docs": {}, "df": 0, "e": {"1": {"docs": {"dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 4}, "2": {"docs": {"dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}}, "df": 4}, "docs": {"dlc2action": {"tf": 2}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor": {"tf": 1.4142135623730951}, "dlc2action.loss": {"tf": 1}, "dlc2action.loss.ms_tcn.MS_TCN_Loss.forward": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1}, "dlc2action.metric.metrics.Precision.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalPrecision.__init__": {"tf": 2}, "dlc2action.metric.metrics.Recall.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalRecall.__init__": {"tf": 2}, "dlc2action.metric.metrics.F1.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalF1.__init__": {"tf": 2}, "dlc2action.metric.metrics.Fbeta.__init__": {"tf": 2}, "dlc2action.metric.metrics.SegmentalFbeta.__init__": {"tf": 2}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}, "dlc2action.metric.metrics.Accuracy.calculate": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.EditDistance.calculate": {"tf": 1}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1}, "dlc2action.project.meta.SavedRuns.list_episodes": {"tf": 1}, "dlc2action.project.meta.Searches.save_search": {"tf": 1}, "dlc2action.project.project.Project.run_episode": {"tf": 1}, "dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.list_episodes": {"tf": 1}, "dlc2action.project.project.Project.list_predictions": {"tf": 1}, "dlc2action.project.project.Project.list_searches": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1.4142135623730951}, "dlc2action.ssl": {"tf": 1}, "dlc2action.ssl.base_ssl.SSLConstructor.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL.loss": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.check": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.get": {"tf": 2}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1.4142135623730951}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}, "dlc2action.utils.argrelmax": {"tf": 1}}, "df": 53, "s": {"docs": {"dlc2action": {"tf": 2.8284271247461903}, "dlc2action.data": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.EmptyAnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.annotation_store.ActionSegmentationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.annotation_store.DLCAnnotationStore": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore.__init__": {"tf": 1.4142135623730951}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1.7320508075688772}, "dlc2action.data.base_store.InputStore.get_tags": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.behaviors_dict": {"tf": 1}, "dlc2action.data.base_store.PoseInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_tags": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.generate_full_length_prediction": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.count_classes": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_unannotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_annotated_intervals": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_ids": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.set_normalization_stats": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.get_normalization_stats": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_likelihood": {"tf": 1}, "dlc2action.data.input_store.GeneralInputStore.get_tags": {"tf": 1}, "dlc2action.data.input_store.DLCTrackStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.DLCTrackletStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.Numpy3DInputStore.__init__": {"tf": 1}, "dlc2action.data.input_store.LoadedFeaturesInputStore": {"tf": 1.4142135623730951}, "dlc2action.data.input_store.SIMBAInputStore.__init__": {"tf": 1}, "dlc2action.feature_extraction": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor": {"tf": 1}, "dlc2action.feature_extraction.FeatureExtractor.extract_features": {"tf": 1.4142135623730951}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1}, "dlc2action.feature_extraction.KinematicExtractor.extract_features": {"tf": 1}, "dlc2action.metric.base_metric.Metric.calculate": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.Count.calculate": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.PKU_mAP.calculate": {"tf": 1.4142135623730951}, "dlc2action.project": {"tf": 1.4142135623730951}, "dlc2action.project.meta.Run.split_info": {"tf": 1}, "dlc2action.project.meta.Run.same_split_info": {"tf": 1}, "dlc2action.project.meta.Run.get_metric_log": {"tf": 1}, "dlc2action.project.meta.Run.get_behaviors_dict": {"tf": 1}, "dlc2action.project.meta.SavedRuns.update": {"tf": 1}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.project.Project.run_episodes": {"tf": 1}, "dlc2action.project.project.Project.run_hyperparameter_search": {"tf": 1}, "dlc2action.project.project.Project.run_prediction": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.project.project.Project.plot_episodes": {"tf": 1}, "dlc2action.project.project.Project.count_classes": {"tf": 1}, "dlc2action.project.project.Project.get_behavior_dictionary": {"tf": 1}, "dlc2action.project.project.Project.import_episodes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_function_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.complete_dataset_parameters": {"tf": 1.4142135623730951}, "dlc2action.task.task_dispatcher.TaskDispatcher.train": {"tf": 1.7320508075688772}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.behaviors_dict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.count_classes": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_bald_score": {"tf": 1}, "dlc2action.task.universal_task.Task.train": {"tf": 1.7320508075688772}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.set_keep_target_none": {"tf": 1}, "dlc2action.task.universal_task.Task.set_generate_ssl_input": {"tf": 1}, "dlc2action.task.universal_task.Task.count_classes": {"tf": 1}, "dlc2action.task.universal_task.Task.behaviors_dict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_uncertainty_score": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_bald_score": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer": {"tf": 1}, "dlc2action.transformer.base_transformer.Transformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.apply_threshold_hysteresis": {"tf": 1}, "dlc2action.utils.apply_threshold_max": {"tf": 1}}, "df": 83}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dlc2action": {"tf": 1.7320508075688772}, "dlc2action.data.annotation_store.CalMS21AnnotationStore": {"tf": 1.4142135623730951}, "dlc2action.data.dataset.BehaviorDataset.partition_train_test_val": {"tf": 3.1622776601683795}, "dlc2action.data.input_store.CalMS21InputStore": {"tf": 1.4142135623730951}, "dlc2action.project.meta.SavedRuns.save_episode": {"tf": 1}, "dlc2action.project.project.Project.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.evaluate_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.predict": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.generate_submission": {"tf": 1}, "dlc2action.task.task_dispatcher.TaskDispatcher.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.__init__": {"tf": 2}, "dlc2action.task.universal_task.Task.evaluate_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.evaluate": {"tf": 1}, "dlc2action.task.universal_task.Task.predict": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_full_length_prediction": {"tf": 1}, "dlc2action.task.universal_task.Task.generate_submission": {"tf": 1}, "dlc2action.task.universal_task.Task.visualize_results": {"tf": 1}, "dlc2action.task.universal_task.Task.set_dataloaders": {"tf": 1}}, "df": 20}}}}}}, "e": {"docs": {"dlc2action.project.meta.Searches.save_search": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.dataset.BehaviorDataset.find_valleys": {"tf": 1}, "dlc2action.data.dataset.BehaviorDataset.valleys_union": {"tf": 2}, "dlc2action.data.dataset.BehaviorDataset.valleys_intersection": {"tf": 2}, "dlc2action.utils": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1.4142135623730951}, "dlc2action.task.universal_task.MyDataParallel": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.loss.tcc.regression_loss": {"tf": 2.449489742783178}}, "df": 1}}}}}, "s": {"docs": {"dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1.7320508075688772}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.project.project.Project.run_default_hyperparameter_search": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action": {"tf": 5.830951894845301}}, "df": 1}}}}, "x": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.4142135623730951}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1.7320508075688772}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1.7320508075688772}, "dlc2action.model.base_model.Model.extract_features": {"tf": 1}, "dlc2action.model.base_model.Model.forward": {"tf": 1.4142135623730951}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}, "dlc2action.utils.decide_boundary_prob_with_similarity": {"tf": 1}}, "df": 8, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "x": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.BorisAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.PKUMMDAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.CSVAnnotationStore.__init__": {"tf": 1}, "dlc2action.data.annotation_store.SIMBAAnnotationStore.__init__": {"tf": 1}}, "df": 5}}}, "s": {"docs": {"dlc2action.model.base_model.Model.forward": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.ssl.contrastive.ContrastiveSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.__init__": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveMaskedSSL.loss": {"tf": 1}, "dlc2action.ssl.contrastive.ContrastiveRegressionSSL.loss": {"tf": 1}, "dlc2action.ssl.tcc.TCCSSL": {"tf": 1}}, "df": 8}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dlc2action.task.universal_task.MyDataParallel": {"tf": 1}, "dlc2action.task.universal_task.MyDataParallel.state_dict": {"tf": 1}}, "df": 2}}}}}}}}, "z": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.4142135623730951}, "dlc2action.utils.rotation_matrix_3d": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}}, "df": 1, "s": {"docs": {"dlc2action.data.annotation_store.ActionSegmentationStore.count_classes": {"tf": 1}, "dlc2action.data.base_store.AnnotationStore.count_classes": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalRecall": {"tf": 1}, "dlc2action.metric.metrics.SemiSegmentalPrecision": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dlc2action.feature_extraction.KinematicExtractor": {"tf": 2.449489742783178}, "dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 3.4641016151377544}}, "df": 2, "s": {"docs": {"dlc2action.feature_extraction.KinematicExtractor.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"dlc2action.transformer.kinematic.KinematicTransformer": {"tf": 1}, "dlc2action.transformer.kinematic.KinematicTransformer.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();